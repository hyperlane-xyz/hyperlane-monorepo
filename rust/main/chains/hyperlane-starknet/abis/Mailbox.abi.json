{
  "sierra_program": [],
  "sierra_program_debug_info": {
    "type_names": [],
    "libfunc_names": [],
    "user_func_names": []
  },
  "contract_class_version": "0.1.0",
  "entry_points_by_type": {
    "EXTERNAL": [
      {
        "selector": "0x52580a92c73f4428f1a260c5d768ef462b25955307de00f99957df119865d",
        "function_idx": 19
      },
      {
        "selector": "0x498e79cdd6cfe2a71cb6b001301ef864f39facf58c652d93168adeb8947d04",
        "function_idx": 15
      },
      {
        "selector": "0xeea79de9efef843f1860203b991a48937193904c0a53cbfb12c6fc6e75fa00",
        "function_idx": 8
      },
      {
        "selector": "0xf2f7c15cbe06c8d94597cd91fd7f3369eae842359235712def5584f8d270cd",
        "function_idx": 0
      },
      {
        "selector": "0x1307a3ebd8006ac4c5df26c7265c2ff9f0b98841fa671f5c71385e0feb2d3f8",
        "function_idx": 5
      },
      {
        "selector": "0x2016836a56b71f0d02689e69e326f4f4c1b9057164ef592671cf0d37c8040c0",
        "function_idx": 17
      },
      {
        "selector": "0x221beddfec0ba27724e26defa72024c1ea851b02a3da5b1498cdd352ca54f18",
        "function_idx": 14
      },
      {
        "selector": "0x23f18aad6214298c2f2c376d7e4836432c68e078bad23d3c5574423a083dd1a",
        "function_idx": 3
      },
      {
        "selector": "0x23ff61cb0e5910885838cd8ef8ada1b8f9d2de07013173e4858815e6905aa68",
        "function_idx": 9
      },
      {
        "selector": "0x25ee6f3a93601546958c32778d7b66d5cdedcc71e29e10c4cf7747598afc518",
        "function_idx": 12
      },
      {
        "selector": "0x27f1023a052aedcf8c0dab6869b702e02b3e7cc96431c99409a69e4c95f0d97",
        "function_idx": 6
      },
      {
        "selector": "0x2a3bb1eaa05b77c4b0eeee0116a3177c6d62319dd7149ae148185d9e09de74a",
        "function_idx": 18
      },
      {
        "selector": "0x2b1577440dd7bedf920cb6de2f9fc6bf7ba98c78c85a3fa1f8311aac95e1759",
        "function_idx": 11
      },
      {
        "selector": "0x2c370a449a90849afc76b43058d9169973c816ad3028a975b1b9bc24ecc18df",
        "function_idx": 4
      },
      {
        "selector": "0x31d8225e997b2b933b12d97dc4787c57c41e2339ea3ddc38d599f7cb82b4652",
        "function_idx": 13
      },
      {
        "selector": "0x32a26006662e477999810d609f831c3ba1c0dbca5ebecfbf3a9e7b15293adeb",
        "function_idx": 16
      },
      {
        "selector": "0x39bc713089d7d79393c97324b988291084b170ee1bdede69a9e13fbd22ad568",
        "function_idx": 2
      },
      {
        "selector": "0x3a0db670d7d22dff93bb2ef379ce265eca7ba642d223e43cc81271752c8c98d",
        "function_idx": 1
      },
      {
        "selector": "0x3a516033ffcf850d573464f38170d68f9c473d07f72de9522d6e3f1a60977d4",
        "function_idx": 7
      },
      {
        "selector": "0x3c1d0dad59fc613e66bf1d98bc8130146294826d5cb1d7eff19d88dc2200120",
        "function_idx": 10
      }
    ],
    "L1_HANDLER": [],
    "CONSTRUCTOR": [
      {
        "selector": "0x28ffe4ff0f226a9107253e17a904099aa4f63a02a5621de0576e5aa71bc5194",
        "function_idx": 20
      }
    ]
  },
  "abi": [
    {
      "type": "impl",
      "name": "Upgradeable",
      "interface_name": "openzeppelin::upgrades::interface::IUpgradeable"
    },
    {
      "type": "interface",
      "name": "openzeppelin::upgrades::interface::IUpgradeable",
      "items": [
        {
          "type": "function",
          "name": "upgrade",
          "inputs": [
            {
              "name": "new_class_hash",
              "type": "core::starknet::class_hash::ClassHash"
            }
          ],
          "outputs": [],
          "state_mutability": "external"
        }
      ]
    },
    {
      "type": "impl",
      "name": "IMailboxImpl",
      "interface_name": "hyperlane_starknet::interfaces::IMailbox"
    },
    {
      "type": "struct",
      "name": "core::integer::u256",
      "members": [
        {
          "name": "low",
          "type": "core::integer::u128"
        },
        {
          "name": "high",
          "type": "core::integer::u128"
        }
      ]
    },
    {
      "type": "enum",
      "name": "core::bool",
      "variants": [
        {
          "name": "False",
          "type": "()"
        },
        {
          "name": "True",
          "type": "()"
        }
      ]
    },
    {
      "type": "struct",
      "name": "alexandria_bytes::bytes::Bytes",
      "members": [
        {
          "name": "size",
          "type": "core::integer::u32"
        },
        {
          "name": "data",
          "type": "core::array::Array::<core::integer::u128>"
        }
      ]
    },
    {
      "type": "enum",
      "name": "core::option::Option::<alexandria_bytes::bytes::Bytes>",
      "variants": [
        {
          "name": "Some",
          "type": "alexandria_bytes::bytes::Bytes"
        },
        {
          "name": "None",
          "type": "()"
        }
      ]
    },
    {
      "type": "enum",
      "name": "core::option::Option::<core::starknet::contract_address::ContractAddress>",
      "variants": [
        {
          "name": "Some",
          "type": "core::starknet::contract_address::ContractAddress"
        },
        {
          "name": "None",
          "type": "()"
        }
      ]
    },
    {
      "type": "struct",
      "name": "hyperlane_starknet::contracts::libs::message::Message",
      "members": [
        {
          "name": "version",
          "type": "core::integer::u8"
        },
        {
          "name": "nonce",
          "type": "core::integer::u32"
        },
        {
          "name": "origin",
          "type": "core::integer::u32"
        },
        {
          "name": "sender",
          "type": "core::integer::u256"
        },
        {
          "name": "destination",
          "type": "core::integer::u32"
        },
        {
          "name": "recipient",
          "type": "core::integer::u256"
        },
        {
          "name": "body",
          "type": "alexandria_bytes::bytes::Bytes"
        }
      ]
    },
    {
      "type": "interface",
      "name": "hyperlane_starknet::interfaces::IMailbox",
      "items": [
        {
          "type": "function",
          "name": "get_local_domain",
          "inputs": [],
          "outputs": [
            {
              "type": "core::integer::u32"
            }
          ],
          "state_mutability": "view"
        },
        {
          "type": "function",
          "name": "delivered",
          "inputs": [
            {
              "name": "_message_id",
              "type": "core::integer::u256"
            }
          ],
          "outputs": [
            {
              "type": "core::bool"
            }
          ],
          "state_mutability": "view"
        },
        {
          "type": "function",
          "name": "nonce",
          "inputs": [],
          "outputs": [
            {
              "type": "core::integer::u32"
            }
          ],
          "state_mutability": "view"
        },
        {
          "type": "function",
          "name": "get_default_ism",
          "inputs": [],
          "outputs": [
            {
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ],
          "state_mutability": "view"
        },
        {
          "type": "function",
          "name": "get_default_hook",
          "inputs": [],
          "outputs": [
            {
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ],
          "state_mutability": "view"
        },
        {
          "type": "function",
          "name": "get_required_hook",
          "inputs": [],
          "outputs": [
            {
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ],
          "state_mutability": "view"
        },
        {
          "type": "function",
          "name": "get_latest_dispatched_id",
          "inputs": [],
          "outputs": [
            {
              "type": "core::integer::u256"
            }
          ],
          "state_mutability": "view"
        },
        {
          "type": "function",
          "name": "dispatch",
          "inputs": [
            {
              "name": "_destination_domain",
              "type": "core::integer::u32"
            },
            {
              "name": "_recipient_address",
              "type": "core::integer::u256"
            },
            {
              "name": "_message_body",
              "type": "alexandria_bytes::bytes::Bytes"
            },
            {
              "name": "_fee_amount",
              "type": "core::integer::u256"
            },
            {
              "name": "_custom_hook_metadata",
              "type": "core::option::Option::<alexandria_bytes::bytes::Bytes>"
            },
            {
              "name": "_custom_hook",
              "type": "core::option::Option::<core::starknet::contract_address::ContractAddress>"
            }
          ],
          "outputs": [
            {
              "type": "core::integer::u256"
            }
          ],
          "state_mutability": "external"
        },
        {
          "type": "function",
          "name": "quote_dispatch",
          "inputs": [
            {
              "name": "_destination_domain",
              "type": "core::integer::u32"
            },
            {
              "name": "_recipient_address",
              "type": "core::integer::u256"
            },
            {
              "name": "_message_body",
              "type": "alexandria_bytes::bytes::Bytes"
            },
            {
              "name": "_custom_hook_metadata",
              "type": "core::option::Option::<alexandria_bytes::bytes::Bytes>"
            },
            {
              "name": "_custom_hook",
              "type": "core::option::Option::<core::starknet::contract_address::ContractAddress>"
            }
          ],
          "outputs": [
            {
              "type": "core::integer::u256"
            }
          ],
          "state_mutability": "view"
        },
        {
          "type": "function",
          "name": "process",
          "inputs": [
            {
              "name": "_metadata",
              "type": "alexandria_bytes::bytes::Bytes"
            },
            {
              "name": "_message",
              "type": "hyperlane_starknet::contracts::libs::message::Message"
            }
          ],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "type": "function",
          "name": "recipient_ism",
          "inputs": [
            {
              "name": "_recipient",
              "type": "core::integer::u256"
            }
          ],
          "outputs": [
            {
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ],
          "state_mutability": "view"
        },
        {
          "type": "function",
          "name": "set_default_ism",
          "inputs": [
            {
              "name": "_module",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "type": "function",
          "name": "set_default_hook",
          "inputs": [
            {
              "name": "_hook",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "type": "function",
          "name": "set_required_hook",
          "inputs": [
            {
              "name": "_hook",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "type": "function",
          "name": "processor",
          "inputs": [
            {
              "name": "_id",
              "type": "core::integer::u256"
            }
          ],
          "outputs": [
            {
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ],
          "state_mutability": "view"
        },
        {
          "type": "function",
          "name": "processed_at",
          "inputs": [
            {
              "name": "_id",
              "type": "core::integer::u256"
            }
          ],
          "outputs": [
            {
              "type": "core::integer::u64"
            }
          ],
          "state_mutability": "view"
        }
      ]
    },
    {
      "type": "impl",
      "name": "OwnableImpl",
      "interface_name": "openzeppelin::access::ownable::interface::IOwnable"
    },
    {
      "type": "interface",
      "name": "openzeppelin::access::ownable::interface::IOwnable",
      "items": [
        {
          "type": "function",
          "name": "owner",
          "inputs": [],
          "outputs": [
            {
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ],
          "state_mutability": "view"
        },
        {
          "type": "function",
          "name": "transfer_ownership",
          "inputs": [
            {
              "name": "new_owner",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "type": "function",
          "name": "renounce_ownership",
          "inputs": [],
          "outputs": [],
          "state_mutability": "external"
        }
      ]
    },
    {
      "type": "constructor",
      "name": "constructor",
      "inputs": [
        {
          "name": "_local_domain",
          "type": "core::integer::u32"
        },
        {
          "name": "owner",
          "type": "core::starknet::contract_address::ContractAddress"
        },
        {
          "name": "_default_ism",
          "type": "core::starknet::contract_address::ContractAddress"
        },
        {
          "name": "_default_hook",
          "type": "core::starknet::contract_address::ContractAddress"
        },
        {
          "name": "_required_hook",
          "type": "core::starknet::contract_address::ContractAddress"
        }
      ]
    },
    {
      "type": "event",
      "name": "hyperlane_starknet::contracts::mailbox::mailbox::DefaultIsmSet",
      "kind": "struct",
      "members": [
        {
          "name": "module",
          "type": "core::starknet::contract_address::ContractAddress",
          "kind": "data"
        }
      ]
    },
    {
      "type": "event",
      "name": "hyperlane_starknet::contracts::mailbox::mailbox::DefaultHookSet",
      "kind": "struct",
      "members": [
        {
          "name": "hook",
          "type": "core::starknet::contract_address::ContractAddress",
          "kind": "data"
        }
      ]
    },
    {
      "type": "event",
      "name": "hyperlane_starknet::contracts::mailbox::mailbox::RequiredHookSet",
      "kind": "struct",
      "members": [
        {
          "name": "hook",
          "type": "core::starknet::contract_address::ContractAddress",
          "kind": "data"
        }
      ]
    },
    {
      "type": "event",
      "name": "hyperlane_starknet::contracts::mailbox::mailbox::Process",
      "kind": "struct",
      "members": [
        {
          "name": "origin",
          "type": "core::integer::u32",
          "kind": "data"
        },
        {
          "name": "sender",
          "type": "core::integer::u256",
          "kind": "data"
        },
        {
          "name": "recipient",
          "type": "core::integer::u256",
          "kind": "data"
        }
      ]
    },
    {
      "type": "event",
      "name": "hyperlane_starknet::contracts::mailbox::mailbox::ProcessId",
      "kind": "struct",
      "members": [
        {
          "name": "id",
          "type": "core::integer::u256",
          "kind": "data"
        }
      ]
    },
    {
      "type": "event",
      "name": "hyperlane_starknet::contracts::mailbox::mailbox::Dispatch",
      "kind": "struct",
      "members": [
        {
          "name": "sender",
          "type": "core::integer::u256",
          "kind": "data"
        },
        {
          "name": "destination_domain",
          "type": "core::integer::u32",
          "kind": "data"
        },
        {
          "name": "recipient_address",
          "type": "core::integer::u256",
          "kind": "data"
        },
        {
          "name": "message",
          "type": "hyperlane_starknet::contracts::libs::message::Message",
          "kind": "data"
        }
      ]
    },
    {
      "type": "event",
      "name": "hyperlane_starknet::contracts::mailbox::mailbox::DispatchId",
      "kind": "struct",
      "members": [
        {
          "name": "id",
          "type": "core::integer::u256",
          "kind": "data"
        }
      ]
    },
    {
      "type": "event",
      "name": "openzeppelin::access::ownable::ownable::OwnableComponent::OwnershipTransferred",
      "kind": "struct",
      "members": [
        {
          "name": "previous_owner",
          "type": "core::starknet::contract_address::ContractAddress",
          "kind": "key"
        },
        {
          "name": "new_owner",
          "type": "core::starknet::contract_address::ContractAddress",
          "kind": "key"
        }
      ]
    },
    {
      "type": "event",
      "name": "openzeppelin::access::ownable::ownable::OwnableComponent::OwnershipTransferStarted",
      "kind": "struct",
      "members": [
        {
          "name": "previous_owner",
          "type": "core::starknet::contract_address::ContractAddress",
          "kind": "key"
        },
        {
          "name": "new_owner",
          "type": "core::starknet::contract_address::ContractAddress",
          "kind": "key"
        }
      ]
    },
    {
      "type": "event",
      "name": "openzeppelin::access::ownable::ownable::OwnableComponent::Event",
      "kind": "enum",
      "variants": [
        {
          "name": "OwnershipTransferred",
          "type": "openzeppelin::access::ownable::ownable::OwnableComponent::OwnershipTransferred",
          "kind": "nested"
        },
        {
          "name": "OwnershipTransferStarted",
          "type": "openzeppelin::access::ownable::ownable::OwnableComponent::OwnershipTransferStarted",
          "kind": "nested"
        }
      ]
    },
    {
      "type": "event",
      "name": "openzeppelin::upgrades::upgradeable::UpgradeableComponent::Upgraded",
      "kind": "struct",
      "members": [
        {
          "name": "class_hash",
          "type": "core::starknet::class_hash::ClassHash",
          "kind": "data"
        }
      ]
    },
    {
      "type": "event",
      "name": "openzeppelin::upgrades::upgradeable::UpgradeableComponent::Event",
      "kind": "enum",
      "variants": [
        {
          "name": "Upgraded",
          "type": "openzeppelin::upgrades::upgradeable::UpgradeableComponent::Upgraded",
          "kind": "nested"
        }
      ]
    },
    {
      "type": "event",
      "name": "hyperlane_starknet::contracts::mailbox::mailbox::Event",
      "kind": "enum",
      "variants": [
        {
          "name": "DefaultIsmSet",
          "type": "hyperlane_starknet::contracts::mailbox::mailbox::DefaultIsmSet",
          "kind": "nested"
        },
        {
          "name": "DefaultHookSet",
          "type": "hyperlane_starknet::contracts::mailbox::mailbox::DefaultHookSet",
          "kind": "nested"
        },
        {
          "name": "RequiredHookSet",
          "type": "hyperlane_starknet::contracts::mailbox::mailbox::RequiredHookSet",
          "kind": "nested"
        },
        {
          "name": "Process",
          "type": "hyperlane_starknet::contracts::mailbox::mailbox::Process",
          "kind": "nested"
        },
        {
          "name": "ProcessId",
          "type": "hyperlane_starknet::contracts::mailbox::mailbox::ProcessId",
          "kind": "nested"
        },
        {
          "name": "Dispatch",
          "type": "hyperlane_starknet::contracts::mailbox::mailbox::Dispatch",
          "kind": "nested"
        },
        {
          "name": "DispatchId",
          "type": "hyperlane_starknet::contracts::mailbox::mailbox::DispatchId",
          "kind": "nested"
        },
        {
          "name": "OwnableEvent",
          "type": "openzeppelin::access::ownable::ownable::OwnableComponent::Event",
          "kind": "flat"
        },
        {
          "name": "UpgradeableEvent",
          "type": "openzeppelin::upgrades::upgradeable::UpgradeableComponent::Event",
          "kind": "flat"
        }
      ]
    }
  ]
}
