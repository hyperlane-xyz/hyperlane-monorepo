{
  "sierra_program": [],
  "sierra_program_debug_info": {
    "type_names": [],
    "libfunc_names": [],
    "user_func_names": []
  },
  "contract_class_version": "0.1.0",
  "entry_points_by_type": {
    "EXTERNAL": [
      {
        "selector": "0x52580a92c73f4428f1a260c5d768ef462b25955307de00f99957df119865d",
        "function_idx": 10
      },
      {
        "selector": "0x2306b6ab1b4c67429442feb1e6d238135a6cfcaa471a01b0e336f01b048e38",
        "function_idx": 0
      },
      {
        "selector": "0x19f4427e3a877bb0dcb0cc4599a14d64a79d74c3a952b2bed3228b2bd1a6e2a",
        "function_idx": 4
      },
      {
        "selector": "0x2016836a56b71f0d02689e69e326f4f4c1b9057164ef592671cf0d37c8040c0",
        "function_idx": 8
      },
      {
        "selector": "0x2362d30370bc988403e5d552c180d4fd3457dfcd9343a2f01541ff4a34eba0e",
        "function_idx": 5
      },
      {
        "selector": "0x2510336c6497719adadc7ade198c988520f3349445f074dc729df0f3c2b12ad",
        "function_idx": 2
      },
      {
        "selector": "0x2a3bb1eaa05b77c4b0eeee0116a3177c6d62319dd7149ae148185d9e09de74a",
        "function_idx": 9
      },
      {
        "selector": "0x2c66cad06fe14fdb6ce9297d80d32f24d7428996d0045cbf90cc345c677ba16",
        "function_idx": 1
      },
      {
        "selector": "0x2fedc7c2dd415a359b9a4bde987af7ddb0cd5d0de420a9f12c89973659bf5cf",
        "function_idx": 6
      },
      {
        "selector": "0x315f8ce26660fadc073a61f41ca926a27974fa7206c22ee52884b7d186de4ea",
        "function_idx": 3
      },
      {
        "selector": "0x31d8225e997b2b933b12d97dc4787c57c41e2339ea3ddc38d599f7cb82b4652",
        "function_idx": 7
      }
    ],
    "L1_HANDLER": [],
    "CONSTRUCTOR": [
      {
        "selector": "0x28ffe4ff0f226a9107253e17a904099aa4f63a02a5621de0576e5aa71bc5194",
        "function_idx": 11
      }
    ]
  },
  "abi": [
    {
      "type": "impl",
      "name": "IMerkleTreeHookImpl",
      "interface_name": "hyperlane_starknet::interfaces::IMerkleTreeHook"
    },
    {
      "type": "struct",
      "name": "core::integer::u256",
      "members": [
        {
          "name": "low",
          "type": "core::integer::u128"
        },
        {
          "name": "high",
          "type": "core::integer::u128"
        }
      ]
    },
    {
      "type": "struct",
      "name": "hyperlane_starknet::utils::keccak256::ByteData",
      "members": [
        {
          "name": "value",
          "type": "core::integer::u256"
        },
        {
          "name": "size",
          "type": "core::integer::u32"
        }
      ]
    },
    {
      "type": "struct",
      "name": "hyperlane_starknet::contracts::hooks::merkle_tree_hook::merkle_tree_hook::Tree",
      "members": [
        {
          "name": "branch",
          "type": "core::array::Array::<hyperlane_starknet::utils::keccak256::ByteData>"
        },
        {
          "name": "count",
          "type": "core::integer::u256"
        }
      ]
    },
    {
      "type": "interface",
      "name": "hyperlane_starknet::interfaces::IMerkleTreeHook",
      "items": [
        {
          "type": "function",
          "name": "count",
          "inputs": [],
          "outputs": [
            {
              "type": "core::integer::u32"
            }
          ],
          "state_mutability": "view"
        },
        {
          "type": "function",
          "name": "root",
          "inputs": [],
          "outputs": [
            {
              "type": "core::integer::u256"
            }
          ],
          "state_mutability": "view"
        },
        {
          "type": "function",
          "name": "tree",
          "inputs": [],
          "outputs": [
            {
              "type": "hyperlane_starknet::contracts::hooks::merkle_tree_hook::merkle_tree_hook::Tree"
            }
          ],
          "state_mutability": "view"
        },
        {
          "type": "function",
          "name": "latest_checkpoint",
          "inputs": [],
          "outputs": [
            {
              "type": "(core::integer::u256, core::integer::u32)"
            }
          ],
          "state_mutability": "view"
        }
      ]
    },
    {
      "type": "impl",
      "name": "IPostDispatchHookImpl",
      "interface_name": "hyperlane_starknet::interfaces::IPostDispatchHook"
    },
    {
      "type": "enum",
      "name": "hyperlane_starknet::interfaces::Types",
      "variants": [
        {
          "name": "UNUSED",
          "type": "()"
        },
        {
          "name": "ROUTING",
          "type": "()"
        },
        {
          "name": "AGGREGATION",
          "type": "()"
        },
        {
          "name": "MERKLE_TREE",
          "type": "()"
        },
        {
          "name": "INTERCHAIN_GAS_PAYMASTER",
          "type": "()"
        },
        {
          "name": "FALLBACK_ROUTING",
          "type": "()"
        },
        {
          "name": "ID_AUTH_ISM",
          "type": "()"
        },
        {
          "name": "PAUSABLE",
          "type": "()"
        },
        {
          "name": "PROTOCOL_FEE",
          "type": "()"
        },
        {
          "name": "LAYER_ZERO_V1",
          "type": "()"
        },
        {
          "name": "Rate_Limited_Hook",
          "type": "()"
        }
      ]
    },
    {
      "type": "struct",
      "name": "alexandria_bytes::bytes::Bytes",
      "members": [
        {
          "name": "size",
          "type": "core::integer::u32"
        },
        {
          "name": "data",
          "type": "core::array::Array::<core::integer::u128>"
        }
      ]
    },
    {
      "type": "enum",
      "name": "core::bool",
      "variants": [
        {
          "name": "False",
          "type": "()"
        },
        {
          "name": "True",
          "type": "()"
        }
      ]
    },
    {
      "type": "struct",
      "name": "hyperlane_starknet::contracts::libs::message::Message",
      "members": [
        {
          "name": "version",
          "type": "core::integer::u8"
        },
        {
          "name": "nonce",
          "type": "core::integer::u32"
        },
        {
          "name": "origin",
          "type": "core::integer::u32"
        },
        {
          "name": "sender",
          "type": "core::integer::u256"
        },
        {
          "name": "destination",
          "type": "core::integer::u32"
        },
        {
          "name": "recipient",
          "type": "core::integer::u256"
        },
        {
          "name": "body",
          "type": "alexandria_bytes::bytes::Bytes"
        }
      ]
    },
    {
      "type": "interface",
      "name": "hyperlane_starknet::interfaces::IPostDispatchHook",
      "items": [
        {
          "type": "function",
          "name": "hook_type",
          "inputs": [],
          "outputs": [
            {
              "type": "hyperlane_starknet::interfaces::Types"
            }
          ],
          "state_mutability": "view"
        },
        {
          "type": "function",
          "name": "supports_metadata",
          "inputs": [
            {
              "name": "_metadata",
              "type": "alexandria_bytes::bytes::Bytes"
            }
          ],
          "outputs": [
            {
              "type": "core::bool"
            }
          ],
          "state_mutability": "view"
        },
        {
          "type": "function",
          "name": "post_dispatch",
          "inputs": [
            {
              "name": "_metadata",
              "type": "alexandria_bytes::bytes::Bytes"
            },
            {
              "name": "_message",
              "type": "hyperlane_starknet::contracts::libs::message::Message"
            },
            {
              "name": "_fee_amount",
              "type": "core::integer::u256"
            }
          ],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "type": "function",
          "name": "quote_dispatch",
          "inputs": [
            {
              "name": "_metadata",
              "type": "alexandria_bytes::bytes::Bytes"
            },
            {
              "name": "_message",
              "type": "hyperlane_starknet::contracts::libs::message::Message"
            }
          ],
          "outputs": [
            {
              "type": "core::integer::u256"
            }
          ],
          "state_mutability": "external"
        }
      ]
    },
    {
      "type": "impl",
      "name": "OwnableImpl",
      "interface_name": "openzeppelin::access::ownable::interface::IOwnable"
    },
    {
      "type": "interface",
      "name": "openzeppelin::access::ownable::interface::IOwnable",
      "items": [
        {
          "type": "function",
          "name": "owner",
          "inputs": [],
          "outputs": [
            {
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ],
          "state_mutability": "view"
        },
        {
          "type": "function",
          "name": "transfer_ownership",
          "inputs": [
            {
              "name": "new_owner",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "type": "function",
          "name": "renounce_ownership",
          "inputs": [],
          "outputs": [],
          "state_mutability": "external"
        }
      ]
    },
    {
      "type": "constructor",
      "name": "constructor",
      "inputs": [
        {
          "name": "_mailbox",
          "type": "core::starknet::contract_address::ContractAddress"
        },
        {
          "name": "_owner",
          "type": "core::starknet::contract_address::ContractAddress"
        }
      ]
    },
    {
      "type": "event",
      "name": "hyperlane_starknet::contracts::hooks::merkle_tree_hook::merkle_tree_hook::InsertedIntoTree",
      "kind": "struct",
      "members": [
        {
          "name": "id",
          "type": "core::integer::u256",
          "kind": "data"
        },
        {
          "name": "index",
          "type": "core::integer::u32",
          "kind": "data"
        }
      ]
    },
    {
      "type": "event",
      "name": "openzeppelin::access::ownable::ownable::OwnableComponent::OwnershipTransferred",
      "kind": "struct",
      "members": [
        {
          "name": "previous_owner",
          "type": "core::starknet::contract_address::ContractAddress",
          "kind": "key"
        },
        {
          "name": "new_owner",
          "type": "core::starknet::contract_address::ContractAddress",
          "kind": "key"
        }
      ]
    },
    {
      "type": "event",
      "name": "openzeppelin::access::ownable::ownable::OwnableComponent::OwnershipTransferStarted",
      "kind": "struct",
      "members": [
        {
          "name": "previous_owner",
          "type": "core::starknet::contract_address::ContractAddress",
          "kind": "key"
        },
        {
          "name": "new_owner",
          "type": "core::starknet::contract_address::ContractAddress",
          "kind": "key"
        }
      ]
    },
    {
      "type": "event",
      "name": "openzeppelin::access::ownable::ownable::OwnableComponent::Event",
      "kind": "enum",
      "variants": [
        {
          "name": "OwnershipTransferred",
          "type": "openzeppelin::access::ownable::ownable::OwnableComponent::OwnershipTransferred",
          "kind": "nested"
        },
        {
          "name": "OwnershipTransferStarted",
          "type": "openzeppelin::access::ownable::ownable::OwnableComponent::OwnershipTransferStarted",
          "kind": "nested"
        }
      ]
    },
    {
      "type": "event",
      "name": "hyperlane_starknet::contracts::client::mailboxclient_component::MailboxclientComponent::Event",
      "kind": "enum",
      "variants": []
    },
    {
      "type": "event",
      "name": "hyperlane_starknet::contracts::hooks::merkle_tree_hook::merkle_tree_hook::Event",
      "kind": "enum",
      "variants": [
        {
          "name": "InsertedIntoTree",
          "type": "hyperlane_starknet::contracts::hooks::merkle_tree_hook::merkle_tree_hook::InsertedIntoTree",
          "kind": "nested"
        },
        {
          "name": "OwnableEvent",
          "type": "openzeppelin::access::ownable::ownable::OwnableComponent::Event",
          "kind": "flat"
        },
        {
          "name": "MailboxclientEvent",
          "type": "hyperlane_starknet::contracts::client::mailboxclient_component::MailboxclientComponent::Event",
          "kind": "flat"
        }
      ]
    }
  ]
}
