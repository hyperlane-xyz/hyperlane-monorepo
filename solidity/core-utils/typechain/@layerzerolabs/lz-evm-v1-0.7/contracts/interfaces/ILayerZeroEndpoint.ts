/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { FunctionFragment, Result } from '@ethersproject/abi';
import type { Listener, Provider } from '@ethersproject/providers';
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PayableOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from 'ethers';

import type {
  OnEvent,
  TypedEvent,
  TypedEventFilter,
  TypedListener,
} from '../../../../common.js';

export interface ILayerZeroEndpointInterface extends utils.Interface {
  functions: {
    'estimateFees(uint16,address,bytes,bool,bytes)': FunctionFragment;
    'forceResumeReceive(uint16,bytes)': FunctionFragment;
    'getChainId()': FunctionFragment;
    'getConfig(uint16,uint16,address,uint256)': FunctionFragment;
    'getInboundNonce(uint16,bytes)': FunctionFragment;
    'getOutboundNonce(uint16,address)': FunctionFragment;
    'getReceiveLibraryAddress(address)': FunctionFragment;
    'getReceiveVersion(address)': FunctionFragment;
    'getSendLibraryAddress(address)': FunctionFragment;
    'getSendVersion(address)': FunctionFragment;
    'hasStoredPayload(uint16,bytes)': FunctionFragment;
    'isReceivingPayload()': FunctionFragment;
    'isSendingPayload()': FunctionFragment;
    'receivePayload(uint16,bytes,address,uint64,uint256,bytes)': FunctionFragment;
    'retryPayload(uint16,bytes,bytes)': FunctionFragment;
    'send(uint16,bytes,bytes,address,address,bytes)': FunctionFragment;
    'setConfig(uint16,uint16,uint256,bytes)': FunctionFragment;
    'setReceiveVersion(uint16)': FunctionFragment;
    'setSendVersion(uint16)': FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | 'estimateFees'
      | 'estimateFees(uint16,address,bytes,bool,bytes)'
      | 'forceResumeReceive'
      | 'forceResumeReceive(uint16,bytes)'
      | 'getChainId'
      | 'getChainId()'
      | 'getConfig'
      | 'getConfig(uint16,uint16,address,uint256)'
      | 'getInboundNonce'
      | 'getInboundNonce(uint16,bytes)'
      | 'getOutboundNonce'
      | 'getOutboundNonce(uint16,address)'
      | 'getReceiveLibraryAddress'
      | 'getReceiveLibraryAddress(address)'
      | 'getReceiveVersion'
      | 'getReceiveVersion(address)'
      | 'getSendLibraryAddress'
      | 'getSendLibraryAddress(address)'
      | 'getSendVersion'
      | 'getSendVersion(address)'
      | 'hasStoredPayload'
      | 'hasStoredPayload(uint16,bytes)'
      | 'isReceivingPayload'
      | 'isReceivingPayload()'
      | 'isSendingPayload'
      | 'isSendingPayload()'
      | 'receivePayload'
      | 'receivePayload(uint16,bytes,address,uint64,uint256,bytes)'
      | 'retryPayload'
      | 'retryPayload(uint16,bytes,bytes)'
      | 'send'
      | 'send(uint16,bytes,bytes,address,address,bytes)'
      | 'setConfig'
      | 'setConfig(uint16,uint16,uint256,bytes)'
      | 'setReceiveVersion'
      | 'setReceiveVersion(uint16)'
      | 'setSendVersion'
      | 'setSendVersion(uint16)',
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: 'estimateFees',
    values: [BigNumberish, string, BytesLike, boolean, BytesLike],
  ): string;
  encodeFunctionData(
    functionFragment: 'estimateFees(uint16,address,bytes,bool,bytes)',
    values: [BigNumberish, string, BytesLike, boolean, BytesLike],
  ): string;
  encodeFunctionData(
    functionFragment: 'forceResumeReceive',
    values: [BigNumberish, BytesLike],
  ): string;
  encodeFunctionData(
    functionFragment: 'forceResumeReceive(uint16,bytes)',
    values: [BigNumberish, BytesLike],
  ): string;
  encodeFunctionData(
    functionFragment: 'getChainId',
    values?: undefined,
  ): string;
  encodeFunctionData(
    functionFragment: 'getChainId()',
    values?: undefined,
  ): string;
  encodeFunctionData(
    functionFragment: 'getConfig',
    values: [BigNumberish, BigNumberish, string, BigNumberish],
  ): string;
  encodeFunctionData(
    functionFragment: 'getConfig(uint16,uint16,address,uint256)',
    values: [BigNumberish, BigNumberish, string, BigNumberish],
  ): string;
  encodeFunctionData(
    functionFragment: 'getInboundNonce',
    values: [BigNumberish, BytesLike],
  ): string;
  encodeFunctionData(
    functionFragment: 'getInboundNonce(uint16,bytes)',
    values: [BigNumberish, BytesLike],
  ): string;
  encodeFunctionData(
    functionFragment: 'getOutboundNonce',
    values: [BigNumberish, string],
  ): string;
  encodeFunctionData(
    functionFragment: 'getOutboundNonce(uint16,address)',
    values: [BigNumberish, string],
  ): string;
  encodeFunctionData(
    functionFragment: 'getReceiveLibraryAddress',
    values: [string],
  ): string;
  encodeFunctionData(
    functionFragment: 'getReceiveLibraryAddress(address)',
    values: [string],
  ): string;
  encodeFunctionData(
    functionFragment: 'getReceiveVersion',
    values: [string],
  ): string;
  encodeFunctionData(
    functionFragment: 'getReceiveVersion(address)',
    values: [string],
  ): string;
  encodeFunctionData(
    functionFragment: 'getSendLibraryAddress',
    values: [string],
  ): string;
  encodeFunctionData(
    functionFragment: 'getSendLibraryAddress(address)',
    values: [string],
  ): string;
  encodeFunctionData(
    functionFragment: 'getSendVersion',
    values: [string],
  ): string;
  encodeFunctionData(
    functionFragment: 'getSendVersion(address)',
    values: [string],
  ): string;
  encodeFunctionData(
    functionFragment: 'hasStoredPayload',
    values: [BigNumberish, BytesLike],
  ): string;
  encodeFunctionData(
    functionFragment: 'hasStoredPayload(uint16,bytes)',
    values: [BigNumberish, BytesLike],
  ): string;
  encodeFunctionData(
    functionFragment: 'isReceivingPayload',
    values?: undefined,
  ): string;
  encodeFunctionData(
    functionFragment: 'isReceivingPayload()',
    values?: undefined,
  ): string;
  encodeFunctionData(
    functionFragment: 'isSendingPayload',
    values?: undefined,
  ): string;
  encodeFunctionData(
    functionFragment: 'isSendingPayload()',
    values?: undefined,
  ): string;
  encodeFunctionData(
    functionFragment: 'receivePayload',
    values: [
      BigNumberish,
      BytesLike,
      string,
      BigNumberish,
      BigNumberish,
      BytesLike,
    ],
  ): string;
  encodeFunctionData(
    functionFragment: 'receivePayload(uint16,bytes,address,uint64,uint256,bytes)',
    values: [
      BigNumberish,
      BytesLike,
      string,
      BigNumberish,
      BigNumberish,
      BytesLike,
    ],
  ): string;
  encodeFunctionData(
    functionFragment: 'retryPayload',
    values: [BigNumberish, BytesLike, BytesLike],
  ): string;
  encodeFunctionData(
    functionFragment: 'retryPayload(uint16,bytes,bytes)',
    values: [BigNumberish, BytesLike, BytesLike],
  ): string;
  encodeFunctionData(
    functionFragment: 'send',
    values: [BigNumberish, BytesLike, BytesLike, string, string, BytesLike],
  ): string;
  encodeFunctionData(
    functionFragment: 'send(uint16,bytes,bytes,address,address,bytes)',
    values: [BigNumberish, BytesLike, BytesLike, string, string, BytesLike],
  ): string;
  encodeFunctionData(
    functionFragment: 'setConfig',
    values: [BigNumberish, BigNumberish, BigNumberish, BytesLike],
  ): string;
  encodeFunctionData(
    functionFragment: 'setConfig(uint16,uint16,uint256,bytes)',
    values: [BigNumberish, BigNumberish, BigNumberish, BytesLike],
  ): string;
  encodeFunctionData(
    functionFragment: 'setReceiveVersion',
    values: [BigNumberish],
  ): string;
  encodeFunctionData(
    functionFragment: 'setReceiveVersion(uint16)',
    values: [BigNumberish],
  ): string;
  encodeFunctionData(
    functionFragment: 'setSendVersion',
    values: [BigNumberish],
  ): string;
  encodeFunctionData(
    functionFragment: 'setSendVersion(uint16)',
    values: [BigNumberish],
  ): string;

  decodeFunctionResult(
    functionFragment: 'estimateFees',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'estimateFees(uint16,address,bytes,bool,bytes)',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'forceResumeReceive',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'forceResumeReceive(uint16,bytes)',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(functionFragment: 'getChainId', data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: 'getChainId()',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(functionFragment: 'getConfig', data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: 'getConfig(uint16,uint16,address,uint256)',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'getInboundNonce',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'getInboundNonce(uint16,bytes)',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'getOutboundNonce',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'getOutboundNonce(uint16,address)',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'getReceiveLibraryAddress',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'getReceiveLibraryAddress(address)',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'getReceiveVersion',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'getReceiveVersion(address)',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'getSendLibraryAddress',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'getSendLibraryAddress(address)',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'getSendVersion',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'getSendVersion(address)',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'hasStoredPayload',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'hasStoredPayload(uint16,bytes)',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'isReceivingPayload',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'isReceivingPayload()',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'isSendingPayload',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'isSendingPayload()',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'receivePayload',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'receivePayload(uint16,bytes,address,uint64,uint256,bytes)',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'retryPayload',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'retryPayload(uint16,bytes,bytes)',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(functionFragment: 'send', data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: 'send(uint16,bytes,bytes,address,address,bytes)',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(functionFragment: 'setConfig', data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: 'setConfig(uint16,uint16,uint256,bytes)',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'setReceiveVersion',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'setReceiveVersion(uint16)',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'setSendVersion',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'setSendVersion(uint16)',
    data: BytesLike,
  ): Result;

  events: {};
}

export interface ILayerZeroEndpoint extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: ILayerZeroEndpointInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined,
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>,
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>,
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    estimateFees(
      _dstChainId: BigNumberish,
      _userApplication: string,
      _payload: BytesLike,
      _payInZRO: boolean,
      _adapterParam: BytesLike,
      overrides?: CallOverrides,
    ): Promise<
      [BigNumber, BigNumber] & { nativeFee: BigNumber; zroFee: BigNumber }
    >;

    'estimateFees(uint16,address,bytes,bool,bytes)'(
      _dstChainId: BigNumberish,
      _userApplication: string,
      _payload: BytesLike,
      _payInZRO: boolean,
      _adapterParam: BytesLike,
      overrides?: CallOverrides,
    ): Promise<
      [BigNumber, BigNumber] & { nativeFee: BigNumber; zroFee: BigNumber }
    >;

    forceResumeReceive(
      _srcChainId: BigNumberish,
      _srcAddress: BytesLike,
      overrides?: Overrides & { from?: string },
    ): Promise<ContractTransaction>;

    'forceResumeReceive(uint16,bytes)'(
      _srcChainId: BigNumberish,
      _srcAddress: BytesLike,
      overrides?: Overrides & { from?: string },
    ): Promise<ContractTransaction>;

    getChainId(overrides?: CallOverrides): Promise<[number]>;

    'getChainId()'(overrides?: CallOverrides): Promise<[number]>;

    getConfig(
      _version: BigNumberish,
      _chainId: BigNumberish,
      _userApplication: string,
      _configType: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<[string]>;

    'getConfig(uint16,uint16,address,uint256)'(
      _version: BigNumberish,
      _chainId: BigNumberish,
      _userApplication: string,
      _configType: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<[string]>;

    getInboundNonce(
      _srcChainId: BigNumberish,
      _srcAddress: BytesLike,
      overrides?: CallOverrides,
    ): Promise<[BigNumber]>;

    'getInboundNonce(uint16,bytes)'(
      _srcChainId: BigNumberish,
      _srcAddress: BytesLike,
      overrides?: CallOverrides,
    ): Promise<[BigNumber]>;

    getOutboundNonce(
      _dstChainId: BigNumberish,
      _srcAddress: string,
      overrides?: CallOverrides,
    ): Promise<[BigNumber]>;

    'getOutboundNonce(uint16,address)'(
      _dstChainId: BigNumberish,
      _srcAddress: string,
      overrides?: CallOverrides,
    ): Promise<[BigNumber]>;

    getReceiveLibraryAddress(
      _userApplication: string,
      overrides?: CallOverrides,
    ): Promise<[string]>;

    'getReceiveLibraryAddress(address)'(
      _userApplication: string,
      overrides?: CallOverrides,
    ): Promise<[string]>;

    getReceiveVersion(
      _userApplication: string,
      overrides?: CallOverrides,
    ): Promise<[number]>;

    'getReceiveVersion(address)'(
      _userApplication: string,
      overrides?: CallOverrides,
    ): Promise<[number]>;

    getSendLibraryAddress(
      _userApplication: string,
      overrides?: CallOverrides,
    ): Promise<[string]>;

    'getSendLibraryAddress(address)'(
      _userApplication: string,
      overrides?: CallOverrides,
    ): Promise<[string]>;

    getSendVersion(
      _userApplication: string,
      overrides?: CallOverrides,
    ): Promise<[number]>;

    'getSendVersion(address)'(
      _userApplication: string,
      overrides?: CallOverrides,
    ): Promise<[number]>;

    hasStoredPayload(
      _srcChainId: BigNumberish,
      _srcAddress: BytesLike,
      overrides?: CallOverrides,
    ): Promise<[boolean]>;

    'hasStoredPayload(uint16,bytes)'(
      _srcChainId: BigNumberish,
      _srcAddress: BytesLike,
      overrides?: CallOverrides,
    ): Promise<[boolean]>;

    isReceivingPayload(overrides?: CallOverrides): Promise<[boolean]>;

    'isReceivingPayload()'(overrides?: CallOverrides): Promise<[boolean]>;

    isSendingPayload(overrides?: CallOverrides): Promise<[boolean]>;

    'isSendingPayload()'(overrides?: CallOverrides): Promise<[boolean]>;

    receivePayload(
      _srcChainId: BigNumberish,
      _srcAddress: BytesLike,
      _dstAddress: string,
      _nonce: BigNumberish,
      _gasLimit: BigNumberish,
      _payload: BytesLike,
      overrides?: Overrides & { from?: string },
    ): Promise<ContractTransaction>;

    'receivePayload(uint16,bytes,address,uint64,uint256,bytes)'(
      _srcChainId: BigNumberish,
      _srcAddress: BytesLike,
      _dstAddress: string,
      _nonce: BigNumberish,
      _gasLimit: BigNumberish,
      _payload: BytesLike,
      overrides?: Overrides & { from?: string },
    ): Promise<ContractTransaction>;

    retryPayload(
      _srcChainId: BigNumberish,
      _srcAddress: BytesLike,
      _payload: BytesLike,
      overrides?: Overrides & { from?: string },
    ): Promise<ContractTransaction>;

    'retryPayload(uint16,bytes,bytes)'(
      _srcChainId: BigNumberish,
      _srcAddress: BytesLike,
      _payload: BytesLike,
      overrides?: Overrides & { from?: string },
    ): Promise<ContractTransaction>;

    send(
      _dstChainId: BigNumberish,
      _destination: BytesLike,
      _payload: BytesLike,
      _refundAddress: string,
      _zroPaymentAddress: string,
      _adapterParams: BytesLike,
      overrides?: PayableOverrides & { from?: string },
    ): Promise<ContractTransaction>;

    'send(uint16,bytes,bytes,address,address,bytes)'(
      _dstChainId: BigNumberish,
      _destination: BytesLike,
      _payload: BytesLike,
      _refundAddress: string,
      _zroPaymentAddress: string,
      _adapterParams: BytesLike,
      overrides?: PayableOverrides & { from?: string },
    ): Promise<ContractTransaction>;

    setConfig(
      _version: BigNumberish,
      _chainId: BigNumberish,
      _configType: BigNumberish,
      _config: BytesLike,
      overrides?: Overrides & { from?: string },
    ): Promise<ContractTransaction>;

    'setConfig(uint16,uint16,uint256,bytes)'(
      _version: BigNumberish,
      _chainId: BigNumberish,
      _configType: BigNumberish,
      _config: BytesLike,
      overrides?: Overrides & { from?: string },
    ): Promise<ContractTransaction>;

    setReceiveVersion(
      _version: BigNumberish,
      overrides?: Overrides & { from?: string },
    ): Promise<ContractTransaction>;

    'setReceiveVersion(uint16)'(
      _version: BigNumberish,
      overrides?: Overrides & { from?: string },
    ): Promise<ContractTransaction>;

    setSendVersion(
      _version: BigNumberish,
      overrides?: Overrides & { from?: string },
    ): Promise<ContractTransaction>;

    'setSendVersion(uint16)'(
      _version: BigNumberish,
      overrides?: Overrides & { from?: string },
    ): Promise<ContractTransaction>;
  };

  estimateFees(
    _dstChainId: BigNumberish,
    _userApplication: string,
    _payload: BytesLike,
    _payInZRO: boolean,
    _adapterParam: BytesLike,
    overrides?: CallOverrides,
  ): Promise<
    [BigNumber, BigNumber] & { nativeFee: BigNumber; zroFee: BigNumber }
  >;

  'estimateFees(uint16,address,bytes,bool,bytes)'(
    _dstChainId: BigNumberish,
    _userApplication: string,
    _payload: BytesLike,
    _payInZRO: boolean,
    _adapterParam: BytesLike,
    overrides?: CallOverrides,
  ): Promise<
    [BigNumber, BigNumber] & { nativeFee: BigNumber; zroFee: BigNumber }
  >;

  forceResumeReceive(
    _srcChainId: BigNumberish,
    _srcAddress: BytesLike,
    overrides?: Overrides & { from?: string },
  ): Promise<ContractTransaction>;

  'forceResumeReceive(uint16,bytes)'(
    _srcChainId: BigNumberish,
    _srcAddress: BytesLike,
    overrides?: Overrides & { from?: string },
  ): Promise<ContractTransaction>;

  getChainId(overrides?: CallOverrides): Promise<number>;

  'getChainId()'(overrides?: CallOverrides): Promise<number>;

  getConfig(
    _version: BigNumberish,
    _chainId: BigNumberish,
    _userApplication: string,
    _configType: BigNumberish,
    overrides?: CallOverrides,
  ): Promise<string>;

  'getConfig(uint16,uint16,address,uint256)'(
    _version: BigNumberish,
    _chainId: BigNumberish,
    _userApplication: string,
    _configType: BigNumberish,
    overrides?: CallOverrides,
  ): Promise<string>;

  getInboundNonce(
    _srcChainId: BigNumberish,
    _srcAddress: BytesLike,
    overrides?: CallOverrides,
  ): Promise<BigNumber>;

  'getInboundNonce(uint16,bytes)'(
    _srcChainId: BigNumberish,
    _srcAddress: BytesLike,
    overrides?: CallOverrides,
  ): Promise<BigNumber>;

  getOutboundNonce(
    _dstChainId: BigNumberish,
    _srcAddress: string,
    overrides?: CallOverrides,
  ): Promise<BigNumber>;

  'getOutboundNonce(uint16,address)'(
    _dstChainId: BigNumberish,
    _srcAddress: string,
    overrides?: CallOverrides,
  ): Promise<BigNumber>;

  getReceiveLibraryAddress(
    _userApplication: string,
    overrides?: CallOverrides,
  ): Promise<string>;

  'getReceiveLibraryAddress(address)'(
    _userApplication: string,
    overrides?: CallOverrides,
  ): Promise<string>;

  getReceiveVersion(
    _userApplication: string,
    overrides?: CallOverrides,
  ): Promise<number>;

  'getReceiveVersion(address)'(
    _userApplication: string,
    overrides?: CallOverrides,
  ): Promise<number>;

  getSendLibraryAddress(
    _userApplication: string,
    overrides?: CallOverrides,
  ): Promise<string>;

  'getSendLibraryAddress(address)'(
    _userApplication: string,
    overrides?: CallOverrides,
  ): Promise<string>;

  getSendVersion(
    _userApplication: string,
    overrides?: CallOverrides,
  ): Promise<number>;

  'getSendVersion(address)'(
    _userApplication: string,
    overrides?: CallOverrides,
  ): Promise<number>;

  hasStoredPayload(
    _srcChainId: BigNumberish,
    _srcAddress: BytesLike,
    overrides?: CallOverrides,
  ): Promise<boolean>;

  'hasStoredPayload(uint16,bytes)'(
    _srcChainId: BigNumberish,
    _srcAddress: BytesLike,
    overrides?: CallOverrides,
  ): Promise<boolean>;

  isReceivingPayload(overrides?: CallOverrides): Promise<boolean>;

  'isReceivingPayload()'(overrides?: CallOverrides): Promise<boolean>;

  isSendingPayload(overrides?: CallOverrides): Promise<boolean>;

  'isSendingPayload()'(overrides?: CallOverrides): Promise<boolean>;

  receivePayload(
    _srcChainId: BigNumberish,
    _srcAddress: BytesLike,
    _dstAddress: string,
    _nonce: BigNumberish,
    _gasLimit: BigNumberish,
    _payload: BytesLike,
    overrides?: Overrides & { from?: string },
  ): Promise<ContractTransaction>;

  'receivePayload(uint16,bytes,address,uint64,uint256,bytes)'(
    _srcChainId: BigNumberish,
    _srcAddress: BytesLike,
    _dstAddress: string,
    _nonce: BigNumberish,
    _gasLimit: BigNumberish,
    _payload: BytesLike,
    overrides?: Overrides & { from?: string },
  ): Promise<ContractTransaction>;

  retryPayload(
    _srcChainId: BigNumberish,
    _srcAddress: BytesLike,
    _payload: BytesLike,
    overrides?: Overrides & { from?: string },
  ): Promise<ContractTransaction>;

  'retryPayload(uint16,bytes,bytes)'(
    _srcChainId: BigNumberish,
    _srcAddress: BytesLike,
    _payload: BytesLike,
    overrides?: Overrides & { from?: string },
  ): Promise<ContractTransaction>;

  send(
    _dstChainId: BigNumberish,
    _destination: BytesLike,
    _payload: BytesLike,
    _refundAddress: string,
    _zroPaymentAddress: string,
    _adapterParams: BytesLike,
    overrides?: PayableOverrides & { from?: string },
  ): Promise<ContractTransaction>;

  'send(uint16,bytes,bytes,address,address,bytes)'(
    _dstChainId: BigNumberish,
    _destination: BytesLike,
    _payload: BytesLike,
    _refundAddress: string,
    _zroPaymentAddress: string,
    _adapterParams: BytesLike,
    overrides?: PayableOverrides & { from?: string },
  ): Promise<ContractTransaction>;

  setConfig(
    _version: BigNumberish,
    _chainId: BigNumberish,
    _configType: BigNumberish,
    _config: BytesLike,
    overrides?: Overrides & { from?: string },
  ): Promise<ContractTransaction>;

  'setConfig(uint16,uint16,uint256,bytes)'(
    _version: BigNumberish,
    _chainId: BigNumberish,
    _configType: BigNumberish,
    _config: BytesLike,
    overrides?: Overrides & { from?: string },
  ): Promise<ContractTransaction>;

  setReceiveVersion(
    _version: BigNumberish,
    overrides?: Overrides & { from?: string },
  ): Promise<ContractTransaction>;

  'setReceiveVersion(uint16)'(
    _version: BigNumberish,
    overrides?: Overrides & { from?: string },
  ): Promise<ContractTransaction>;

  setSendVersion(
    _version: BigNumberish,
    overrides?: Overrides & { from?: string },
  ): Promise<ContractTransaction>;

  'setSendVersion(uint16)'(
    _version: BigNumberish,
    overrides?: Overrides & { from?: string },
  ): Promise<ContractTransaction>;

  callStatic: {
    estimateFees(
      _dstChainId: BigNumberish,
      _userApplication: string,
      _payload: BytesLike,
      _payInZRO: boolean,
      _adapterParam: BytesLike,
      overrides?: CallOverrides,
    ): Promise<
      [BigNumber, BigNumber] & { nativeFee: BigNumber; zroFee: BigNumber }
    >;

    'estimateFees(uint16,address,bytes,bool,bytes)'(
      _dstChainId: BigNumberish,
      _userApplication: string,
      _payload: BytesLike,
      _payInZRO: boolean,
      _adapterParam: BytesLike,
      overrides?: CallOverrides,
    ): Promise<
      [BigNumber, BigNumber] & { nativeFee: BigNumber; zroFee: BigNumber }
    >;

    forceResumeReceive(
      _srcChainId: BigNumberish,
      _srcAddress: BytesLike,
      overrides?: CallOverrides,
    ): Promise<void>;

    'forceResumeReceive(uint16,bytes)'(
      _srcChainId: BigNumberish,
      _srcAddress: BytesLike,
      overrides?: CallOverrides,
    ): Promise<void>;

    getChainId(overrides?: CallOverrides): Promise<number>;

    'getChainId()'(overrides?: CallOverrides): Promise<number>;

    getConfig(
      _version: BigNumberish,
      _chainId: BigNumberish,
      _userApplication: string,
      _configType: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<string>;

    'getConfig(uint16,uint16,address,uint256)'(
      _version: BigNumberish,
      _chainId: BigNumberish,
      _userApplication: string,
      _configType: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<string>;

    getInboundNonce(
      _srcChainId: BigNumberish,
      _srcAddress: BytesLike,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    'getInboundNonce(uint16,bytes)'(
      _srcChainId: BigNumberish,
      _srcAddress: BytesLike,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    getOutboundNonce(
      _dstChainId: BigNumberish,
      _srcAddress: string,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    'getOutboundNonce(uint16,address)'(
      _dstChainId: BigNumberish,
      _srcAddress: string,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    getReceiveLibraryAddress(
      _userApplication: string,
      overrides?: CallOverrides,
    ): Promise<string>;

    'getReceiveLibraryAddress(address)'(
      _userApplication: string,
      overrides?: CallOverrides,
    ): Promise<string>;

    getReceiveVersion(
      _userApplication: string,
      overrides?: CallOverrides,
    ): Promise<number>;

    'getReceiveVersion(address)'(
      _userApplication: string,
      overrides?: CallOverrides,
    ): Promise<number>;

    getSendLibraryAddress(
      _userApplication: string,
      overrides?: CallOverrides,
    ): Promise<string>;

    'getSendLibraryAddress(address)'(
      _userApplication: string,
      overrides?: CallOverrides,
    ): Promise<string>;

    getSendVersion(
      _userApplication: string,
      overrides?: CallOverrides,
    ): Promise<number>;

    'getSendVersion(address)'(
      _userApplication: string,
      overrides?: CallOverrides,
    ): Promise<number>;

    hasStoredPayload(
      _srcChainId: BigNumberish,
      _srcAddress: BytesLike,
      overrides?: CallOverrides,
    ): Promise<boolean>;

    'hasStoredPayload(uint16,bytes)'(
      _srcChainId: BigNumberish,
      _srcAddress: BytesLike,
      overrides?: CallOverrides,
    ): Promise<boolean>;

    isReceivingPayload(overrides?: CallOverrides): Promise<boolean>;

    'isReceivingPayload()'(overrides?: CallOverrides): Promise<boolean>;

    isSendingPayload(overrides?: CallOverrides): Promise<boolean>;

    'isSendingPayload()'(overrides?: CallOverrides): Promise<boolean>;

    receivePayload(
      _srcChainId: BigNumberish,
      _srcAddress: BytesLike,
      _dstAddress: string,
      _nonce: BigNumberish,
      _gasLimit: BigNumberish,
      _payload: BytesLike,
      overrides?: CallOverrides,
    ): Promise<void>;

    'receivePayload(uint16,bytes,address,uint64,uint256,bytes)'(
      _srcChainId: BigNumberish,
      _srcAddress: BytesLike,
      _dstAddress: string,
      _nonce: BigNumberish,
      _gasLimit: BigNumberish,
      _payload: BytesLike,
      overrides?: CallOverrides,
    ): Promise<void>;

    retryPayload(
      _srcChainId: BigNumberish,
      _srcAddress: BytesLike,
      _payload: BytesLike,
      overrides?: CallOverrides,
    ): Promise<void>;

    'retryPayload(uint16,bytes,bytes)'(
      _srcChainId: BigNumberish,
      _srcAddress: BytesLike,
      _payload: BytesLike,
      overrides?: CallOverrides,
    ): Promise<void>;

    send(
      _dstChainId: BigNumberish,
      _destination: BytesLike,
      _payload: BytesLike,
      _refundAddress: string,
      _zroPaymentAddress: string,
      _adapterParams: BytesLike,
      overrides?: CallOverrides,
    ): Promise<void>;

    'send(uint16,bytes,bytes,address,address,bytes)'(
      _dstChainId: BigNumberish,
      _destination: BytesLike,
      _payload: BytesLike,
      _refundAddress: string,
      _zroPaymentAddress: string,
      _adapterParams: BytesLike,
      overrides?: CallOverrides,
    ): Promise<void>;

    setConfig(
      _version: BigNumberish,
      _chainId: BigNumberish,
      _configType: BigNumberish,
      _config: BytesLike,
      overrides?: CallOverrides,
    ): Promise<void>;

    'setConfig(uint16,uint16,uint256,bytes)'(
      _version: BigNumberish,
      _chainId: BigNumberish,
      _configType: BigNumberish,
      _config: BytesLike,
      overrides?: CallOverrides,
    ): Promise<void>;

    setReceiveVersion(
      _version: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<void>;

    'setReceiveVersion(uint16)'(
      _version: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<void>;

    setSendVersion(
      _version: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<void>;

    'setSendVersion(uint16)'(
      _version: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<void>;
  };

  filters: {};

  estimateGas: {
    estimateFees(
      _dstChainId: BigNumberish,
      _userApplication: string,
      _payload: BytesLike,
      _payInZRO: boolean,
      _adapterParam: BytesLike,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    'estimateFees(uint16,address,bytes,bool,bytes)'(
      _dstChainId: BigNumberish,
      _userApplication: string,
      _payload: BytesLike,
      _payInZRO: boolean,
      _adapterParam: BytesLike,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    forceResumeReceive(
      _srcChainId: BigNumberish,
      _srcAddress: BytesLike,
      overrides?: Overrides & { from?: string },
    ): Promise<BigNumber>;

    'forceResumeReceive(uint16,bytes)'(
      _srcChainId: BigNumberish,
      _srcAddress: BytesLike,
      overrides?: Overrides & { from?: string },
    ): Promise<BigNumber>;

    getChainId(overrides?: CallOverrides): Promise<BigNumber>;

    'getChainId()'(overrides?: CallOverrides): Promise<BigNumber>;

    getConfig(
      _version: BigNumberish,
      _chainId: BigNumberish,
      _userApplication: string,
      _configType: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    'getConfig(uint16,uint16,address,uint256)'(
      _version: BigNumberish,
      _chainId: BigNumberish,
      _userApplication: string,
      _configType: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    getInboundNonce(
      _srcChainId: BigNumberish,
      _srcAddress: BytesLike,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    'getInboundNonce(uint16,bytes)'(
      _srcChainId: BigNumberish,
      _srcAddress: BytesLike,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    getOutboundNonce(
      _dstChainId: BigNumberish,
      _srcAddress: string,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    'getOutboundNonce(uint16,address)'(
      _dstChainId: BigNumberish,
      _srcAddress: string,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    getReceiveLibraryAddress(
      _userApplication: string,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    'getReceiveLibraryAddress(address)'(
      _userApplication: string,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    getReceiveVersion(
      _userApplication: string,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    'getReceiveVersion(address)'(
      _userApplication: string,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    getSendLibraryAddress(
      _userApplication: string,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    'getSendLibraryAddress(address)'(
      _userApplication: string,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    getSendVersion(
      _userApplication: string,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    'getSendVersion(address)'(
      _userApplication: string,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    hasStoredPayload(
      _srcChainId: BigNumberish,
      _srcAddress: BytesLike,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    'hasStoredPayload(uint16,bytes)'(
      _srcChainId: BigNumberish,
      _srcAddress: BytesLike,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    isReceivingPayload(overrides?: CallOverrides): Promise<BigNumber>;

    'isReceivingPayload()'(overrides?: CallOverrides): Promise<BigNumber>;

    isSendingPayload(overrides?: CallOverrides): Promise<BigNumber>;

    'isSendingPayload()'(overrides?: CallOverrides): Promise<BigNumber>;

    receivePayload(
      _srcChainId: BigNumberish,
      _srcAddress: BytesLike,
      _dstAddress: string,
      _nonce: BigNumberish,
      _gasLimit: BigNumberish,
      _payload: BytesLike,
      overrides?: Overrides & { from?: string },
    ): Promise<BigNumber>;

    'receivePayload(uint16,bytes,address,uint64,uint256,bytes)'(
      _srcChainId: BigNumberish,
      _srcAddress: BytesLike,
      _dstAddress: string,
      _nonce: BigNumberish,
      _gasLimit: BigNumberish,
      _payload: BytesLike,
      overrides?: Overrides & { from?: string },
    ): Promise<BigNumber>;

    retryPayload(
      _srcChainId: BigNumberish,
      _srcAddress: BytesLike,
      _payload: BytesLike,
      overrides?: Overrides & { from?: string },
    ): Promise<BigNumber>;

    'retryPayload(uint16,bytes,bytes)'(
      _srcChainId: BigNumberish,
      _srcAddress: BytesLike,
      _payload: BytesLike,
      overrides?: Overrides & { from?: string },
    ): Promise<BigNumber>;

    send(
      _dstChainId: BigNumberish,
      _destination: BytesLike,
      _payload: BytesLike,
      _refundAddress: string,
      _zroPaymentAddress: string,
      _adapterParams: BytesLike,
      overrides?: PayableOverrides & { from?: string },
    ): Promise<BigNumber>;

    'send(uint16,bytes,bytes,address,address,bytes)'(
      _dstChainId: BigNumberish,
      _destination: BytesLike,
      _payload: BytesLike,
      _refundAddress: string,
      _zroPaymentAddress: string,
      _adapterParams: BytesLike,
      overrides?: PayableOverrides & { from?: string },
    ): Promise<BigNumber>;

    setConfig(
      _version: BigNumberish,
      _chainId: BigNumberish,
      _configType: BigNumberish,
      _config: BytesLike,
      overrides?: Overrides & { from?: string },
    ): Promise<BigNumber>;

    'setConfig(uint16,uint16,uint256,bytes)'(
      _version: BigNumberish,
      _chainId: BigNumberish,
      _configType: BigNumberish,
      _config: BytesLike,
      overrides?: Overrides & { from?: string },
    ): Promise<BigNumber>;

    setReceiveVersion(
      _version: BigNumberish,
      overrides?: Overrides & { from?: string },
    ): Promise<BigNumber>;

    'setReceiveVersion(uint16)'(
      _version: BigNumberish,
      overrides?: Overrides & { from?: string },
    ): Promise<BigNumber>;

    setSendVersion(
      _version: BigNumberish,
      overrides?: Overrides & { from?: string },
    ): Promise<BigNumber>;

    'setSendVersion(uint16)'(
      _version: BigNumberish,
      overrides?: Overrides & { from?: string },
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    estimateFees(
      _dstChainId: BigNumberish,
      _userApplication: string,
      _payload: BytesLike,
      _payInZRO: boolean,
      _adapterParam: BytesLike,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    'estimateFees(uint16,address,bytes,bool,bytes)'(
      _dstChainId: BigNumberish,
      _userApplication: string,
      _payload: BytesLike,
      _payInZRO: boolean,
      _adapterParam: BytesLike,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    forceResumeReceive(
      _srcChainId: BigNumberish,
      _srcAddress: BytesLike,
      overrides?: Overrides & { from?: string },
    ): Promise<PopulatedTransaction>;

    'forceResumeReceive(uint16,bytes)'(
      _srcChainId: BigNumberish,
      _srcAddress: BytesLike,
      overrides?: Overrides & { from?: string },
    ): Promise<PopulatedTransaction>;

    getChainId(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    'getChainId()'(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getConfig(
      _version: BigNumberish,
      _chainId: BigNumberish,
      _userApplication: string,
      _configType: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    'getConfig(uint16,uint16,address,uint256)'(
      _version: BigNumberish,
      _chainId: BigNumberish,
      _userApplication: string,
      _configType: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    getInboundNonce(
      _srcChainId: BigNumberish,
      _srcAddress: BytesLike,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    'getInboundNonce(uint16,bytes)'(
      _srcChainId: BigNumberish,
      _srcAddress: BytesLike,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    getOutboundNonce(
      _dstChainId: BigNumberish,
      _srcAddress: string,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    'getOutboundNonce(uint16,address)'(
      _dstChainId: BigNumberish,
      _srcAddress: string,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    getReceiveLibraryAddress(
      _userApplication: string,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    'getReceiveLibraryAddress(address)'(
      _userApplication: string,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    getReceiveVersion(
      _userApplication: string,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    'getReceiveVersion(address)'(
      _userApplication: string,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    getSendLibraryAddress(
      _userApplication: string,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    'getSendLibraryAddress(address)'(
      _userApplication: string,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    getSendVersion(
      _userApplication: string,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    'getSendVersion(address)'(
      _userApplication: string,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    hasStoredPayload(
      _srcChainId: BigNumberish,
      _srcAddress: BytesLike,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    'hasStoredPayload(uint16,bytes)'(
      _srcChainId: BigNumberish,
      _srcAddress: BytesLike,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    isReceivingPayload(
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    'isReceivingPayload()'(
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    isSendingPayload(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    'isSendingPayload()'(
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    receivePayload(
      _srcChainId: BigNumberish,
      _srcAddress: BytesLike,
      _dstAddress: string,
      _nonce: BigNumberish,
      _gasLimit: BigNumberish,
      _payload: BytesLike,
      overrides?: Overrides & { from?: string },
    ): Promise<PopulatedTransaction>;

    'receivePayload(uint16,bytes,address,uint64,uint256,bytes)'(
      _srcChainId: BigNumberish,
      _srcAddress: BytesLike,
      _dstAddress: string,
      _nonce: BigNumberish,
      _gasLimit: BigNumberish,
      _payload: BytesLike,
      overrides?: Overrides & { from?: string },
    ): Promise<PopulatedTransaction>;

    retryPayload(
      _srcChainId: BigNumberish,
      _srcAddress: BytesLike,
      _payload: BytesLike,
      overrides?: Overrides & { from?: string },
    ): Promise<PopulatedTransaction>;

    'retryPayload(uint16,bytes,bytes)'(
      _srcChainId: BigNumberish,
      _srcAddress: BytesLike,
      _payload: BytesLike,
      overrides?: Overrides & { from?: string },
    ): Promise<PopulatedTransaction>;

    send(
      _dstChainId: BigNumberish,
      _destination: BytesLike,
      _payload: BytesLike,
      _refundAddress: string,
      _zroPaymentAddress: string,
      _adapterParams: BytesLike,
      overrides?: PayableOverrides & { from?: string },
    ): Promise<PopulatedTransaction>;

    'send(uint16,bytes,bytes,address,address,bytes)'(
      _dstChainId: BigNumberish,
      _destination: BytesLike,
      _payload: BytesLike,
      _refundAddress: string,
      _zroPaymentAddress: string,
      _adapterParams: BytesLike,
      overrides?: PayableOverrides & { from?: string },
    ): Promise<PopulatedTransaction>;

    setConfig(
      _version: BigNumberish,
      _chainId: BigNumberish,
      _configType: BigNumberish,
      _config: BytesLike,
      overrides?: Overrides & { from?: string },
    ): Promise<PopulatedTransaction>;

    'setConfig(uint16,uint16,uint256,bytes)'(
      _version: BigNumberish,
      _chainId: BigNumberish,
      _configType: BigNumberish,
      _config: BytesLike,
      overrides?: Overrides & { from?: string },
    ): Promise<PopulatedTransaction>;

    setReceiveVersion(
      _version: BigNumberish,
      overrides?: Overrides & { from?: string },
    ): Promise<PopulatedTransaction>;

    'setReceiveVersion(uint16)'(
      _version: BigNumberish,
      overrides?: Overrides & { from?: string },
    ): Promise<PopulatedTransaction>;

    setSendVersion(
      _version: BigNumberish,
      overrides?: Overrides & { from?: string },
    ): Promise<PopulatedTransaction>;

    'setSendVersion(uint16)'(
      _version: BigNumberish,
      overrides?: Overrides & { from?: string },
    ): Promise<PopulatedTransaction>;
  };
}
