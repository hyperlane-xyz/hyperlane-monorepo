/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import {
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
  Signer,
  utils,
} from 'ethers';

import type {
  RateLimited,
  RateLimitedInterface,
} from '../../../contracts/libs/RateLimited.js';

const _abi = [
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_capacity',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'newLimit',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'targetLimit',
        type: 'uint256',
      },
    ],
    name: 'RateLimitExceeded',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'filledLevel',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'lastUpdated',
        type: 'uint256',
      },
    ],
    name: 'ConsumedFilledLevel',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint8',
        name: 'version',
        type: 'uint8',
      },
    ],
    name: 'Initialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: '_oldCapacity',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: '_newCapacity',
        type: 'uint256',
      },
    ],
    name: 'RateLimitSet',
    type: 'event',
  },
  {
    inputs: [],
    name: 'DURATION',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'calculateCurrentLevel',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'filledLevel',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'lastUpdated',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'maxCapacity',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'refillRate',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_capacity',
        type: 'uint256',
      },
    ],
    name: 'setRefillRate',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_consumedAmount',
        type: 'uint256',
      },
    ],
    name: 'validateAndConsumeFilledLevel',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x608060405234801561001057600080fd5b506040516108be3803806108be83398101604081905261002f916101c3565b620151808110156100965760405162461bcd60e51b815260206004820152602660248201527f4361706163697479206d7573742062652067726561746572207468616e2044556044820152652920aa24a7a760d11b60648201526084015b60405180910390fd5b61009f336100b1565b6100a881610103565b506065556101fe565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600061010d610167565b606654600061011f62015180856101dc565b606681905560408051848152602081018390529192507f120d3d0ec313528ff2b46390b335f973cae83e92345e3431ded6795864543c16910160405180910390a19392505050565b6033546001600160a01b031633146101c15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161008d565b565b6000602082840312156101d557600080fd5b5051919050565b6000826101f957634e487b7160e01b600052601260045260246000fd5b500490565b6106b18061020d6000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c806380f264ee11610081578063c0bc6d841161005b578063c0bc6d841461015d578063d0b06f5d14610165578063f2fde38b1461016e57600080fd5b806380f264ee1461010f5780638da5cb5b14610122578063a66352fa1461014a57600080fd5b806349a3e3d0116100b257806349a3e3d0146100f457806359b6a0c9146100fd578063715018a61461010557600080fd5b80631be05289146100ce578063435635a1146100eb575b600080fd5b6100d86201518081565b6040519081526020015b60405180910390f35b6100d860665481565b6100d860655481565b6100d8610181565b61010d610199565b005b6100d861011d366004610578565b6101ad565b60335460405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100e2565b6100d8610158366004610578565b610212565b6100d86102df565b6100d860675481565b61010d61017c366004610591565b6103a2565b60006201518060665461019491906105fd565b905090565b6101a1610459565b6101ab60006104da565b565b60006101b7610459565b60665460006101c9620151808561061a565b606681905560408051848152602081018390529192507f120d3d0ec313528ff2b46390b335f973cae83e92345e3431ded6795864543c1691015b60405180910390a19392505050565b60008061021d6102df565b90508083111561028e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f526174654c696d6974457863656564656400000000000000000000000000000060448201526064015b60405180910390fd5b600061029a8483610655565b60658190554260678190556040519192507f8605f20bb63cb5dcbf3b0f2bb10015b9f30e2e2c1fff13b8507da4f605d597749161020391848252602082015260400190565b6000806102ea610181565b905060008111610356576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f526174654c696d69744e6f7453657400000000000000000000000000000000006044820152606401610285565b620151806067546103679190610668565b42111561037357919050565b600061037d610551565b60655461038a9190610668565b9050818111610399578061039b565b815b9250505090565b6103aa610459565b73ffffffffffffffffffffffffffffffffffffffff811661044d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610285565b610456816104da565b50565b60335473ffffffffffffffffffffffffffffffffffffffff1633146101ab576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610285565b6033805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600080606754426105629190610655565b90506066548161057291906105fd565b91505090565b60006020828403121561058a57600080fd5b5035919050565b6000602082840312156105a357600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146105c757600080fd5b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8082028115828204841417610614576106146105ce565b92915050565b600082610650577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b81810381811115610614576106146105ce565b80820180821115610614576106146105ce56fea2646970667358221220fc98452469c24f4fa772afe08508d6529eeecd8c5ee00948358288715e77145f64736f6c63430008160033';

type RateLimitedConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RateLimitedConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RateLimited__factory extends ContractFactory {
  constructor(...args: RateLimitedConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _capacity: BigNumberish,
    overrides?: Overrides & { from?: string },
  ): Promise<RateLimited> {
    return super.deploy(_capacity, overrides || {}) as Promise<RateLimited>;
  }
  override getDeployTransaction(
    _capacity: BigNumberish,
    overrides?: Overrides & { from?: string },
  ): TransactionRequest {
    return super.getDeployTransaction(_capacity, overrides || {});
  }
  override attach(address: string): RateLimited {
    return super.attach(address) as RateLimited;
  }
  override connect(signer: Signer): RateLimited__factory {
    return super.connect(signer) as RateLimited__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RateLimitedInterface {
    return new utils.Interface(_abi) as RateLimitedInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): RateLimited {
    return new Contract(address, _abi, signerOrProvider) as RateLimited;
  }
}
