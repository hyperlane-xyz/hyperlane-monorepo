/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import { Contract, ContractFactory, Overrides, Signer, utils } from 'ethers';

import type {
  InterchainQueryRouter,
  InterchainQueryRouterInterface,
} from '../../../contracts/middleware/InterchainQueryRouter.js';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_mailbox',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: '_hook',
        type: 'address',
      },
    ],
    name: 'HookSet',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint8',
        name: 'version',
        type: 'uint8',
      },
    ],
    name: 'Initialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: '_ism',
        type: 'address',
      },
    ],
    name: 'IsmSet',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint32',
        name: 'destination',
        type: 'uint32',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
    ],
    name: 'QueryDispatched',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint32',
        name: 'originDomain',
        type: 'uint32',
      },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'sender',
        type: 'bytes32',
      },
    ],
    name: 'QueryExecuted',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint32',
        name: 'destination',
        type: 'uint32',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
    ],
    name: 'QueryResolved',
    type: 'event',
  },
  {
    inputs: [],
    name: 'PACKAGE_VERSION',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'domains',
    outputs: [
      {
        internalType: 'uint32[]',
        name: '',
        type: 'uint32[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_domain',
        type: 'uint32',
      },
      {
        internalType: 'bytes32',
        name: '_router',
        type: 'bytes32',
      },
    ],
    name: 'enrollRemoteRouter',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32[]',
        name: '_domains',
        type: 'uint32[]',
      },
      {
        internalType: 'bytes32[]',
        name: '_addresses',
        type: 'bytes32[]',
      },
    ],
    name: 'enrollRemoteRouters',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_origin',
        type: 'uint32',
      },
      {
        internalType: 'bytes32',
        name: '_sender',
        type: 'bytes32',
      },
      {
        internalType: 'bytes',
        name: '_message',
        type: 'bytes',
      },
    ],
    name: 'handle',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'hook',
    outputs: [
      {
        internalType: 'contract IPostDispatchHook',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_interchainGasPaymaster',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_interchainSecurityModule',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_owner',
        type: 'address',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'interchainSecurityModule',
    outputs: [
      {
        internalType: 'contract IInterchainSecurityModule',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'localDomain',
    outputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'mailbox',
    outputs: [
      {
        internalType: 'contract IMailbox',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_destination',
        type: 'uint32',
      },
      {
        internalType: 'address',
        name: '_to',
        type: 'address',
      },
      {
        internalType: 'bytes',
        name: '_data',
        type: 'bytes',
      },
      {
        internalType: 'bytes',
        name: '_callback',
        type: 'bytes',
      },
    ],
    name: 'query',
    outputs: [
      {
        internalType: 'bytes32',
        name: 'messageId',
        type: 'bytes32',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_destination',
        type: 'uint32',
      },
      {
        components: [
          {
            components: [
              {
                internalType: 'bytes32',
                name: 'to',
                type: 'bytes32',
              },
              {
                internalType: 'bytes',
                name: 'data',
                type: 'bytes',
              },
            ],
            internalType: 'struct CallLib.StaticCall',
            name: '_call',
            type: 'tuple',
          },
          {
            internalType: 'bytes',
            name: 'callback',
            type: 'bytes',
          },
        ],
        internalType: 'struct CallLib.StaticCallWithCallback[]',
        name: 'calls',
        type: 'tuple[]',
      },
    ],
    name: 'query',
    outputs: [
      {
        internalType: 'bytes32',
        name: 'messageId',
        type: 'bytes32',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_domain',
        type: 'uint32',
      },
    ],
    name: 'routers',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_hook',
        type: 'address',
      },
    ],
    name: 'setHook',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_module',
        type: 'address',
      },
    ],
    name: 'setInterchainSecurityModule',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_domain',
        type: 'uint32',
      },
    ],
    name: 'unenrollRemoteRouter',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32[]',
        name: '_domains',
        type: 'uint32[]',
      },
    ],
    name: 'unenrollRemoteRouters',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x60c06040523480156200001157600080fd5b506040516200301538038062003015833981016040819052620000349162000174565b8080806001600160a01b0381163b620000935760405162461bcd60e51b815260206004820152601e60248201527f4d61696c626f78436c69656e743a20696e76616c6964206d61696c626f780000604482015260640160405180910390fd5b6001600160a01b03821660808190526040805163234d8e3d60e21b81529051638d3638f4916004808201926020929091908290030181865afa158015620000de573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001049190620001a6565b63ffffffff1660a052620001183362000122565b50505050620001ce565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000602082840312156200018757600080fd5b81516001600160a01b03811681146200019f57600080fd5b9392505050565b600060208284031215620001b957600080fd5b815163ffffffff811681146200019f57600080fd5b60805160a051612e136200020260003960006102e70152600081816103f1015281816107ca015261133d0152612e136000f3fe60806040526004361061015f5760003560e01c80638d3638f4116100c0578063d5438eae11610074578063e9198bf911610059578063e9198bf914610440578063efae508a14610460578063f2fde38b1461048057600080fd5b8063d5438eae146103df578063de523cf31461041357600080fd5b806393c44847116100a557806393c4484714610349578063b49c53a71461039f578063c0c53b8b146103bf57600080fd5b80638d3638f4146102d55780638da5cb5b1461031e57600080fd5b806356d5d4751161011757806371a15b38116100fc57806371a15b38146102435780637f5a7c7b146102635780638cc02cab146102b557600080fd5b806356d5d4751461021b578063715018a61461022e57600080fd5b80632ead72f6116101485780632ead72f6146101b95780633dfd3873146101d9578063440df4f4146101f957600080fd5b80630e72cc06146101645780632222b45214610186575b600080fd5b34801561017057600080fd5b5061018461017f366004612004565b6104a0565b005b34801561019257600080fd5b506101a66101a1366004612168565b6105ee565b6040519081526020015b60405180910390f35b3480156101c557600080fd5b506101a66101d43660046121ed565b610641565b3480156101e557600080fd5b506101846101f4366004612004565b610660565b34801561020557600080fd5b5061020e6107a1565b6040516101b09190612208565b610184610229366004612252565b6107b2565b34801561023a57600080fd5b50610184610926565b34801561024f57600080fd5b5061018461025e36600461231e565b61093a565b34801561026f57600080fd5b506065546102909073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101b0565b3480156102c157600080fd5b506101a66102d0366004612360565b610995565b3480156102e157600080fd5b506103097f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020016101b0565b34801561032a57600080fd5b5060335473ffffffffffffffffffffffffffffffffffffffff16610290565b34801561035557600080fd5b506103926040518060400160405280600581526020017f372e312e3400000000000000000000000000000000000000000000000000000081525081565b6040516101b09190612421565b3480156103ab57600080fd5b506101846103ba366004612434565b6109d9565b3480156103cb57600080fd5b506101846103da36600461245e565b6109ef565b3480156103eb57600080fd5b506102907f000000000000000000000000000000000000000000000000000000000000000081565b34801561041f57600080fd5b506066546102909073ffffffffffffffffffffffffffffffffffffffff1681565b34801561044c57600080fd5b5061018461045b3660046124a1565b610b86565b34801561046c57600080fd5b5061018461047b3660046121ed565b610c65565b34801561048c57600080fd5b5061018461049b366004612004565b610c79565b8073ffffffffffffffffffffffffffffffffffffffff81163b1515806104da575073ffffffffffffffffffffffffffffffffffffffff8116155b61056b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f4d61696c626f78436c69656e743a20696e76616c696420636f6e74726163742060448201527f73657474696e670000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b610573610d2d565b606680547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff84169081179091556040519081527fc47cbcc588c67679e52261c45cc315e56562f8d0ccaba16facb9093ff9498799906020015b60405180910390a15050565b604051600090339063ffffffff8716907f11c97c784c298562a796345417aa40e1ce110e6b100f41b801ab23414f72d7e5908490a36106388561063333878787610dae565b610e62565b95945050505050565b600080610658609763ffffffff80861690610eab16565b949350505050565b8073ffffffffffffffffffffffffffffffffffffffff81163b15158061069a575073ffffffffffffffffffffffffffffffffffffffff8116155b610726576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f4d61696c626f78436c69656e743a20696e76616c696420636f6e74726163742060448201527f73657474696e67000000000000000000000000000000000000000000000000006064820152608401610562565b61072e610d2d565b606580547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff84169081179091556040519081527f4eab7b127c764308788622363ad3e9532de3dfba7845bd4f84c125a22544255a906020016105e2565b60606107ad6097610ec4565b905090565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610877576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f4d61696c626f78436c69656e743a2073656e646572206e6f74206d61696c626f60448201527f78000000000000000000000000000000000000000000000000000000000000006064820152608401610562565b600061088285610f75565b9050838114610913576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f456e726f6c6c656420726f7574657220646f6573206e6f74206d61746368207360448201527f656e6465720000000000000000000000000000000000000000000000000000006064820152608401610562565b61091f85858585610fda565b5050505050565b61092e610d2d565b610938600061110a565b565b610942610d2d565b8060005b8181101561098f5761097d8484838181106109635761096361250d565b905060200201602081019061097891906121ed565b611181565b61098860018261256b565b9050610946565b50505050565b604051600090339063ffffffff8616907f11c97c784c298562a796345417aa40e1ce110e6b100f41b801ab23414f72d7e5908490a3610658846106333386866111d6565b6109e1610d2d565b6109eb8282611208565b5050565b600054610100900460ff1615808015610a0f5750600054600160ff909116105b80610a295750303b158015610a29575060005460ff166001145b610ab5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152608401610562565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790558015610b1357600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b610b1e84848461121e565b801561098f57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a150505050565b610b8e610d2d565b828114610bf7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600760248201527f216c656e677468000000000000000000000000000000000000000000000000006044820152606401610562565b8260005b81811015610c5d57610c4b868683818110610c1857610c1861250d565b9050602002016020810190610c2d91906121ed565b858584818110610c3f57610c3f61250d565b90506020020135611208565b610c5660018261256b565b9050610bfb565b505050505050565b610c6d610d2d565b610c7681611181565b50565b610c81610d2d565b73ffffffffffffffffffffffffffffffffffffffff8116610d24576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610562565b610c768161110a565b60335473ffffffffffffffffffffffffffffffffffffffff163314610938576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610562565b60408051600180825281830190925260609160009190816020015b610df46040805160808101825260009181019182526060808201529081908152602001606081525090565b815260200190600190039081610dc9579050509050610e148585856112dd565b81600081518110610e2757610e2761250d565b602002602001018190525085600082604051602001610e48939291906125e8565b604051602081830303815290604052915050949350505050565b6000610ea283348460405180602001604052806000815250606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661132d565b90505b92915050565b600080610eb884846113eb565b915091505b9250929050565b60606000610ed183611425565b9050805167ffffffffffffffff811115610eed57610eed612033565b604051908082528060200260200182016040528015610f16578160200160208202803683370190505b50915060005b8151811015610f6e57818181518110610f3757610f3761250d565b6020026020010151838281518110610f5157610f5161250d565b63ffffffff90921660209283029190910190910152600101610f1c565b5050919050565b60008080610f8d609763ffffffff80871690610eab16565b915091508115610f9e579392505050565b610fa7846114b6565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105629190612421565b6000610fe683836114ed565b90506000610ff48484611527565b9050600082600181111561100a5761100a61257e565b0361107457600061101b858561153f565b9050600061102882611577565b9050828863ffffffff167fb689f7016112eaacc7edebd6ea5eb700790a103e79c39ce0118e075de87d797660405160405180910390a361106c886106338584611622565b505050610c5d565b60018260018111156110885761108861257e565b0361110257600061109882611651565b905060006110a686866116fa565b90506110b28282611732565b60405173ffffffffffffffffffffffffffffffffffffffff83169063ffffffff8a16907fc4416e2fcdf8514178829e5ead195eb13f3241ea71c0e38f998868fe81e4226990600090a35050610c5d565b610c5d6126b7565b6033805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b611195609763ffffffff8084169061176f16565b61119e826114b6565b906109eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105629190612421565b606083600084846040516020016111f094939291906127d0565b60405160208183030381529060405290509392505050565b6109eb609763ffffffff80851690849061177b16565b600054610100900460ff166112b5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610562565b6112bd611786565b6112c683610660565b6112cf826104a0565b6112d88161110a565b505050565b6113086040805160808101825260009181019182526060808201529081908152602001606081525090565b604051806040016040528061131d8686611825565b8152602001929092525092915050565b60008061133987610f75565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166310b83dc08789848989896040518763ffffffff1660e01b815260040161139d9594939291906128b0565b60206040518083038185885af11580156113bb573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906113e09190612910565b979650505050505050565b600081815260028301602052604081205481908061141a5761140d8585611877565b925060009150610ebd9050565b600192509050610ebd565b6060600061143283611883565b90508067ffffffffffffffff81111561144d5761144d612033565b604051908082528060200260200182016040528015611476578160200160208202803683370190505b50915060005b81811015610f6e5761148e848261188e565b60001c8382815181106114a3576114a361250d565b602090810291909101015260010161147c565b60606114c78263ffffffff1661189a565b6040516020016114d79190612929565b6040516020818303038152906040529050919050565b600082826114fd6001604061296e565b81811061150c5761150c61250d565b919091013560f81c90506001811115610ea257610ea261257e565b60006115366020828486612981565b610ea2916129ab565b6060600061154d84846114ed565b600181111561155e5761155e61257e565b1461156b5761156b6126b7565b61063882840184612a1a565b8051606090600090818167ffffffffffffffff81111561159957611599612033565b6040519080825280602002602001820160405280156115cc57816020015b60608152602001906001900390816115b75790505b5090505b81831015610658576115fa8584815181106115ed576115ed61250d565b6020026020010151611958565b81848151811061160c5761160c61250d565b60200260200101819052508260010192506115d0565b60608260018360405160200161163a93929190612bd9565b604051602081830303815290604052905092915050565b600073ffffffffffffffffffffffffffffffffffffffff8211156116f6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f5479706543617374733a2062797465733332546f41646472657373206f76657260448201527f666c6f77000000000000000000000000000000000000000000000000000000006064820152608401610562565b5090565b6060600161170884846114ed565b60018111156117195761171961257e565b14611726576117266126b7565b61063882840184612c71565b80516000905b8082101561098f57611763848484815181106117565761175661250d565b602002602001015161197d565b50816001019150611738565b6000610ea283836119c1565b61098f8383836119de565b600054610100900460ff1661181d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610562565b6109386119fb565b6040805180820182526000808252606060208084018290528451808601865292835291820152825180840190935273ffffffffffffffffffffffffffffffffffffffff85168352820183905290610ea2565b6000610ea28383611a9b565b6000610ea582611ab3565b6000610ea28383611abd565b606060006118a783611ae7565b600101905060008167ffffffffffffffff8111156118c7576118c7612033565b6040519080825280601f01601f1916602001820160405280156118f1576020820181803683370190505b5090508181016020015b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85049450846118fb57509392505050565b6060816020015161196c8360000151611bc9565b6040516020016114d7929190612d3e565b6060610ea2838360006040518060400160405280601e81526020017f416464726573733a206c6f772d6c6576656c2063616c6c206661696c65640000815250611be5565b60008181526002830160205260408120819055610ea28383611cf3565b600082815260028401602052604081208290556106588484611cff565b600054610100900460ff16611a92576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610562565b6109383361110a565b60008181526001830160205260408120541515610ea2565b6000610ea5825490565b6000826000018281548110611ad457611ad461250d565b9060005260206000200154905092915050565b6000807a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611b30577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef81000000008310611b5c576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310611b7a57662386f26fc10000830492506010015b6305f5e1008310611b92576305f5e100830492506008015b6127108310611ba657612710830492506004015b60648310611bb8576064830492506002015b600a8310610ea55760010192915050565b6060610ea5611bdb8360000151611651565b8360200151611d0b565b606082471015611c77576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610562565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611ca09190612d6d565b60006040518083038185875af1925050503d8060008114611cdd576040519150601f19603f3d011682016040523d82523d6000602084013e611ce2565b606091505b50915091506113e087838387611d30565b6000610ea28383611dd0565b6000610ea28383611ec3565b6060610ea28383604051806060016040528060258152602001612db960259139611f12565b60608315611dc6578251600003611dbf5773ffffffffffffffffffffffffffffffffffffffff85163b611dbf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610562565b5081610658565b6106588383611f97565b60008181526001830160205260408120548015611eb9576000611df460018361296e565b8554909150600090611e089060019061296e565b9050818114611e6d576000866000018281548110611e2857611e2861250d565b9060005260206000200154905080876000018481548110611e4b57611e4b61250d565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080611e7e57611e7e612d89565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610ea5565b6000915050610ea5565b6000818152600183016020526040812054611f0a57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610ea5565b506000610ea5565b60606000808573ffffffffffffffffffffffffffffffffffffffff1685604051611f3c9190612d6d565b600060405180830381855afa9150503d8060008114611f77576040519150601f19603f3d011682016040523d82523d6000602084013e611f7c565b606091505b5091509150611f8d86838387611d30565b9695505050505050565b815115611fa75781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105629190612421565b803573ffffffffffffffffffffffffffffffffffffffff81168114611fff57600080fd5b919050565b60006020828403121561201657600080fd5b610ea282611fdb565b803563ffffffff81168114611fff57600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040805190810167ffffffffffffffff8111828210171561208557612085612033565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156120d2576120d2612033565b604052919050565b600082601f8301126120eb57600080fd5b813567ffffffffffffffff81111561210557612105612033565b61213660207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8401160161208b565b81815284602083860101111561214b57600080fd5b816020850160208301376000918101602001919091529392505050565b6000806000806080858703121561217e57600080fd5b6121878561201f565b935061219560208601611fdb565b9250604085013567ffffffffffffffff808211156121b257600080fd5b6121be888389016120da565b935060608701359150808211156121d457600080fd5b506121e1878288016120da565b91505092959194509250565b6000602082840312156121ff57600080fd5b610ea28261201f565b6020808252825182820181905260009190848201906040850190845b8181101561224657835163ffffffff1683529284019291840191600101612224565b50909695505050505050565b6000806000806060858703121561226857600080fd5b6122718561201f565b935060208501359250604085013567ffffffffffffffff8082111561229557600080fd5b818701915087601f8301126122a957600080fd5b8135818111156122b857600080fd5b8860208285010111156122ca57600080fd5b95989497505060200194505050565b60008083601f8401126122eb57600080fd5b50813567ffffffffffffffff81111561230357600080fd5b6020830191508360208260051b8501011115610ebd57600080fd5b6000806020838503121561233157600080fd5b823567ffffffffffffffff81111561234857600080fd5b612354858286016122d9565b90969095509350505050565b60008060006040848603121561237557600080fd5b61237e8461201f565b9250602084013567ffffffffffffffff81111561239a57600080fd5b6123a6868287016122d9565b9497909650939450505050565b60005b838110156123ce5781810151838201526020016123b6565b50506000910152565b600081518084526123ef8160208601602086016123b3565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602081526000610ea260208301846123d7565b6000806040838503121561244757600080fd5b6124508361201f565b946020939093013593505050565b60008060006060848603121561247357600080fd5b61247c84611fdb565b925061248a60208501611fdb565b915061249860408501611fdb565b90509250925092565b600080600080604085870312156124b757600080fd5b843567ffffffffffffffff808211156124cf57600080fd5b6124db888389016122d9565b909650945060208701359150808211156124f457600080fd5b50612501878288016122d9565b95989497509550505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b80820180821115610ea557610ea561253c565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600281106125e4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9052565b600060608083018684526020612600818601886125ad565b6040606060408701528287518085526080945060808801915060808160051b890101848a0160005b838110156126a5578a83037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80018552815180518785528051888601528801518a85018890526126798a8601826123d7565b91890151858303868b015291905061269181836123d7565b968901969450505090860190600101612628565b50909c9b505050505050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc183360301811261271a57600080fd5b90910192915050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261275857600080fd5b830160208101925035905067ffffffffffffffff81111561277857600080fd5b803603821315610ebd57600080fd5b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b6000606080830187845260206127e8818601896125ad565b604060606040870152828784526080935060808701905060808860051b8801018960005b8a8110156126a5577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff808a8403018452612845828d6126e6565b61284f81826126e6565b86855280358786015261286488820182612723565b9150878b8701526128788a87018383612787565b91505061288788830183612723565b92508582038987015261289b828483612787565b9689019695505050918601915060010161280c565b63ffffffff8616815284602082015260a0604082015260006128d560a08301866123d7565b82810360608401526128e781866123d7565b91505073ffffffffffffffffffffffffffffffffffffffff831660808301529695505050505050565b60006020828403121561292257600080fd5b5051919050565b7f4e6f20726f7574657220656e726f6c6c656420666f7220646f6d61696e3a200081526000825161296181601f8501602087016123b3565b91909101601f0192915050565b81810381811115610ea557610ea561253c565b6000808585111561299157600080fd5b8386111561299e57600080fd5b5050820193919092039150565b80356020831015610ea5577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff602084900360031b1b1692915050565b803560028110611fff57600080fd5b600067ffffffffffffffff821115612a1057612a10612033565b5060051b60200190565b600080600060608486031215612a2f57600080fd5b83359250612a3f602085016129e7565b915067ffffffffffffffff60408501351115612a5a57600080fd5b6040840135840185601f820112612a7057600080fd5b612a82612a7d82356129f6565b61208b565b81358082526020808301929160051b840101881015612aa057600080fd5b602083015b6020843560051b850101811015612bcb5767ffffffffffffffff81351115612acc57600080fd5b803584017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0604081838d03011215612b0357600080fd5b612b0b612062565b67ffffffffffffffff60208401351115612b2457600080fd5b60208301358301604083828f03011215612b3d57600080fd5b612b45612062565b92506020810135835267ffffffffffffffff60408201351115612b6757600080fd5b612b7a8d602060408401358401016120da565b60208401525081815267ffffffffffffffff60408401351115612b9c57600080fd5b612baf8c602060408601358601016120da565b6020820152808652505050602083019250602081019050612aa5565b508093505050509250925092565b6000606082018583526020612bf160208501876125ad565b6060604085015281855180845260808601915060808160051b87010193506020870160005b82811015612c62577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80888703018452612c508683516123d7565b95509284019290840190600101612c16565b50939998505050505050505050565b600080600060608486031215612c8657600080fd5b833592506020612c978186016129e7565b9250604085013567ffffffffffffffff80821115612cb457600080fd5b818701915087601f830112612cc857600080fd5b8135612cd6612a7d826129f6565b81815260059190911b8301840190848101908a831115612cf557600080fd5b8585015b83811015612d2d57803585811115612d115760008081fd5b612d1f8d89838a01016120da565b845250918601918601612cf9565b508096505050505050509250925092565b60008351612d508184602088016123b3565b835190830190612d648183602088016123b3565b01949350505050565b60008251612d7f8184602087016123b3565b9190910192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfe416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564a2646970667358221220e2e8c12ca75f10d2e8f911947e4851caa092f85f7649a84169476575e8d8f9c964736f6c63430008160033';

type InterchainQueryRouterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: InterchainQueryRouterConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class InterchainQueryRouter__factory extends ContractFactory {
  constructor(...args: InterchainQueryRouterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _mailbox: string,
    overrides?: Overrides & { from?: string },
  ): Promise<InterchainQueryRouter> {
    return super.deploy(
      _mailbox,
      overrides || {},
    ) as Promise<InterchainQueryRouter>;
  }
  override getDeployTransaction(
    _mailbox: string,
    overrides?: Overrides & { from?: string },
  ): TransactionRequest {
    return super.getDeployTransaction(_mailbox, overrides || {});
  }
  override attach(address: string): InterchainQueryRouter {
    return super.attach(address) as InterchainQueryRouter;
  }
  override connect(signer: Signer): InterchainQueryRouter__factory {
    return super.connect(signer) as InterchainQueryRouter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): InterchainQueryRouterInterface {
    return new utils.Interface(_abi) as InterchainQueryRouterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): InterchainQueryRouter {
    return new Contract(
      address,
      _abi,
      signerOrProvider,
    ) as InterchainQueryRouter;
  }
}
