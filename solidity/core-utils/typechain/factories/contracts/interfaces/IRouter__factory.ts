/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Provider } from '@ethersproject/providers';
import { Contract, Signer, utils } from 'ethers';

import type {
  IRouter,
  IRouterInterface,
} from '../../../contracts/interfaces/IRouter.js';

const _abi = [
  {
    inputs: [],
    name: 'domains',
    outputs: [
      {
        internalType: 'uint32[]',
        name: '',
        type: 'uint32[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_domain',
        type: 'uint32',
      },
      {
        internalType: 'bytes32',
        name: '_router',
        type: 'bytes32',
      },
    ],
    name: 'enrollRemoteRouter',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32[]',
        name: '_domains',
        type: 'uint32[]',
      },
      {
        internalType: 'bytes32[]',
        name: '_routers',
        type: 'bytes32[]',
      },
    ],
    name: 'enrollRemoteRouters',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_domain',
        type: 'uint32',
      },
    ],
    name: 'routers',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
] as const;

export class IRouter__factory {
  static readonly abi = _abi;
  static createInterface(): IRouterInterface {
    return new utils.Interface(_abi) as IRouterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): IRouter {
    return new Contract(address, _abi, signerOrProvider) as IRouter;
  }
}
