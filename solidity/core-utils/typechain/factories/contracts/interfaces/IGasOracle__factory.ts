/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Provider } from '@ethersproject/providers';
import { Contract, Signer, utils } from 'ethers';

import type {
  IGasOracle,
  IGasOracleInterface,
} from '../../../contracts/interfaces/IGasOracle.js';

const _abi = [
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_destinationDomain',
        type: 'uint32',
      },
    ],
    name: 'getExchangeRateAndGasPrice',
    outputs: [
      {
        internalType: 'uint128',
        name: 'tokenExchangeRate',
        type: 'uint128',
      },
      {
        internalType: 'uint128',
        name: 'gasPrice',
        type: 'uint128',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
] as const;

export class IGasOracle__factory {
  static readonly abi = _abi;
  static createInterface(): IGasOracleInterface {
    return new utils.Interface(_abi) as IGasOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): IGasOracle {
    return new Contract(address, _abi, signerOrProvider) as IGasOracle;
  }
}
