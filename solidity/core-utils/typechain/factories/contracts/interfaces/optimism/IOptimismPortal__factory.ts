/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Provider } from '@ethersproject/providers';
import { Contract, Signer, utils } from 'ethers';

import type {
  IOptimismPortal,
  IOptimismPortalInterface,
} from '../../../../contracts/interfaces/optimism/IOptimismPortal.js';

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'nonce',
            type: 'uint256',
          },
          {
            internalType: 'address',
            name: 'sender',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'target',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'value',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'gasLimit',
            type: 'uint256',
          },
          {
            internalType: 'bytes',
            name: 'data',
            type: 'bytes',
          },
        ],
        internalType: 'struct IOptimismPortal.WithdrawalTransaction',
        name: '_tx',
        type: 'tuple',
      },
    ],
    name: 'finalizeWithdrawalTransaction',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const;

export class IOptimismPortal__factory {
  static readonly abi = _abi;
  static createInterface(): IOptimismPortalInterface {
    return new utils.Interface(_abi) as IOptimismPortalInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): IOptimismPortal {
    return new Contract(address, _abi, signerOrProvider) as IOptimismPortal;
  }
}
