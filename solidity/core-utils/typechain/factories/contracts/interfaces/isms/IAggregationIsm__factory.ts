/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Provider } from '@ethersproject/providers';
import { Contract, Signer, utils } from 'ethers';

import type {
  IAggregationIsm,
  IAggregationIsmInterface,
} from '../../../../contracts/interfaces/isms/IAggregationIsm.js';

const _abi = [
  {
    inputs: [],
    name: 'moduleType',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: '_message',
        type: 'bytes',
      },
    ],
    name: 'modulesAndThreshold',
    outputs: [
      {
        internalType: 'address[]',
        name: 'modules',
        type: 'address[]',
      },
      {
        internalType: 'uint8',
        name: 'threshold',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: '_metadata',
        type: 'bytes',
      },
      {
        internalType: 'bytes',
        name: '_message',
        type: 'bytes',
      },
    ],
    name: 'verify',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const;

export class IAggregationIsm__factory {
  static readonly abi = _abi;
  static createInterface(): IAggregationIsmInterface {
    return new utils.Interface(_abi) as IAggregationIsmInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): IAggregationIsm {
    return new Contract(address, _abi, signerOrProvider) as IAggregationIsm;
  }
}
