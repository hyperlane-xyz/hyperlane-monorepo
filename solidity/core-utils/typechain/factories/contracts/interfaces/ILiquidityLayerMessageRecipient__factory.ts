/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Provider } from '@ethersproject/providers';
import { Contract, Signer, utils } from 'ethers';

import type {
  ILiquidityLayerMessageRecipient,
  ILiquidityLayerMessageRecipientInterface,
} from '../../../contracts/interfaces/ILiquidityLayerMessageRecipient.js';

const _abi = [
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_origin',
        type: 'uint32',
      },
      {
        internalType: 'bytes32',
        name: '_sender',
        type: 'bytes32',
      },
      {
        internalType: 'bytes',
        name: '_message',
        type: 'bytes',
      },
      {
        internalType: 'address',
        name: '_token',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_amount',
        type: 'uint256',
      },
    ],
    name: 'handleWithTokens',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const;

export class ILiquidityLayerMessageRecipient__factory {
  static readonly abi = _abi;
  static createInterface(): ILiquidityLayerMessageRecipientInterface {
    return new utils.Interface(
      _abi,
    ) as ILiquidityLayerMessageRecipientInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): ILiquidityLayerMessageRecipient {
    return new Contract(
      address,
      _abi,
      signerOrProvider,
    ) as ILiquidityLayerMessageRecipient;
  }
}
