/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import {
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
  Signer,
  utils,
} from 'ethers';

import type {
  RateLimitedIsm,
  RateLimitedIsmInterface,
} from '../../../../contracts/isms/warp-route/RateLimitedIsm.js';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_mailbox',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_maxCapacity',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: '_recipient',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'newLimit',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'targetLimit',
        type: 'uint256',
      },
    ],
    name: 'RateLimitExceeded',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'filledLevel',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'lastUpdated',
        type: 'uint256',
      },
    ],
    name: 'ConsumedFilledLevel',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: '_hook',
        type: 'address',
      },
    ],
    name: 'HookSet',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint8',
        name: 'version',
        type: 'uint8',
      },
    ],
    name: 'Initialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: '_ism',
        type: 'address',
      },
    ],
    name: 'IsmSet',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: '_oldCapacity',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: '_newCapacity',
        type: 'uint256',
      },
    ],
    name: 'RateLimitSet',
    type: 'event',
  },
  {
    inputs: [],
    name: 'DURATION',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'PACKAGE_VERSION',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'calculateCurrentLevel',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'filledLevel',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'hook',
    outputs: [
      {
        internalType: 'contract IPostDispatchHook',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'interchainSecurityModule',
    outputs: [
      {
        internalType: 'contract IInterchainSecurityModule',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'lastUpdated',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'localDomain',
    outputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'mailbox',
    outputs: [
      {
        internalType: 'contract IMailbox',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'maxCapacity',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'messageId',
        type: 'bytes32',
      },
    ],
    name: 'messageValidated',
    outputs: [
      {
        internalType: 'bool',
        name: 'validated',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'moduleType',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'recipient',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'refillRate',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_hook',
        type: 'address',
      },
    ],
    name: 'setHook',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_module',
        type: 'address',
      },
    ],
    name: 'setInterchainSecurityModule',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_capacity',
        type: 'uint256',
      },
    ],
    name: 'setRefillRate',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_consumedAmount',
        type: 'uint256',
      },
    ],
    name: 'validateAndConsumeFilledLevel',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
      {
        internalType: 'bytes',
        name: '_message',
        type: 'bytes',
      },
    ],
    name: 'verify',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x60e06040523480156200001157600080fd5b5060405162001548380380620015488339810160408190526200003491620002e0565b8183806001600160a01b0381163b620000945760405162461bcd60e51b815260206004820152601e60248201527f4d61696c626f78436c69656e743a20696e76616c6964206d61696c626f78000060448201526064015b60405180910390fd5b6001600160a01b03821660808190526040805163234d8e3d60e21b81529051638d3638f4916004808201926020929091908290030181865afa158015620000df573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000105919062000321565b63ffffffff1660a0526200011933620001ae565b5050620151808110156200017f5760405162461bcd60e51b815260206004820152602660248201527f4361706163697479206d7573742062652067726561746572207468616e2044556044820152652920aa24a7a760d11b60648201526084016200008b565b6200018a33620001ae565b620001958162000200565b506097556001600160a01b031660c05250620003739050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60006200020c6200026a565b609854600062000220620151808562000350565b609881905560408051848152602081018390529192507f120d3d0ec313528ff2b46390b335f973cae83e92345e3431ded6795864543c16910160405180910390a19150505b919050565b6033546001600160a01b03163314620002c65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016200008b565b565b80516001600160a01b03811681146200026557600080fd5b600080600060608486031215620002f657600080fd5b6200030184620002c8565b9250602084015191506200031860408501620002c8565b90509250925092565b6000602082840312156200033457600080fd5b815163ffffffff811681146200034957600080fd5b9392505050565b6000826200036e57634e487b7160e01b600052601260045260246000fd5b500490565b60805160a05160c051611197620003b1600039600081816101fa015261094b015260006102b401526000818161037b0152610d5301526111976000f3fe608060405234801561001057600080fd5b50600436106101825760003560e01c806380f264ee116100d8578063c0bc6d841161008c578063de523cf311610066578063de523cf31461039d578063f2fde38b146103bd578063f7e83aee146103d057600080fd5b8063c0bc6d8414610365578063d0b06f5d1461036d578063d5438eae1461037657600080fd5b80638da5cb5b116100bd5780638da5cb5b146102eb57806393c4484714610309578063a66352fa1461035257600080fd5b806380f264ee1461029c5780638d3638f4146102af57600080fd5b806359b6a0c91161013a578063715018a611610114578063715018a61461024157806373f250eb146102495780637f5a7c7b1461027c57600080fd5b806359b6a0c9146101de5780636465e69f146101e657806366d003ac146101f557600080fd5b80633dfd38731161016b5780633dfd3873146101b9578063435635a1146101cc57806349a3e3d0146101d557600080fd5b80630e72cc06146101875780631be052891461019c575b600080fd5b61019a610195366004610ec1565b6103e3565b005b6101a66201518081565b6040519081526020015b60405180910390f35b61019a6101c7366004610ec1565b610531565b6101a660985481565b6101a660975481565b6101a6610672565b604051600681526020016101b0565b61021c7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101b0565b61019a61068a565b61026c610257366004610efe565b609a6020526000908152604090205460ff1681565b60405190151581526020016101b0565b60655461021c9073ffffffffffffffffffffffffffffffffffffffff1681565b6101a66102aa366004610efe565b61069e565b6102d67f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020016101b0565b60335473ffffffffffffffffffffffffffffffffffffffff1661021c565b6103456040518060400160405280600581526020017f372e312e3400000000000000000000000000000000000000000000000000000081525081565b6040516101b09190610f17565b6101a6610360366004610efe565b610703565b6101a66107cb565b6101a660995481565b61021c7f000000000000000000000000000000000000000000000000000000000000000081565b60665461021c9073ffffffffffffffffffffffffffffffffffffffff1681565b61019a6103cb366004610ec1565b61088e565b61026c6103de366004610fc6565b610945565b8073ffffffffffffffffffffffffffffffffffffffff81163b15158061041d575073ffffffffffffffffffffffffffffffffffffffff8116155b6104ae576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f4d61696c626f78436c69656e743a20696e76616c696420636f6e74726163742060448201527f73657474696e670000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6104b6610bda565b606680547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff84169081179091556040519081527fc47cbcc588c67679e52261c45cc315e56562f8d0ccaba16facb9093ff9498799906020015b60405180910390a15050565b8073ffffffffffffffffffffffffffffffffffffffff81163b15158061056b575073ffffffffffffffffffffffffffffffffffffffff8116155b6105f7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f4d61696c626f78436c69656e743a20696e76616c696420636f6e74726163742060448201527f73657474696e670000000000000000000000000000000000000000000000000060648201526084016104a5565b6105ff610bda565b606580547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff84169081179091556040519081527f4eab7b127c764308788622363ad3e9532de3dfba7845bd4f84c125a22544255a90602001610525565b6000620151806098546106859190611061565b905090565b610692610bda565b61069c6000610c5b565b565b60006106a8610bda565b60985460006106ba6201518085611078565b609881905560408051848152602081018390529192507f120d3d0ec313528ff2b46390b335f973cae83e92345e3431ded6795864543c1691015b60405180910390a19392505050565b60008061070e6107cb565b90508083111561077a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f526174654c696d6974457863656564656400000000000000000000000000000060448201526064016104a5565b600061078684836110b3565b60978190554260998190556040519192507f8605f20bb63cb5dcbf3b0f2bb10015b9f30e2e2c1fff13b8507da4f605d59774916106f491848252602082015260400190565b6000806107d6610672565b905060008111610842576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f526174654c696d69744e6f74536574000000000000000000000000000000000060448201526064016104a5565b6201518060995461085391906110c6565b42111561085f57919050565b6000610869610cd2565b60975461087691906110c6565b90508181116108855780610887565b815b9250505090565b610896610bda565b73ffffffffffffffffffffffffffffffffffffffff8116610939576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016104a5565b61094281610c5b565b50565b600082827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1661098a8383610cf9565b73ffffffffffffffffffffffffffffffffffffffff1614610a07576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f496e76616c6964526563697069656e740000000000000000000000000000000060448201526064016104a5565b84846000610a4a83838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610d1692505050565b6000818152609a602052604090205490915060ff1615610ac6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f4d657373616765416c726561647956616c69646174656400000000000000000060448201526064016104a5565b6000818152609a602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790558151601f8a01829004820281018201909252888252610b4391610b3e918b908b9081908401838280828437600092019190915250610d1692505050565b610d21565b610ba9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f496e76616c696444656c6976657265644d65737361676500000000000000000060448201526064016104a5565b6000610bbd610bb88a8a610dd3565b610def565b9050610bc881610703565b5060019b9a5050505050505050505050565b60335473ffffffffffffffffffffffffffffffffffffffff16331461069c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104a5565b6033805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60008060995442610ce391906110b3565b905060985481610cf39190611061565b91505090565b6000610d0d610d088484610e08565b610e18565b90505b92915050565b805160209091012090565b6040517fe495f1d4000000000000000000000000000000000000000000000000000000008152600481018290526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff169063e495f1d490602401602060405180830381865afa158015610daf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d1091906110d9565b366000610de383604d81876110fb565b915091505b9250929050565b6000610dff6040602084866110fb565b610d0d91611125565b6000610dff604d602d84866110fb565b600073ffffffffffffffffffffffffffffffffffffffff821115610ebd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f5479706543617374733a2062797465733332546f41646472657373206f76657260448201527f666c6f770000000000000000000000000000000000000000000000000000000060648201526084016104a5565b5090565b600060208284031215610ed357600080fd5b813573ffffffffffffffffffffffffffffffffffffffff81168114610ef757600080fd5b9392505050565b600060208284031215610f1057600080fd5b5035919050565b60006020808352835180602085015260005b81811015610f4557858101830151858201604001528201610f29565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b60008083601f840112610f9657600080fd5b50813567ffffffffffffffff811115610fae57600080fd5b602083019150836020828501011115610de857600080fd5b60008060008060408587031215610fdc57600080fd5b843567ffffffffffffffff80821115610ff457600080fd5b61100088838901610f84565b9096509450602087013591508082111561101957600080fd5b5061102687828801610f84565b95989497509550505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8082028115828204841417610d1057610d10611032565b6000826110ae577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b81810381811115610d1057610d10611032565b80820180821115610d1057610d10611032565b6000602082840312156110eb57600080fd5b81518015158114610ef757600080fd5b6000808585111561110b57600080fd5b8386111561111857600080fd5b5050820193919092039150565b80356020831015610d10577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff602084900360031b1b169291505056fea2646970667358221220958b4a1885d73222b38629ddac2619a39c39b1c8445e88c531b73cd2e471f23c64736f6c63430008160033';

type RateLimitedIsmConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RateLimitedIsmConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RateLimitedIsm__factory extends ContractFactory {
  constructor(...args: RateLimitedIsmConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _mailbox: string,
    _maxCapacity: BigNumberish,
    _recipient: string,
    overrides?: Overrides & { from?: string },
  ): Promise<RateLimitedIsm> {
    return super.deploy(
      _mailbox,
      _maxCapacity,
      _recipient,
      overrides || {},
    ) as Promise<RateLimitedIsm>;
  }
  override getDeployTransaction(
    _mailbox: string,
    _maxCapacity: BigNumberish,
    _recipient: string,
    overrides?: Overrides & { from?: string },
  ): TransactionRequest {
    return super.getDeployTransaction(
      _mailbox,
      _maxCapacity,
      _recipient,
      overrides || {},
    );
  }
  override attach(address: string): RateLimitedIsm {
    return super.attach(address) as RateLimitedIsm;
  }
  override connect(signer: Signer): RateLimitedIsm__factory {
    return super.connect(signer) as RateLimitedIsm__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RateLimitedIsmInterface {
    return new utils.Interface(_abi) as RateLimitedIsmInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): RateLimitedIsm {
    return new Contract(address, _abi, signerOrProvider) as RateLimitedIsm;
  }
}
