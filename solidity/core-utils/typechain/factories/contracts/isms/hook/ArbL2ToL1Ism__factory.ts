/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import { Contract, ContractFactory, Overrides, Signer, utils } from 'ethers';

import type {
  ArbL2ToL1Ism,
  ArbL2ToL1IsmInterface,
} from '../../../../contracts/isms/hook/ArbL2ToL1Ism.js';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_bridge',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'NotCrossChainCall',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint8',
        name: 'version',
        type: 'uint8',
      },
    ],
    name: 'Initialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'messageId',
        type: 'bytes32',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'msgValue',
        type: 'uint256',
      },
    ],
    name: 'ReceivedMessage',
    type: 'event',
  },
  {
    inputs: [],
    name: 'PACKAGE_VERSION',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'VERIFIED_MASK_INDEX',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'arbOutbox',
    outputs: [
      {
        internalType: 'contract IOutbox',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'authorizedHook',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'message',
        type: 'bytes',
      },
    ],
    name: 'isVerified',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'moduleType',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'messageId',
        type: 'bytes32',
      },
      {
        internalType: 'uint256',
        name: 'msgValue',
        type: 'uint256',
      },
    ],
    name: 'preVerifyMessage',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: '_hook',
        type: 'bytes32',
      },
    ],
    name: 'setAuthorizedHook',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    name: 'verifiedMessages',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'metadata',
        type: 'bytes',
      },
      {
        internalType: 'bytes',
        name: 'message',
        type: 'bytes',
      },
    ],
    name: 'verify',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x60a06040523480156200001157600080fd5b506040516200192e3803806200192e83398101604081905262000034916200012f565b6001600160a01b03811660808190523b620000a35760405162461bcd60e51b815260206004820152602560248201527f4172624c32546f4c3149736d3a20696e76616c696420417262697472756d2042604482015264726964676560d81b606482015260840160405180910390fd5b806001600160a01b031663ab5d89436040518163ffffffff1660e01b8152600401602060405180830381865afa158015620000e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200010891906200012f565b600380546001600160a01b0319166001600160a01b03929092169190911790555062000161565b6000602082840312156200014257600080fd5b81516001600160a01b03811681146200015a57600080fd5b9392505050565b6080516117aa6200018460003960008181610ccb0152610d2801526117aa6000f3fe6080604052600436106100b15760003560e01c80639e8570d411610069578063c99418061161004e578063c994180614610212578063f313ac8c14610242578063f7e83aee1461025557600080fd5b80639e8570d4146101aa578063c0762af5146101fc57600080fd5b80634c89ca951161009a5780634c89ca951461010b5780636465e69f1461012d57806393c448471461015457600080fd5b8063273dca2f146100b65780633cf7f1d4146100de575b600080fd5b3480156100c257600080fd5b506100cb60ff81565b6040519081526020015b60405180910390f35b3480156100ea57600080fd5b506100cb6100f93660046110b9565b60016020526000908152604090205481565b34801561011757600080fd5b5061012b6101263660046110b9565b610275565b005b34801561013957600080fd5b50610142600881565b60405160ff90911681526020016100d5565b34801561016057600080fd5b5061019d6040518060400160405280600581526020017f372e312e3400000000000000000000000000000000000000000000000000000081525081565b6040516100d59190611136565b3480156101b657600080fd5b506003546101d79073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100d5565b34801561020857600080fd5b506100cb60025481565b34801561021e57600080fd5b5061023261022d366004611192565b610497565b60405190151581526020016100d5565b61012b6102503660046111d4565b610505565b34801561026157600080fd5b506102326102703660046111f6565b610748565b600054610100900460ff16158080156102955750600054600160ff909116105b806102af5750303b1580156102af575060005460ff166001145b610340576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084015b60405180910390fd5b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055801561039e57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b8161042b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603760248201527f41627374726163744d6573736167654964417574686f72697a656449736d3a2060448201527f696e76616c696420617574686f72697a656420686f6f6b0000000000000000006064820152608401610337565b6002829055801561049357600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050565b6000806104d984848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061080f92505050565b6000818152600160205260409020549091506104fb9060ff1c60019081161490565b9150505b92915050565b61050d61081a565b610599576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603660248201527f41627374726163744d6573736167654964417574686f72697a656449736d3a2060448201527f73656e646572206973206e6f742074686520686f6f6b000000000000000000006064820152608401610337565b6105a560ff60026113b1565b341080156105b257508034145b61063e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603160248201527f41627374726163744d6573736167654964417574686f72697a656449736d3a2060448201527f696e76616c6964206d73672e76616c75650000000000000000000000000000006064820152608401610337565b600082815260016020526040902054156106da576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603860248201527f41627374726163744d6573736167654964417574686f72697a656449736d3a2060448201527f6d65737361676520616c726561647920766572696669656400000000000000006064820152608401610337565b7f80000000000000000000000000000000000000000000000000000000000000003417600083815260016020908152604091829020929092555182815283917f67bb630afc52bb7882961d318eb6e0b3e79683d05153a7f4381c27604e996f93910160405180910390a25050565b60006107548383610497565b6107fa5761076485858585610861565b61076e8383610497565b6107fa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f4172624c32546f4c3149736d3a206d657373616765206e6f742076657269666960448201527f65640000000000000000000000000000000000000000000000000000000000006064820152608401610337565b6108048383610b3a565b506001949350505050565b805160209091012090565b6000610827600254610c09565b73ffffffffffffffffffffffffffffffffffffffff16610845610cb2565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b600080808080808080806108778c8e018e6114fe565b985098509850985098509850985098509850610894600254610c09565b73ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff161461094e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602860248201527f4172624c32546f4c3149736d3a206c3253656e64657220213d20617574686f7260448201527f697a6564486f6f6b0000000000000000000000000000000000000000000000006064820152608401610337565b60448151146109df576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f4172624c32546f4c3149736d3a20696e76616c69642064617461206c656e677460448201527f68000000000000000000000000000000000000000000000000000000000000006064820152608401610337565b6000610a208c8c8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061080f92505050565b6024830151909150808214610a91576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4172624c32546f4c3149736d3a20696e76616c6964206d6573736167652069646044820152606401610337565b6003546040517f08635a9500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909116906308635a9590610af7908e908e908e908e908e908e908e908e908e90600401611620565b600060405180830381600087803b158015610b1157600080fd5b505af1158015610b25573d6000803e3d6000fd5b50505050505050505050505050505050505050565b6000610b7b83838080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061080f92505050565b6000818152600160205260409020549091507f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff168015610c035760008281526001602052604081208054839290610bd39084906116de565b90915550610c03905081610be78686610d51565b73ffffffffffffffffffffffffffffffffffffffff1690610d6c565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff821115610cae576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f5479706543617374733a2062797465733332546f41646472657373206f76657260448201527f666c6f77000000000000000000000000000000000000000000000000000000006064820152608401610337565b5090565b600073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163314610d23576040517f4a74df9200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610d4c7f0000000000000000000000000000000000000000000000000000000000000000610ecb565b905090565b6000610d65610d6084846110a0565b610c09565b9392505050565b80471015610dd6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606401610337565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d8060008114610e30576040519150601f19603f3d011682016040523d82523d6000602084013e610e35565b606091505b5050905080610ec6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608401610337565b505050565b600073ffffffffffffffffffffffffffffffffffffffff82163314610f1c576040517f4a74df9200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff1663ab5d89436040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f69573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f8d91906116f1565b73ffffffffffffffffffffffffffffffffffffffff166380648b026040518163ffffffff1660e01b8152600401602060405180830381865afa158015610fd7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ffb91906116f1565b905073ffffffffffffffffffffffffffffffffffffffff81166104ff576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f4c6962417262697472756d4c313a2073797374656d206d65737361676573207760448201527f6974686f75742073656e646572000000000000000000000000000000000000006064820152608401610337565b60006110b0604d602d848661170e565b610d6591611738565b6000602082840312156110cb57600080fd5b5035919050565b6000815180845260005b818110156110f8576020818501810151868301820152016110dc565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b602081526000610d6560208301846110d2565b60008083601f84011261115b57600080fd5b50813567ffffffffffffffff81111561117357600080fd5b60208301915083602082850101111561118b57600080fd5b9250929050565b600080602083850312156111a557600080fd5b823567ffffffffffffffff8111156111bc57600080fd5b6111c885828601611149565b90969095509350505050565b600080604083850312156111e757600080fd5b50508035926020909101359150565b6000806000806040858703121561120c57600080fd5b843567ffffffffffffffff8082111561122457600080fd5b61123088838901611149565b9096509450602087013591508082111561124957600080fd5b5061125687828801611149565b95989497509550505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600181815b808511156112ea57817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211156112d0576112d0611262565b808516156112dd57918102915b93841c9390800290611296565b509250929050565b600082611301575060016104ff565b8161130e575060006104ff565b8160018114611324576002811461132e5761134a565b60019150506104ff565b60ff84111561133f5761133f611262565b50506001821b6104ff565b5060208310610133831016604e8410600b841016171561136d575081810a6104ff565b6113778383611291565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211156113a9576113a9611262565b029392505050565b6000610d6583836112f2565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611433576114336113bd565b604052919050565b73ffffffffffffffffffffffffffffffffffffffff8116811461145d57600080fd5b50565b803561146b8161143b565b919050565b600082601f83011261148157600080fd5b813567ffffffffffffffff81111561149b5761149b6113bd565b6114cc60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116016113ec565b8181528460208386010111156114e157600080fd5b816020850160208301376000918101602001919091529392505050565b60008060008060008060008060006101208a8c03121561151d57600080fd5b67ffffffffffffffff808b35111561153457600080fd5b8a358b018c601f82011261154757600080fd5b803582811115611559576115596113bd565b61156860208260051b016113ec565b8082825260208201915060208360051b85010192508f83111561158a57600080fd5b6020840193505b828410156115ac578335825260209384019390910190611591565b9c5050505060208b013598506115c460408c01611460565b97506115d260608c01611460565b965060808b0135955060a08b0135945060c08b0135935060e08b013592506101008b01358181111561160357600080fd5b61160f8d828e01611470565b925050509295985092959850929598565b6101208082528a51908201819052600090610140830190602090818e01845b8281101561165b5781518552938301939083019060010161163f565b505050508a6020840152611687604084018b73ffffffffffffffffffffffffffffffffffffffff169052565b73ffffffffffffffffffffffffffffffffffffffff891660608401528760808401528660a08401528560c08401528460e08401528281036101008401526116ce81856110d2565b9c9b505050505050505050505050565b818103818111156104ff576104ff611262565b60006020828403121561170357600080fd5b8151610d658161143b565b6000808585111561171e57600080fd5b8386111561172b57600080fd5b5050820193919092039150565b803560208310156104ff577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff602084900360031b1b169291505056fea2646970667358221220bb97d238655c5a74357e6e3ebf41ad923eb79e044efd7ab9f0c029bfb6ceb5d164736f6c63430008160033';

type ArbL2ToL1IsmConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ArbL2ToL1IsmConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ArbL2ToL1Ism__factory extends ContractFactory {
  constructor(...args: ArbL2ToL1IsmConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _bridge: string,
    overrides?: Overrides & { from?: string },
  ): Promise<ArbL2ToL1Ism> {
    return super.deploy(_bridge, overrides || {}) as Promise<ArbL2ToL1Ism>;
  }
  override getDeployTransaction(
    _bridge: string,
    overrides?: Overrides & { from?: string },
  ): TransactionRequest {
    return super.getDeployTransaction(_bridge, overrides || {});
  }
  override attach(address: string): ArbL2ToL1Ism {
    return super.attach(address) as ArbL2ToL1Ism;
  }
  override connect(signer: Signer): ArbL2ToL1Ism__factory {
    return super.connect(signer) as ArbL2ToL1Ism__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ArbL2ToL1IsmInterface {
    return new utils.Interface(_abi) as ArbL2ToL1IsmInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): ArbL2ToL1Ism {
    return new Contract(address, _abi, signerOrProvider) as ArbL2ToL1Ism;
  }
}
