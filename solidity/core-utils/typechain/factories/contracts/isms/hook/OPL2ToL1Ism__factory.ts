/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import { Contract, ContractFactory, Overrides, Signer, utils } from 'ethers';

import type {
  OPL2ToL1Ism,
  OPL2ToL1IsmInterface,
} from '../../../../contracts/isms/hook/OPL2ToL1Ism.js';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_messenger',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'NotCrossChainCall',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint8',
        name: 'version',
        type: 'uint8',
      },
    ],
    name: 'Initialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'messageId',
        type: 'bytes32',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'msgValue',
        type: 'uint256',
      },
    ],
    name: 'ReceivedMessage',
    type: 'event',
  },
  {
    inputs: [],
    name: 'PACKAGE_VERSION',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'VERIFIED_MASK_INDEX',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'authorizedHook',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'message',
        type: 'bytes',
      },
    ],
    name: 'isVerified',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'moduleType',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'portal',
    outputs: [
      {
        internalType: 'contract IOptimismPortal',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'messageId',
        type: 'bytes32',
      },
      {
        internalType: 'uint256',
        name: 'msgValue',
        type: 'uint256',
      },
    ],
    name: 'preVerifyMessage',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: '_hook',
        type: 'bytes32',
      },
    ],
    name: 'setAuthorizedHook',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    name: 'verifiedMessages',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'metadata',
        type: 'bytes',
      },
      {
        internalType: 'bytes',
        name: 'message',
        type: 'bytes',
      },
    ],
    name: 'verify',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x60c060405234801561001057600080fd5b506040516116c73803806116c783398101604081905261002f91610124565b6001600160a01b0381166080819052604080516307fbaa7560e11b8152905160009291630ff754ea9160048083019260209291908290030181865afa15801561007c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100a09190610124565b90506001600160a01b0381163b6101125760405162461bcd60e51b815260206004820152602c60248201527f4f504c32546f4c3149736d3a20696e76616c6964204f7074696d69736d506f7260448201526b1d185b0818dbdb9d1c9858dd60a21b606482015260840160405180910390fd5b6001600160a01b031660a05250610154565b60006020828403121561013657600080fd5b81516001600160a01b038116811461014d57600080fd5b9392505050565b60805160a0516115406101876000396000818161013f01526109d6015260008181610bd50152610c3201526115406000f3fe6080604052600436106100b15760003560e01c806393c4484711610069578063c99418061161004e578063c994180614610219578063f313ac8c14610249578063f7e83aee1461025c57600080fd5b806393c44847146101ad578063c0762af51461020357600080fd5b80634c89ca951161009a5780634c89ca951461010b5780636425666b1461012d5780636465e69f1461018657600080fd5b8063273dca2f146100b65780633cf7f1d4146100de575b600080fd5b3480156100c257600080fd5b506100cb60ff81565b6040519081526020015b60405180910390f35b3480156100ea57600080fd5b506100cb6100f9366004610f03565b60016020526000908152604090205481565b34801561011757600080fd5b5061012b610126366004610f03565b61027c565b005b34801561013957600080fd5b506101617f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100d5565b34801561019257600080fd5b5061019b600b81565b60405160ff90911681526020016100d5565b3480156101b957600080fd5b506101f66040518060400160405280600581526020017f372e312e3400000000000000000000000000000000000000000000000000000081525081565b6040516100d59190610f80565b34801561020f57600080fd5b506100cb60025481565b34801561022557600080fd5b50610239610234366004610fdc565b61049e565b60405190151581526020016100d5565b61012b61025736600461101e565b61050c565b34801561026857600080fd5b50610239610277366004611040565b61074f565b600054610100900460ff161580801561029c5750600054600160ff909116105b806102b65750303b1580156102b6575060005460ff166001145b610347576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084015b60405180910390fd5b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600117905580156103a557600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b81610432576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603760248201527f41627374726163744d6573736167654964417574686f72697a656449736d3a2060448201527f696e76616c696420617574686f72697a656420686f6f6b000000000000000000606482015260840161033e565b6002829055801561049a57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050565b6000806104e084848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061081692505050565b6000818152600160205260409020549091506105029060ff1c60019081161490565b9150505b92915050565b610514610821565b6105a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603660248201527f41627374726163744d6573736167654964417574686f72697a656449736d3a2060448201527f73656e646572206973206e6f742074686520686f6f6b00000000000000000000606482015260840161033e565b6105ac60ff60026111fb565b341080156105b957508034145b610645576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603160248201527f41627374726163744d6573736167654964417574686f72697a656449736d3a2060448201527f696e76616c6964206d73672e76616c7565000000000000000000000000000000606482015260840161033e565b600082815260016020526040902054156106e1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603860248201527f41627374726163744d6573736167654964417574686f72697a656449736d3a2060448201527f6d65737361676520616c72656164792076657269666965640000000000000000606482015260840161033e565b7f80000000000000000000000000000000000000000000000000000000000000003417600083815260016020908152604091829020929092555182815283917f67bb630afc52bb7882961d318eb6e0b3e79683d05153a7f4381c27604e996f93910160405180910390a25050565b600061075b838361049e565b6108015761076b85858585610868565b610775838361049e565b610801576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f4f504c32546f4c3149736d3a206d657373616765206e6f74207665726966696560448201527f6400000000000000000000000000000000000000000000000000000000000000606482015260840161033e565b61080b8383610a44565b506001949350505050565b805160209091012090565b600061082e600254610b13565b73ffffffffffffffffffffffffffffffffffffffff1661084c610bbc565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b6108728484610c5b565b6108d8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f504c32546f4c3149736d3a20696e76616c69642064617461206c656e677468604482015260640161033e565b61091782828080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061081692505050565b6109218585610c73565b14610988576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f4f504c32546f4c3149736d3a20696e76616c6964206d65737361676520696400604482015260640161033e565b6000610996848601866112d3565b6040517f8c3152e900000000000000000000000000000000000000000000000000000000815290915073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690638c3152e990610a0b9084906004016113f8565b600060405180830381600087803b158015610a2557600080fd5b505af1158015610a39573d6000803e3d6000fd5b505050505050505050565b6000610a8583838080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061081692505050565b6000818152600160205260409020549091507f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff168015610b0d5760008281526001602052604081208054839290610add908490611461565b90915550610b0d905081610af18686610cb0565b73ffffffffffffffffffffffffffffffffffffffff1690610ccb565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff821115610bb8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f5479706543617374733a2062797465733332546f41646472657373206f76657260448201527f666c6f7700000000000000000000000000000000000000000000000000000000606482015260840161033e565b5090565b600073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163314610c2d576040517f4a74df9200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610c567f0000000000000000000000000000000000000000000000000000000000000000610e2a565b905090565b6000610c6a60fc610144611474565b90911492915050565b6000818381610c83607882611461565b90610c8f607885611461565b610c9a906020611474565b92610ca793929190611487565b610502916114b1565b6000610cc4610cbf8484610eea565b610b13565b9392505050565b80471015610d35576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604482015260640161033e565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d8060008114610d8f576040519150601f19603f3d011682016040523d82523d6000602084013e610d94565b606091505b5050905080610e25576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d61792068617665207265766572746564000000000000606482015260840161033e565b505050565b600073ffffffffffffffffffffffffffffffffffffffff82163314610e7b576040517f4a74df9200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff16636e296e456040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ec6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050691906114ed565b6000610efa604d602d8486611487565b610cc4916114b1565b600060208284031215610f1557600080fd5b5035919050565b6000815180845260005b81811015610f4257602081850181015186830182015201610f26565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b602081526000610cc46020830184610f1c565b60008083601f840112610fa557600080fd5b50813567ffffffffffffffff811115610fbd57600080fd5b602083019150836020828501011115610fd557600080fd5b9250929050565b60008060208385031215610fef57600080fd5b823567ffffffffffffffff81111561100657600080fd5b61101285828601610f93565b90969095509350505050565b6000806040838503121561103157600080fd5b50508035926020909101359150565b6000806000806040858703121561105657600080fd5b843567ffffffffffffffff8082111561106e57600080fd5b61107a88838901610f93565b9096509450602087013591508082111561109357600080fd5b506110a087828801610f93565b95989497509550505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600181815b8085111561113457817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482111561111a5761111a6110ac565b8085161561112757918102915b93841c93908002906110e0565b509250929050565b60008261114b57506001610506565b8161115857506000610506565b816001811461116e576002811461117857611194565b6001915050610506565b60ff841115611189576111896110ac565b50506001821b610506565b5060208310610133831016604e8410600b84101617156111b7575081810a610506565b6111c183836110db565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211156111f3576111f36110ac565b029392505050565b6000610cc4838361113c565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160c0810167ffffffffffffffff8111828210171561125957611259611207565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156112a6576112a6611207565b604052919050565b73ffffffffffffffffffffffffffffffffffffffff811681146112d057600080fd5b50565b600060208083850312156112e657600080fd5b823567ffffffffffffffff808211156112fe57600080fd5b9084019060c0828703121561131257600080fd5b61131a611236565b823581528383013561132b816112ae565b81850152604083013561133d816112ae565b80604083015250606083013560608201526080830135608082015260a08301358281111561136a57600080fd5b80840193505086601f84011261137f57600080fd5b82358281111561139157611391611207565b6113c1857fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8401160161125f565b925080835287858286010111156113d757600080fd5b808585018685013760009083019094019390935260a0830152509392505050565b60208152815160208201526000602083015173ffffffffffffffffffffffffffffffffffffffff8082166040850152806040860151166060850152505060608301516080830152608083015160a083015260a083015160c08084015261050260e0840182610f1c565b81810381811115610506576105066110ac565b80820180821115610506576105066110ac565b6000808585111561149757600080fd5b838611156114a457600080fd5b5050820193919092039150565b80356020831015610506577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff602084900360031b1b1692915050565b6000602082840312156114ff57600080fd5b8151610cc4816112ae56fea2646970667358221220e05adfb53ee897e2ccbb5ca8970ada72d1b8b2678a7e2d2727298caab555176b64736f6c63430008160033';

type OPL2ToL1IsmConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OPL2ToL1IsmConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OPL2ToL1Ism__factory extends ContractFactory {
  constructor(...args: OPL2ToL1IsmConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _messenger: string,
    overrides?: Overrides & { from?: string },
  ): Promise<OPL2ToL1Ism> {
    return super.deploy(_messenger, overrides || {}) as Promise<OPL2ToL1Ism>;
  }
  override getDeployTransaction(
    _messenger: string,
    overrides?: Overrides & { from?: string },
  ): TransactionRequest {
    return super.getDeployTransaction(_messenger, overrides || {});
  }
  override attach(address: string): OPL2ToL1Ism {
    return super.attach(address) as OPL2ToL1Ism;
  }
  override connect(signer: Signer): OPL2ToL1Ism__factory {
    return super.connect(signer) as OPL2ToL1Ism__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OPL2ToL1IsmInterface {
    return new utils.Interface(_abi) as OPL2ToL1IsmInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): OPL2ToL1Ism {
    return new Contract(address, _abi, signerOrProvider) as OPL2ToL1Ism;
  }
}
