/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import { Contract, ContractFactory, Overrides, Signer, utils } from 'ethers';

import type {
  TestCcipReadIsm,
  TestCcipReadIsmInterface,
} from '../../../../../contracts/isms/ccip-read/TestCccipReadIsm.sol/TestCcipReadIsm.js';

const _abi = [
  {
    inputs: [
      {
        internalType: 'string[]',
        name: '_urls',
        type: 'string[]',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
      {
        internalType: 'string[]',
        name: 'urls',
        type: 'string[]',
      },
      {
        internalType: 'bytes',
        name: 'callData',
        type: 'bytes',
      },
      {
        internalType: 'bytes4',
        name: 'callbackFunction',
        type: 'bytes4',
      },
      {
        internalType: 'bytes',
        name: 'extraData',
        type: 'bytes',
      },
    ],
    name: 'OffchainLookup',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: '_message',
        type: 'bytes',
      },
    ],
    name: 'getOffchainVerifyInfo',
    outputs: [],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'moduleType',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'urls',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'metadata',
        type: 'bytes',
      },
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    name: 'verify',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x60806040523480156200001157600080fd5b5060405162000ac038038062000ac0833981016040819052620000349162000171565b80516200004990600090602084019062000051565b505062000413565b8280548282559060005260206000209081019282156200009c579160200282015b828111156200009c57825182906200008b908262000347565b509160200191906001019062000072565b50620000aa929150620000ae565b5090565b80821115620000aa576000620000c58282620000cf565b50600101620000ae565b508054620000dd90620002b6565b6000825580601f10620000ee575050565b601f0160209004906000526020600020908101906200010e919062000111565b50565b5b80821115620000aa576000815560010162000112565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171562000169576200016962000128565b604052919050565b600060208083850312156200018557600080fd5b82516001600160401b03808211156200019d57600080fd5b8185019150601f86601f840112620001b457600080fd5b825182811115620001c957620001c962000128565b8060051b620001da8682016200013e565b918252848101860191868101908a841115620001f557600080fd5b87870192505b83831015620002a857825186811115620002155760008081fd5b8701603f81018c13620002285760008081fd5b88810151878111156200023f576200023f62000128565b62000252818801601f19168b016200013e565b81815260408e818486010111156200026a5760008081fd5b60005b838110156200028a578481018201518382018e01528c016200026d565b505060009181018b01919091528352509187019190870190620001fb565b9a9950505050505050505050565b600181811c90821680620002cb57607f821691505b602082108103620002ec57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111562000342576000816000526020600020601f850160051c810160208610156200031d5750805b601f850160051c820191505b818110156200033e5782815560010162000329565b5050505b505050565b81516001600160401b0381111562000363576200036362000128565b6200037b81620003748454620002b6565b84620002f2565b602080601f831160018114620003b357600084156200039a5750858301515b600019600386901b1c1916600185901b1785556200033e565b600085815260208120601f198616915b82811015620003e457888601518255948401946001909101908401620003c3565b5085821015620004035787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61069d80620004236000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80636465e69f14610051578063796676be14610070578063bbac9bc814610090578063f7e83aee146100a5575b600080fd5b610059600781565b60405160ff90911681526020015b60405180910390f35b61008361007e366004610264565b6100c8565b604051610067919061027d565b6100a361009e366004610333565b610174565b005b6100b86100b3366004610375565b6101ba565b6040519015158152602001610067565b600081815481106100d857600080fd5b9060005260206000200160009150905080546100f3906103e1565b80601f016020809104026020016040519081016040528092919081815260200182805461011f906103e1565b801561016c5780601f106101415761010080835404028352916020019161016c565b820191906000526020600020905b81548152906001019060200180831161014f57829003601f168201915b505050505081565b6040517f556f18300000000000000000000000000000000000000000000000000000000081526101b190309060009085908590839060040161047d565b60405180910390fd5b6000806101c98587018761063e565b905080610258576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f54657374436369705265616449736d3a20696e76616c6964206d65746164617460448201527f610000000000000000000000000000000000000000000000000000000000000060648201526084016101b1565b50600195945050505050565b60006020828403121561027657600080fd5b5035919050565b60006020808352835180602085015260005b818110156102ab5785810183015185820160400152820161028f565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b60008083601f8401126102fc57600080fd5b50813567ffffffffffffffff81111561031457600080fd5b60208301915083602082850101111561032c57600080fd5b9250929050565b6000806020838503121561034657600080fd5b823567ffffffffffffffff81111561035d57600080fd5b610369858286016102ea565b90969095509350505050565b6000806000806040858703121561038b57600080fd5b843567ffffffffffffffff808211156103a357600080fd5b6103af888389016102ea565b909650945060208701359150808211156103c857600080fd5b506103d5878288016102ea565b95989497509550505050565b600181811c908216806103f557607f821691505b60208210810361042e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b600060a0820173ffffffffffffffffffffffffffffffffffffffff88168352602060a0602085015281885480845260c0860191506005935060c08160051b87010160008b815260208120815b848110156105d8578984037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff4001865281548390600181811c908083168061051157607f831692505b8b83108103610547577f4e487b710000000000000000000000000000000000000000000000000000000088526022600452602488fd5b828952602089018180156105625760018114610595576105bf565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00861682528415158f1b820196506105bf565b6000898152602090208a5b868110156105b957815484820152908501908f016105a0565b83019750505b505050988a0198929650505091909101906001016104c9565b50505086810360408801526105ee818a8c610434565b94505050505061062260608401857fffffffff00000000000000000000000000000000000000000000000000000000169052565b8281036080840152600081526020810198975050505050505050565b60006020828403121561065057600080fd5b8135801515811461066057600080fd5b939250505056fea26469706673582212207f86a42570eceb593bf6b93183a0d1ba9b0537e891e48c426e57df363535ed3064736f6c63430008160033';

type TestCcipReadIsmConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestCcipReadIsmConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestCcipReadIsm__factory extends ContractFactory {
  constructor(...args: TestCcipReadIsmConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _urls: string[],
    overrides?: Overrides & { from?: string },
  ): Promise<TestCcipReadIsm> {
    return super.deploy(_urls, overrides || {}) as Promise<TestCcipReadIsm>;
  }
  override getDeployTransaction(
    _urls: string[],
    overrides?: Overrides & { from?: string },
  ): TransactionRequest {
    return super.getDeployTransaction(_urls, overrides || {});
  }
  override attach(address: string): TestCcipReadIsm {
    return super.attach(address) as TestCcipReadIsm;
  }
  override connect(signer: Signer): TestCcipReadIsm__factory {
    return super.connect(signer) as TestCcipReadIsm__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestCcipReadIsmInterface {
    return new utils.Interface(_abi) as TestCcipReadIsmInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): TestCcipReadIsm {
    return new Contract(address, _abi, signerOrProvider) as TestCcipReadIsm;
  }
}
