/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import { Contract, ContractFactory, Overrides, Signer, utils } from 'ethers';

import type {
  StaticAggregationIsmFactory,
  StaticAggregationIsmFactoryInterface,
} from '../../../../contracts/isms/aggregation/StaticAggregationIsmFactory.js';

const _abi = [
  {
    inputs: [],
    name: 'PACKAGE_VERSION',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: '_values',
        type: 'address[]',
      },
      {
        internalType: 'uint8',
        name: '_threshold',
        type: 'uint8',
      },
    ],
    name: 'deploy',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: '_values',
        type: 'address[]',
      },
      {
        internalType: 'uint8',
        name: '_threshold',
        type: 'uint8',
      },
    ],
    name: 'getAddress',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'implementation',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x60a060405234801561001057600080fd5b5061001961002a565b6001600160a01b0316608052610067565b60006040516100389061005a565b604051809103906000f080158015610054573d6000803e3d6000fd5b50905090565b6109678061074f83390190565b6080516106c7610088600039600081816056015261024401526106c76000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80635c60da1b1461005157806393c44847146100a2578063d4277ebc146100eb578063ed547bf7146100fe575b600080fd5b6100787f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100de6040518060400160405280600581526020017f372e312e3400000000000000000000000000000000000000000000000000000081525081565b60405161009991906104c8565b6100786100f9366004610519565b610111565b61007861010c366004610519565b61013b565b6000806000610121868686610211565b9150915061012f8282610281565b925050505b9392505050565b60008160ff166000108015610153575060ff82168310155b6101be576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f496e76616c6964207468726573686f6c6400000000000000000000000000000060448201526064015b60405180910390fd5b6000806101cc868686610211565b9150915060006101dc8383610281565b905073ffffffffffffffffffffffffffffffffffffffff81163b61012f576102066000848461029d565b979650505050505050565b60006060600085858560405160200161022c939291906105a5565b604051602081830303815290604052905060006102697f0000000000000000000000000000000000000000000000000000000000000000836103fc565b82516020909301929092209791965090945050505050565b805160208201206000906102958482610472565b949350505050565b600083471015610309576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f437265617465323a20696e73756666696369656e742062616c616e636500000060448201526064016101b5565b8151600003610374576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f437265617465323a2062797465636f6465206c656e677468206973207a65726f60448201526064016101b5565b8282516020840186f5905073ffffffffffffffffffffffffffffffffffffffff8116610134576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f437265617465323a204661696c6564206f6e206465706c6f790000000000000060448201526064016101b5565b60607f600b380380600b3d393df3363d3d373d3d3d3d60368038038091363936013d738360601b7f5af43d3d93803e603457fd5bf30000000000000000000000000000000000000084855160405160200161045b959493929190610612565b604051602081830303815290604052905092915050565b60006101348383306000604051836040820152846020820152828152600b8101905060ff815360559020949350505050565b60005b838110156104bf5781810151838201526020016104a7565b50506000910152565b60208152600082518060208401526104e78160408501602087016104a4565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b60008060006040848603121561052e57600080fd5b833567ffffffffffffffff8082111561054657600080fd5b818601915086601f83011261055a57600080fd5b81358181111561056957600080fd5b8760208260051b850101111561057e57600080fd5b6020928301955093505084013560ff8116811461059a57600080fd5b809150509250925092565b604080825281018390526000846060830182805b878110156105fa57833573ffffffffffffffffffffffffffffffffffffffff81168082146105e5578384fd5b845250602093840193909201916001016105b9565b5050809250505060ff83166020830152949350505050565b8581527fffffffffffffffffffffffffffffffffffffffff000000000000000000000000851660208201527fffffffffffffffffffffffffff00000000000000000000000000000000000000841660348201526000835161067a8160418501602088016104a4565b60419201918201929092526061019594505050505056fea264697066735822122053b860a1102f7e9673b65b363e3348e5ea2f0d30fe2d8b2219ace0ae438f207264736f6c63430008160033608060405234801561001057600080fd5b50610947806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80636465e69f146100515780636f72df751461007057806393c4484714610091578063f7e83aee146100da575b600080fd5b610059600281565b60405160ff90911681526020015b60405180910390f35b61008361007e366004610455565b6100fd565b604051610067929190610497565b6100cd6040518060400160405280600581526020017f372e312e3400000000000000000000000000000000000000000000000000000081525081565b60405161006791906104fe565b6100ed6100e836600461056b565b610128565b6040519015158152602001610067565b6060600061010961030e565b80602001905181019061011c9190610640565b915091505b9250929050565b600080600061013785856100fd565b8151919350915060005b818160ff1610156102945761015789898361033e565b15610282576000848260ff168151811061017357610173610735565b602002602001015190508073ffffffffffffffffffffffffffffffffffffffff1663f7e83aee6101a48c8c8661035e565b8b8b6040518563ffffffff1660e01b81526004016101c594939291906107ad565b6020604051808303816000875af11580156101e4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061020891906107df565b610273576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600760248201527f217665726966790000000000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b61027e600185610837565b9350505b8061028c81610856565b915050610141565b5060ff821615610300576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f217468726573686f6c6400000000000000000000000000000000000000000000604482015260640161026a565b506001979650505050505050565b60608060203603803580820391506040519250602081018301604052808352602083018183823750919392505050565b60008061034c858585610397565b5063ffffffff16151595945050505050565b36600080600061036f878787610397565b909250905061038963ffffffff808316908416888a610875565b935093505050935093915050565b600080806103a9600460ff861661089f565b6103b490600261089f565b905060006103c36004836108b6565b905060006103d26004836108b6565b90506103e08284898b610875565b6103e9916108c9565b60e01c6103f882848a8c610875565b610401916108c9565b60e01c94509450505050935093915050565b60008083601f84011261042557600080fd5b50813567ffffffffffffffff81111561043d57600080fd5b60208301915083602082850101111561012157600080fd5b6000806020838503121561046857600080fd5b823567ffffffffffffffff81111561047f57600080fd5b61048b85828601610413565b90969095509350505050565b604080825283519082018190526000906020906060840190828701845b828110156104e657815173ffffffffffffffffffffffffffffffffffffffff16845292840192908401906001016104b4565b505050809250505060ff831660208301529392505050565b60006020808352835180602085015260005b8181101561052c57858101830151858201604001528201610510565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b6000806000806040858703121561058157600080fd5b843567ffffffffffffffff8082111561059957600080fd5b6105a588838901610413565b909650945060208701359150808211156105be57600080fd5b506105cb87828801610413565b95989497509550505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b805173ffffffffffffffffffffffffffffffffffffffff8116811461062a57600080fd5b919050565b805160ff8116811461062a57600080fd5b6000806040838503121561065357600080fd5b825167ffffffffffffffff8082111561066b57600080fd5b818501915085601f83011261067f57600080fd5b8151602082821115610693576106936105d7565b8160051b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f830116810181811086821117156106d6576106d66105d7565b6040529283528183019350848101820192898411156106f457600080fd5b948201945b838610156107195761070a86610606565b855294820194938201936106f9565b9650610728905087820161062f565b9450505050509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b6040815260006107c1604083018688610764565b82810360208401526107d4818587610764565b979650505050505050565b6000602082840312156107f157600080fd5b8151801515811461080157600080fd5b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60ff828116828216039081111561085057610850610808565b92915050565b600060ff821660ff810361086c5761086c610808565b60010192915050565b6000808585111561088557600080fd5b8386111561089257600080fd5b5050820193919092039150565b808202811582820484141761085057610850610808565b8082018082111561085057610850610808565b7fffffffff0000000000000000000000000000000000000000000000000000000081358181169160048510156109095780818660040360031b1b83161692505b50509291505056fea2646970667358221220b1afee0b2b9db168fa54afe8f74e02a7c3e155fc4456323d3f327b8578dcf5ed64736f6c63430008160033';

type StaticAggregationIsmFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StaticAggregationIsmFactoryConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StaticAggregationIsmFactory__factory extends ContractFactory {
  constructor(...args: StaticAggregationIsmFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string },
  ): Promise<StaticAggregationIsmFactory> {
    return super.deploy(
      overrides || {},
    ) as Promise<StaticAggregationIsmFactory>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string },
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): StaticAggregationIsmFactory {
    return super.attach(address) as StaticAggregationIsmFactory;
  }
  override connect(signer: Signer): StaticAggregationIsmFactory__factory {
    return super.connect(signer) as StaticAggregationIsmFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StaticAggregationIsmFactoryInterface {
    return new utils.Interface(_abi) as StaticAggregationIsmFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): StaticAggregationIsmFactory {
    return new Contract(
      address,
      _abi,
      signerOrProvider,
    ) as StaticAggregationIsmFactory;
  }
}
