/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import { Contract, ContractFactory, Overrides, Signer, utils } from 'ethers';

import type {
  StaticMessageIdMultisigIsm,
  StaticMessageIdMultisigIsmInterface,
} from '../../../../../contracts/isms/multisig/StaticMultisigIsm.sol/StaticMessageIdMultisigIsm.js';

const _abi = [
  {
    inputs: [],
    name: 'PACKAGE_VERSION',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'moduleType',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: '_metadata',
        type: 'bytes',
      },
    ],
    name: 'signatureCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    name: 'validatorsAndThreshold',
    outputs: [
      {
        internalType: 'address[]',
        name: '',
        type: 'address[]',
      },
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: '_metadata',
        type: 'bytes',
      },
      {
        internalType: 'bytes',
        name: '_message',
        type: 'bytes',
      },
    ],
    name: 'verify',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x608060405234801561001057600080fd5b50610f10806100206000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c80636465e69f116100505780636465e69f146100b357806393c44847146100cd578063f7e83aee1461011657600080fd5b806322a8d6fc1461006c5780632e0ed23414610092575b600080fd5b61007f61007a3660046109da565b610139565b6040519081526020015b60405180910390f35b6100a56100a03660046109da565b61014e565b604051610089929190610a1c565b6100bb600581565b60405160ff9091168152602001610089565b6101096040518060400160405280600581526020017f372e312e3400000000000000000000000000000000000000000000000000000081525081565b6040516100899190610a83565b610129610124366004610af0565b610179565b6040519015158152602001610089565b60006101458383610389565b90505b92915050565b6060600061015a61041e565b80602001905181019061016d9190610bc5565b915091505b9250929050565b6000806101888686868661044e565b9050600080610197868661014e565b9150915060008160ff1611610233576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f4e6f204d756c746973696749534d207468726573686f6c642070726573656e7460448201527f20666f72206d657373616765000000000000000000000000000000000000000060648201526084015b60405180910390fd5b81516000805b8360ff1681101561037857600061028f876102558e8e866105a6565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506105c092505050565b90505b83831080156102e657508583815181106102ae576102ae610ce9565b602002602001015173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b156102fb576102f483610d47565b9250610292565b838310610364576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f217468726573686f6c6400000000000000000000000000000000000000000000604482015260640161022a565b61036d83610d47565b925050600101610239565b5060019a9950505050505050505050565b600080610397604484610d7f565b90506103a4604182610dc1565b1561040b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f496e76616c6964207369676e617475726573206c656e67746800000000000000604482015260640161022a565b610416604182610dd5565b949350505050565b60608060203603803580820391506040519250602081018301604052808352602083018183823750919392505050565b600061059d61045d84846105e4565b6104678787610607565b6104718888610630565b61047b8989610640565b6104ba88888080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061066192505050565b604080517fffffffff0000000000000000000000000000000000000000000000000000000060e097881b811660208084019190915260248301979097527f48595045524c414e45000000000000000000000000000000000000000000000060448301528251808303602d018152604d83018452805190880120606d830152608d8201959095529290951b90921660ad82015260b1808201929092528351808203909201825260d10190925281519101207f19457468657265756d205369676e6564204d6573736167653a0a3332000000006000908152601c91909152603c902090565b95945050505050565b3660006105b485858561066c565b91509150935093915050565b60008060006105cf85856106b1565b915091506105dc816106f3565b509392505050565b60006105f4600960058486610de9565b6105fd91610e13565b60e01c9392505050565b6000828183610617826020610e5b565b60ff169261062793929190610de9565b61014591610e74565b6000826020836106178280610e5b565b600082604083610651826004610e5b565b60ff16926105f493929190610de9565b805160209091012090565b3660008061067b604185610eb0565b610686906044610ec7565b90506000610695604183610ec7565b90506106a38183888a610de9565b935093505050935093915050565b60008082516041036106e75760208301516040840151606085015160001a6106db878285856108a9565b94509450505050610172565b50600090506002610172565b600081600481111561070757610707610cba565b0361070f5750565b600181600481111561072357610723610cba565b0361078a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161022a565b600281600481111561079e5761079e610cba565b03610805576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161022a565b600381600481111561081957610819610cba565b036108a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60448201527f7565000000000000000000000000000000000000000000000000000000000000606482015260840161022a565b50565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156108e0575060009050600361098f565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610934573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff81166109885760006001925092505061098f565b9150600090505b94509492505050565b60008083601f8401126109aa57600080fd5b50813567ffffffffffffffff8111156109c257600080fd5b60208301915083602082850101111561017257600080fd5b600080602083850312156109ed57600080fd5b823567ffffffffffffffff811115610a0457600080fd5b610a1085828601610998565b90969095509350505050565b604080825283519082018190526000906020906060840190828701845b82811015610a6b57815173ffffffffffffffffffffffffffffffffffffffff1684529284019290840190600101610a39565b505050809250505060ff831660208301529392505050565b60006020808352835180602085015260005b81811015610ab157858101830151858201604001528201610a95565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b60008060008060408587031215610b0657600080fd5b843567ffffffffffffffff80821115610b1e57600080fd5b610b2a88838901610998565b90965094506020870135915080821115610b4357600080fd5b50610b5087828801610998565b95989497509550505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b805173ffffffffffffffffffffffffffffffffffffffff81168114610baf57600080fd5b919050565b805160ff81168114610baf57600080fd5b60008060408385031215610bd857600080fd5b825167ffffffffffffffff80821115610bf057600080fd5b818501915085601f830112610c0457600080fd5b8151602082821115610c1857610c18610b5c565b8160051b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f83011681018181108682111715610c5b57610c5b610b5c565b604052928352818301935084810182019289841115610c7957600080fd5b948201945b83861015610c9e57610c8f86610b8b565b85529482019493820193610c7e565b9650610cad9050878201610bb4565b9450505050509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610d7857610d78610d18565b5060010190565b8181038181111561014857610148610d18565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600082610dd057610dd0610d92565b500690565b600082610de457610de4610d92565b500490565b60008085851115610df957600080fd5b83861115610e0657600080fd5b5050820193919092039150565b7fffffffff000000000000000000000000000000000000000000000000000000008135818116916004851015610e535780818660040360031b1b83161692505b505092915050565b60ff818116838216019081111561014857610148610d18565b80356020831015610148577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff602084900360031b1b1692915050565b808202811582820484141761014857610148610d18565b8082018082111561014857610148610d1856fea26469706673582212206a7c7f17c3adad15e820e23147b963ec4242a07fdab011ea006a2abc6868028f64736f6c63430008160033';

type StaticMessageIdMultisigIsmConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StaticMessageIdMultisigIsmConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StaticMessageIdMultisigIsm__factory extends ContractFactory {
  constructor(...args: StaticMessageIdMultisigIsmConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string },
  ): Promise<StaticMessageIdMultisigIsm> {
    return super.deploy(overrides || {}) as Promise<StaticMessageIdMultisigIsm>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string },
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): StaticMessageIdMultisigIsm {
    return super.attach(address) as StaticMessageIdMultisigIsm;
  }
  override connect(signer: Signer): StaticMessageIdMultisigIsm__factory {
    return super.connect(signer) as StaticMessageIdMultisigIsm__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StaticMessageIdMultisigIsmInterface {
    return new utils.Interface(_abi) as StaticMessageIdMultisigIsmInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): StaticMessageIdMultisigIsm {
    return new Contract(
      address,
      _abi,
      signerOrProvider,
    ) as StaticMessageIdMultisigIsm;
  }
}
