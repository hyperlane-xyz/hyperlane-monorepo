/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import { Contract, ContractFactory, Overrides, Signer, utils } from 'ethers';

import type {
  StaticMerkleRootMultisigIsm,
  StaticMerkleRootMultisigIsmInterface,
} from '../../../../../contracts/isms/multisig/StaticMultisigIsm.sol/StaticMerkleRootMultisigIsm.js';

const _abi = [
  {
    inputs: [],
    name: 'PACKAGE_VERSION',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'moduleType',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: '_metadata',
        type: 'bytes',
      },
    ],
    name: 'signatureCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    name: 'validatorsAndThreshold',
    outputs: [
      {
        internalType: 'address[]',
        name: '',
        type: 'address[]',
      },
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: '_metadata',
        type: 'bytes',
      },
      {
        internalType: 'bytes',
        name: '_message',
        type: 'bytes',
      },
    ],
    name: 'verify',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x608060405234801561001057600080fd5b5061118e806100206000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c80636465e69f116100505780636465e69f146100b357806393c44847146100cd578063f7e83aee1461011657600080fd5b806322a8d6fc1461006c5780632e0ed23414610092575b600080fd5b61007f61007a366004610ba3565b610139565b6040519081526020015b60405180910390f35b6100a56100a0366004610ba3565b61014e565b604051610089929190610be5565b6100bb600481565b60405160ff9091168152602001610089565b6101096040518060400160405280600581526020017f372e312e3400000000000000000000000000000000000000000000000000000081525081565b6040516100899190610c4c565b610129610124366004610cb9565b610179565b6040519015158152602001610089565b60006101458383610389565b90505b92915050565b6060600061015a61041f565b80602001905181019061016d9190610db9565b915091505b9250929050565b6000806101888686868661044f565b9050600080610197868661014e565b9150915060008160ff1611610233576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f4e6f204d756c746973696749534d207468726573686f6c642070726573656e7460448201527f20666f72206d657373616765000000000000000000000000000000000000000060648201526084015b60405180910390fd5b81516000805b8360ff1681101561037857600061028f876102558e8e86610657565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061067192505050565b90505b83831080156102e657508583815181106102ae576102ae610ec6565b602002602001015173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b156102fb576102f483610f24565b9250610292565b838310610364576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f217468726573686f6c6400000000000000000000000000000000000000000000604482015260640161022a565b61036d83610f24565b925050600101610239565b5060019a9950505050505050505050565b60008061039861044884610f5c565b90506103a5604182610f9e565b1561040c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f496e76616c6964207369676e617475726573206c656e67746800000000000000604482015260640161022a565b610417604182610fb2565b949350505050565b60608060203603803580820391506040519250602081018301604052808352602083018183823750919392505050565b600061045b8585610695565b63ffffffff1661046b86866106cb565b63ffffffff1611156104d9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f496e76616c6964206d65726b6c6520696e646578206d65746164617461000000604482015260640161022a565b600061053c61051d85858080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506106ec92505050565b61052788886106f7565b61053189896106cb565b63ffffffff1661072d565b905061064d61054b85856107cb565b61055588886107db565b836105608a8a610695565b61056a8b8b610804565b604080517fffffffff0000000000000000000000000000000000000000000000000000000060e097881b811660208084019190915260248301979097527f48595045524c414e45000000000000000000000000000000000000000000000060448301528251808303602d018152604d83018452805190880120606d830152608d8201959095529290951b90921660ad82015260b1808201929092528351808203909201825260d10190925281519101207f19457468657265756d205369676e6564204d6573736167653a0a3332000000006000908152601c91909152603c902090565b9695505050505050565b366000610665858585610815565b91509150935093915050565b6000806000610680858561085b565b9150915061068d8161089d565b509392505050565b600082610444836106a7826004610fc6565b61ffff16926106b893929190610fe8565b6106c191611012565b60e01c9392505050565b6000826020836106dc82600461105a565b60ff16926106b893929190610fe8565b805160209091012090565b6106ff610b42565b8260448361070f61040083610fc6565b61ffff169261072093929190610fe8565b8101906101459190611073565b8260005b602081101561068d57600183821c16600085836020811061075457610754610ec6565b60200201519050816001036107945760408051602081018390529081018590526060016040516020818303038152906040528051906020012093506107c1565b60408051602081018690529081018290526060016040516020818303038152906040528051906020012093505b5050600101610731565b60006106b8600960058486610fe8565b60008281836107eb82602061105a565b60ff16926107fb93929190610fe8565b610145916110f2565b6000826024836107eb82602061105a565b3660008061082460418561112e565b61083090610448611145565b9050600061083f604183611145565b905061084d8183888a610fe8565b935093505050935093915050565b60008082516041036108915760208301516040840151606085015160001a61088587828585610a53565b94509450505050610172565b50600090506002610172565b60008160048111156108b1576108b1610e97565b036108b95750565b60018160048111156108cd576108cd610e97565b03610934576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161022a565b600281600481111561094857610948610e97565b036109af576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161022a565b60038160048111156109c3576109c3610e97565b03610a50576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60448201527f7565000000000000000000000000000000000000000000000000000000000000606482015260840161022a565b50565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115610a8a5750600090506003610b39565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610ade573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff8116610b3257600060019250925050610b39565b9150600090505b94509492505050565b6040518061040001604052806020906020820280368337509192915050565b60008083601f840112610b7357600080fd5b50813567ffffffffffffffff811115610b8b57600080fd5b60208301915083602082850101111561017257600080fd5b60008060208385031215610bb657600080fd5b823567ffffffffffffffff811115610bcd57600080fd5b610bd985828601610b61565b90969095509350505050565b604080825283519082018190526000906020906060840190828701845b82811015610c3457815173ffffffffffffffffffffffffffffffffffffffff1684529284019290840190600101610c02565b505050809250505060ff831660208301529392505050565b60006020808352835180602085015260005b81811015610c7a57858101830151858201604001528201610c5e565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b60008060008060408587031215610ccf57600080fd5b843567ffffffffffffffff80821115610ce757600080fd5b610cf388838901610b61565b90965094506020870135915080821115610d0c57600080fd5b50610d1987828801610b61565b95989497509550505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610d9b57610d9b610d25565b604052919050565b805160ff81168114610db457600080fd5b919050565b60008060408385031215610dcc57600080fd5b825167ffffffffffffffff80821115610de457600080fd5b818501915085601f830112610df857600080fd5b8151602082821115610e0c57610e0c610d25565b8160051b9250610e1d818401610d54565b8281529284018101928181019089851115610e3757600080fd5b948201945b84861015610e7b578551935073ffffffffffffffffffffffffffffffffffffffff84168414610e6b5760008081fd5b8382529482019490820190610e3c565b9650610e8a9050878201610da3565b9450505050509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610f5557610f55610ef5565b5060010190565b8181038181111561014857610148610ef5565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600082610fad57610fad610f6f565b500690565b600082610fc157610fc1610f6f565b500490565b61ffff818116838216019080821115610fe157610fe1610ef5565b5092915050565b60008085851115610ff857600080fd5b8386111561100557600080fd5b5050820193919092039150565b7fffffffff0000000000000000000000000000000000000000000000000000000081358181169160048510156110525780818660040360031b1b83161692505b505092915050565b60ff818116838216019081111561014857610148610ef5565b600061040080838503121561108757600080fd5b83601f84011261109657600080fd5b60405181810181811067ffffffffffffffff821117156110b8576110b8610d25565b6040529083019080858311156110cd57600080fd5b845b838110156110e75780358252602091820191016110cf565b509095945050505050565b80356020831015610148577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff602084900360031b1b1692915050565b808202811582820484141761014857610148610ef5565b8082018082111561014857610148610ef556fea26469706673582212200f7cf8085b515b113fefa3895ebd1367f3b2b677e0235f5a114bade4e6e20ea664736f6c63430008160033';

type StaticMerkleRootMultisigIsmConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StaticMerkleRootMultisigIsmConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StaticMerkleRootMultisigIsm__factory extends ContractFactory {
  constructor(...args: StaticMerkleRootMultisigIsmConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string },
  ): Promise<StaticMerkleRootMultisigIsm> {
    return super.deploy(
      overrides || {},
    ) as Promise<StaticMerkleRootMultisigIsm>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string },
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): StaticMerkleRootMultisigIsm {
    return super.attach(address) as StaticMerkleRootMultisigIsm;
  }
  override connect(signer: Signer): StaticMerkleRootMultisigIsm__factory {
    return super.connect(signer) as StaticMerkleRootMultisigIsm__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StaticMerkleRootMultisigIsmInterface {
    return new utils.Interface(_abi) as StaticMerkleRootMultisigIsmInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): StaticMerkleRootMultisigIsm {
    return new Contract(
      address,
      _abi,
      signerOrProvider,
    ) as StaticMerkleRootMultisigIsm;
  }
}
