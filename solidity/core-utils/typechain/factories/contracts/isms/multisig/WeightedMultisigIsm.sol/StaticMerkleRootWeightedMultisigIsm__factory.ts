/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import { Contract, ContractFactory, Overrides, Signer, utils } from 'ethers';

import type {
  StaticMerkleRootWeightedMultisigIsm,
  StaticMerkleRootWeightedMultisigIsmInterface,
} from '../../../../../contracts/isms/multisig/WeightedMultisigIsm.sol/StaticMerkleRootWeightedMultisigIsm.js';

const _abi = [
  {
    inputs: [],
    name: 'PACKAGE_VERSION',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'TOTAL_WEIGHT',
    outputs: [
      {
        internalType: 'uint96',
        name: '',
        type: 'uint96',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'moduleType',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: '_metadata',
        type: 'bytes',
      },
    ],
    name: 'signatureCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    name: 'validatorsAndThresholdWeight',
    outputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'signingAddress',
            type: 'address',
          },
          {
            internalType: 'uint96',
            name: 'weight',
            type: 'uint96',
          },
        ],
        internalType: 'struct IStaticWeightedMultisigIsm.ValidatorInfo[]',
        name: '',
        type: 'tuple[]',
      },
      {
        internalType: 'uint96',
        name: '',
        type: 'uint96',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: '_metadata',
        type: 'bytes',
      },
      {
        internalType: 'bytes',
        name: '_message',
        type: 'bytes',
      },
    ],
    name: 'verify',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x608060405234801561001057600080fd5b5061137d806100206000396000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c8063ec29dbde11610050578063ec29dbde14610100578063ed2a2f9d14610121578063f7e83aee1461014a57600080fd5b806322a8d6fc146100775780636465e69f1461009d57806393c44847146100b7575b600080fd5b61008a610085366004610cec565b61016d565b6040519081526020015b60405180910390f35b6100a5600981565b60405160ff9091168152602001610094565b6100f36040518060400160405280600581526020017f372e312e3400000000000000000000000000000000000000000000000000000081525081565b6040516100949190610d2e565b61011361010e366004610cec565b610182565b604051610094929190610d9b565b61012d6402540be40081565b6040516bffffffffffffffffffffffff9091168152602001610094565b61015d610158366004610e26565b6101ad565b6040519015158152602001610094565b600061017983836104bc565b90505b92915050565b6060600061018e610552565b8060200190518101906101a19190610f89565b915091505b9250929050565b6000806101bc86868686610582565b90506000806101cb8686610182565b915091506000816bffffffffffffffffffffffff1611801561020057506402540be4006bffffffffffffffffffffffff821611155b61026b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f496e76616c6964207468726573686f6c6420776569676874000000000000000060448201526064015b60405180910390fd5b6000610281835161027c8b8b61016d565b61078a565b905060008060005b846bffffffffffffffffffffffff16826bffffffffffffffffffffffff161080156102b357508381105b15610424576000610303886102c98f8f866107a0565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506107ba92505050565b90505b848410801561035e575086848151811061032257610322611090565b60200260200101516000015173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b156103735761036c846110ee565b9350610306565b8484106103dc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f496e76616c6964207369676e65720000000000000000000000000000000000006044820152606401610262565b8684815181106103ee576103ee611090565b602002602001015160200151836104059190611126565b9250610410846110ee565b9350508061041d906110ee565b9050610289565b50836bffffffffffffffffffffffff16816bffffffffffffffffffffffff1610156104ab576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f496e73756666696369656e742076616c696461746f72207765696768740000006044820152606401610262565b5060019a9950505050505050505050565b6000806104cb61044884611152565b90506104d8604182611194565b1561053f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f496e76616c6964207369676e617475726573206c656e677468000000000000006044820152606401610262565b61054a6041826111a8565b949350505050565b60608060203603803580820391506040519250602081018301604052808352602083018183823750919392505050565b600061058e85856107de565b63ffffffff1661059e8686610814565b63ffffffff16111561060c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f496e76616c6964206d65726b6c6520696e646578206d657461646174610000006044820152606401610262565b600061066f61065085858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061083592505050565b61065a8888610840565b6106648989610814565b63ffffffff16610876565b905061078061067e8585610914565b6106888888610924565b836106938a8a6107de565b61069d8b8b61094d565b604080517fffffffff0000000000000000000000000000000000000000000000000000000060e097881b811660208084019190915260248301979097527f48595045524c414e45000000000000000000000000000000000000000000000060448301528251808303602d018152604d83018452805190880120606d830152608d8201959095529290951b90921660ad82015260b1808201929092528351808203909201825260d10190925281519101207f19457468657265756d205369676e6564204d6573736167653a0a3332000000006000908152601c91909152603c902090565b9695505050505050565b60008183106107995781610179565b5090919050565b3660006107ae85858561095e565b91509150935093915050565b60008060006107c985856109a4565b915091506107d6816109e6565b509392505050565b600082610444836107f08260046111bc565b61ffff1692610801939291906111d7565b61080a91611201565b60e01c9392505050565b600082602083610825826004611249565b60ff1692610801939291906111d7565b805160209091012090565b610848610c8b565b82604483610858610400836111bc565b61ffff1692610869939291906111d7565b8101906101799190611262565b8260005b60208110156107d657600183821c16600085836020811061089d5761089d611090565b60200201519050816001036108dd57604080516020810183905290810185905260600160405160208183030381529060405280519060200120935061090a565b60408051602081018690529081018290526060016040516020818303038152906040528051906020012093505b505060010161087a565b60006108016009600584866111d7565b6000828183610934826020611249565b60ff1692610944939291906111d7565b610179916112e1565b600082602483610934826020611249565b3660008061096d60418561131d565b61097990610448611334565b90506000610988604183611334565b90506109968183888a6111d7565b935093505050935093915050565b60008082516041036109da5760208301516040840151606085015160001a6109ce87828585610b9c565b945094505050506101a6565b506000905060026101a6565b60008160048111156109fa576109fa610e92565b03610a025750565b6001816004811115610a1657610a16610e92565b03610a7d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610262565b6002816004811115610a9157610a91610e92565b03610af8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610262565b6003816004811115610b0c57610b0c610e92565b03610b99576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60448201527f75650000000000000000000000000000000000000000000000000000000000006064820152608401610262565b50565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115610bd35750600090506003610c82565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610c27573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff8116610c7b57600060019250925050610c82565b9150600090505b94509492505050565b6040518061040001604052806020906020820280368337509192915050565b60008083601f840112610cbc57600080fd5b50813567ffffffffffffffff811115610cd457600080fd5b6020830191508360208285010111156101a657600080fd5b60008060208385031215610cff57600080fd5b823567ffffffffffffffff811115610d1657600080fd5b610d2285828601610caa565b90969095509350505050565b60006020808352835180602085015260005b81811015610d5c57858101830151858201604001528201610d40565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b60408082528351828201819052600091906020906060850190828801855b82811015610e02578151805173ffffffffffffffffffffffffffffffffffffffff1685528501516bffffffffffffffffffffffff16858501529285019290840190600101610db9565b5050508093505050506bffffffffffffffffffffffff831660208301529392505050565b60008060008060408587031215610e3c57600080fd5b843567ffffffffffffffff80821115610e5457600080fd5b610e6088838901610caa565b90965094506020870135915080821115610e7957600080fd5b50610e8687828801610caa565b95989497509550505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040805190810167ffffffffffffffff81118282101715610f1357610f13610ec1565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610f6057610f60610ec1565b604052919050565b80516bffffffffffffffffffffffff81168114610f8457600080fd5b919050565b6000806040808486031215610f9d57600080fd5b835167ffffffffffffffff80821115610fb557600080fd5b818601915086601f830112610fc957600080fd5b8151602082821115610fdd57610fdd610ec1565b610feb818360051b01610f19565b828152818101935060069290921b84018101918983111561100b57600080fd5b938101935b828510156110755785858b0312156110285760008081fd5b611030610ef0565b855173ffffffffffffffffffffffffffffffffffffffff811681146110555760008081fd5b8152611062868401610f68565b8184015284529385019392810192611010565b9650611082888201610f68565b955050505050509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361111f5761111f6110bf565b5060010190565b6bffffffffffffffffffffffff81811683821601908082111561114b5761114b6110bf565b5092915050565b8181038181111561017c5761017c6110bf565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000826111a3576111a3611165565b500690565b6000826111b7576111b7611165565b500490565b61ffff81811683821601908082111561114b5761114b6110bf565b600080858511156111e757600080fd5b838611156111f457600080fd5b5050820193919092039150565b7fffffffff0000000000000000000000000000000000000000000000000000000081358181169160048510156112415780818660040360031b1b83161692505b505092915050565b60ff818116838216019081111561017c5761017c6110bf565b600061040080838503121561127657600080fd5b83601f84011261128557600080fd5b60405181810181811067ffffffffffffffff821117156112a7576112a7610ec1565b6040529083019080858311156112bc57600080fd5b845b838110156112d65780358252602091820191016112be565b509095945050505050565b8035602083101561017c577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff602084900360031b1b1692915050565b808202811582820484141761017c5761017c6110bf565b8082018082111561017c5761017c6110bf56fea2646970667358221220f07077fac22a2398ed91c7d8ca393fa915136b85f41f4b4f65bcca8963ae629164736f6c63430008160033';

type StaticMerkleRootWeightedMultisigIsmConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StaticMerkleRootWeightedMultisigIsmConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StaticMerkleRootWeightedMultisigIsm__factory extends ContractFactory {
  constructor(...args: StaticMerkleRootWeightedMultisigIsmConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string },
  ): Promise<StaticMerkleRootWeightedMultisigIsm> {
    return super.deploy(
      overrides || {},
    ) as Promise<StaticMerkleRootWeightedMultisigIsm>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string },
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): StaticMerkleRootWeightedMultisigIsm {
    return super.attach(address) as StaticMerkleRootWeightedMultisigIsm;
  }
  override connect(
    signer: Signer,
  ): StaticMerkleRootWeightedMultisigIsm__factory {
    return super.connect(
      signer,
    ) as StaticMerkleRootWeightedMultisigIsm__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StaticMerkleRootWeightedMultisigIsmInterface {
    return new utils.Interface(
      _abi,
    ) as StaticMerkleRootWeightedMultisigIsmInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): StaticMerkleRootWeightedMultisigIsm {
    return new Contract(
      address,
      _abi,
      signerOrProvider,
    ) as StaticMerkleRootWeightedMultisigIsm;
  }
}
