/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import {
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
  Signer,
  utils,
} from 'ethers';

import type {
  StorageMessageIdMultisigIsm,
  StorageMessageIdMultisigIsmInterface,
} from '../../../../../contracts/isms/multisig/StorageMultisigIsm.sol/StorageMessageIdMultisigIsm.js';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address[]',
        name: '_validators',
        type: 'address[]',
      },
      {
        internalType: 'uint8',
        name: '_threshold',
        type: 'uint8',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint8',
        name: 'version',
        type: 'uint8',
      },
    ],
    name: 'Initialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferStarted',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address[]',
        name: 'validators',
        type: 'address[]',
      },
      {
        indexed: false,
        internalType: 'uint8',
        name: 'threshold',
        type: 'uint8',
      },
    ],
    name: 'ValidatorsAndThresholdSet',
    type: 'event',
  },
  {
    inputs: [],
    name: 'PACKAGE_VERSION',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'acceptOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_owner',
        type: 'address',
      },
      {
        internalType: 'address[]',
        name: '_validators',
        type: 'address[]',
      },
      {
        internalType: 'uint8',
        name: '_threshold',
        type: 'uint8',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'moduleType',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'pendingOwner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: '_validators',
        type: 'address[]',
      },
      {
        internalType: 'uint8',
        name: '_threshold',
        type: 'uint8',
      },
    ],
    name: 'setValidatorsAndThreshold',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: '_metadata',
        type: 'bytes',
      },
    ],
    name: 'signatureCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'threshold',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'validators',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    name: 'validatorsAndThreshold',
    outputs: [
      {
        internalType: 'address[]',
        name: '',
        type: 'address[]',
      },
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: '_metadata',
        type: 'bytes',
      },
      {
        internalType: 'bytes',
        name: '_message',
        type: 'bytes',
      },
    ],
    name: 'verify',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x60806040523480156200001157600080fd5b5060405162001b8a38038062001b8a8339810160408190526200003491620001f8565b8151829082906200004d90609790602085019062000132565b506098805460ff191660ff83161790556200006762000071565b50505050620002de565b600054610100900460ff1615620000de5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff9081161462000130576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b8280548282559060005260206000209081019282156200018a579160200282015b828111156200018a57825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062000153565b50620001989291506200019c565b5090565b5b808211156200019857600081556001016200019d565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b0381168114620001e157600080fd5b919050565b805160ff81168114620001e157600080fd5b600080604083850312156200020c57600080fd5b82516001600160401b03808211156200022457600080fd5b818501915085601f8301126200023957600080fd5b8151602082821115620002505762000250620001b3565b8160051b604051601f19603f83011681018181108682111715620002785762000278620001b3565b6040529283528183019350848101820192898411156200029757600080fd5b948201945b83861015620002c057620002b086620001c9565b855294820194938201936200029c565b9650620002d19050878201620001e6565b9450505050509250929050565b61189c80620002ee6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806379ba50971161008c578063d1b7d63e11610066578063d1b7d63e14610221578063e30c397814610234578063f2fde38b14610252578063f7e83aee1461026557600080fd5b806379ba5097146101b25780638da5cb5b146101ba57806393c44847146101d857600080fd5b806335aa2e44116100c857806335aa2e441461014b57806342cde4e8146101835780636465e69f146101a2578063715018a6146101aa57600080fd5b806322a8d6fc146100ef5780632dac3b21146101155780632e0ed2341461012a575b600080fd5b6101026100fd3660046112c3565b610288565b6040519081526020015b60405180910390f35b610128610123366004611426565b61029d565b005b61013d6101383660046112c3565b61044a565b60405161010c929190611484565b61015e6101593660046114eb565b6104cd565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161010c565b6098546101909060ff1681565b60405160ff909116815260200161010c565b610190600581565b610128610504565b610128610518565b60335473ffffffffffffffffffffffffffffffffffffffff1661015e565b6102146040518060400160405280600581526020017f372e312e3400000000000000000000000000000000000000000000000000000081525081565b60405161010c9190611504565b61012861022f366004611571565b6105cd565b60655473ffffffffffffffffffffffffffffffffffffffff1661015e565b6101286102603660046115bf565b6106d1565b6102786102733660046115da565b610781565b604051901515815260200161010c565b6000610294838361098c565b90505b92915050565b600054610100900460ff16158080156102bd5750600054600160ff909116105b806102d75750303b1580156102d7575060005460ff166001145b610368576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084015b60405180910390fd5b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600117905580156103c657600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b6103ce610a21565b6103d883836105cd565b6103e184610ac0565b801561044457600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b60985460978054604080516020808402820181019092528281526060946000949360ff909116928491908301828280156104ba57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff16815260019091019060200180831161048f575b50505050509150915091505b9250929050565b609781815481106104dd57600080fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16905081565b61050c610af1565b6105166000610ac0565b565b606554339073ffffffffffffffffffffffffffffffffffffffff1681146105c1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f4f776e61626c6532537465703a2063616c6c6572206973206e6f74207468652060448201527f6e6577206f776e65720000000000000000000000000000000000000000000000606482015260840161035f565b6105ca81610ac0565b50565b6105d5610af1565b8060ff1660001080156105ec575081518160ff1611155b610652576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f496e76616c6964207468726573686f6c64000000000000000000000000000000604482015260640161035f565b81516106659060979060208501906111e2565b50609880547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660ff83161790556040517fad139d49eba34197fd93debea81087c9847944af1850061285a663a39d688f4e906106c59084908490611484565b60405180910390a15050565b6106d9610af1565b6065805473ffffffffffffffffffffffffffffffffffffffff83167fffffffffffffffffffffffff0000000000000000000000000000000000000000909116811790915561073c60335473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b60008061079086868686610b72565b905060008061079f868661044a565b9150915060008160ff1611610836576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f4e6f204d756c746973696749534d207468726573686f6c642070726573656e7460448201527f20666f72206d6573736167650000000000000000000000000000000000000000606482015260840161035f565b81516000805b8360ff1681101561097b576000610892876108588e8e86610bec565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610c0692505050565b90505b83831080156108e957508583815181106108b1576108b1611675565b602002602001015173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b156108fe576108f7836116d3565b9250610895565b838310610967576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f217468726573686f6c6400000000000000000000000000000000000000000000604482015260640161035f565b610970836116d3565b92505060010161083c565b5060019a9950505050505050505050565b60008061099a60448461170b565b90506109a760418261174d565b15610a0e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f496e76616c6964207369676e617475726573206c656e67746800000000000000604482015260640161035f565b610a19604182611761565b949350505050565b600054610100900460ff16610ab8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e67000000000000000000000000000000000000000000606482015260840161035f565b610516610c2a565b606580547fffffffffffffffffffffffff00000000000000000000000000000000000000001690556105ca81610cca565b60335473ffffffffffffffffffffffffffffffffffffffff163314610516576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161035f565b6000610be3610b818484610d41565b610b8b8787610d64565b610b958888610d8d565b610b9f8989610d9d565b610bde88888080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610dbe92505050565b610dc9565b95945050505050565b366000610bfa858585610eb9565b91509150935093915050565b6000806000610c158585610efe565b91509150610c2281610f40565b509392505050565b600054610100900460ff16610cc1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e67000000000000000000000000000000000000000000606482015260840161035f565b61051633610ac0565b6033805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000610d51600960058486611775565b610d5a9161179f565b60e01c9392505050565b6000828183610d748260206117e7565b60ff1692610d8493929190611775565b61029491611800565b600082602083610d7482806117e7565b600082604083610dae8260046117e7565b60ff1692610d5193929190611775565b805160209091012090565b604080517fffffffff0000000000000000000000000000000000000000000000000000000060e088811b8216602080850191909152602484018990527f48595045524c414e45000000000000000000000000000000000000000000000060448501528451808503602d018152604d85018652805190820120606d8501819052608d85018990529187901b90921660ad84015260b18084018690528451808503909101815260d190930190935281519101207f19457468657265756d205369676e6564204d6573736167653a0a3332000000006000908152601c91909152603c81209091905b979650505050505050565b36600080610ec860418561183c565b610ed3906044611853565b90506000610ee2604183611853565b9050610ef08183888a611775565b935093505050935093915050565b6000808251604103610f345760208301516040840151606085015160001a610f28878285856110f3565b945094505050506104c6565b506000905060026104c6565b6000816004811115610f5457610f54611646565b03610f5c5750565b6001816004811115610f7057610f70611646565b03610fd7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161035f565b6002816004811115610feb57610feb611646565b03611052576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161035f565b600381600481111561106657611066611646565b036105ca576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60448201527f7565000000000000000000000000000000000000000000000000000000000000606482015260840161035f565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561112a57506000905060036111d9565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561117e573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff81166111d2576000600192509250506111d9565b9150600090505b94509492505050565b82805482825590600052602060002090810192821561125c579160200282015b8281111561125c57825182547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909116178255602090920191600190910190611202565b5061126892915061126c565b5090565b5b80821115611268576000815560010161126d565b60008083601f84011261129357600080fd5b50813567ffffffffffffffff8111156112ab57600080fd5b6020830191508360208285010111156104c657600080fd5b600080602083850312156112d657600080fd5b823567ffffffffffffffff8111156112ed57600080fd5b6112f985828601611281565b90969095509350505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461132957600080fd5b919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f83011261136e57600080fd5b8135602067ffffffffffffffff8083111561138b5761138b61132e565b8260051b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f830116810181811084821117156113ce576113ce61132e565b60405293845260208187018101949081019250878511156113ee57600080fd5b6020870191505b84821015610eae5761140682611305565b835291830191908301906113f5565b803560ff8116811461132957600080fd5b60008060006060848603121561143b57600080fd5b61144484611305565b9250602084013567ffffffffffffffff81111561146057600080fd5b61146c8682870161135d565b92505061147b60408501611415565b90509250925092565b604080825283519082018190526000906020906060840190828701845b828110156114d357815173ffffffffffffffffffffffffffffffffffffffff16845292840192908401906001016114a1565b505050809250505060ff831660208301529392505050565b6000602082840312156114fd57600080fd5b5035919050565b60006020808352835180602085015260005b8181101561153257858101830151858201604001528201611516565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b6000806040838503121561158457600080fd5b823567ffffffffffffffff81111561159b57600080fd5b6115a78582860161135d565b9250506115b660208401611415565b90509250929050565b6000602082840312156115d157600080fd5b61029482611305565b600080600080604085870312156115f057600080fd5b843567ffffffffffffffff8082111561160857600080fd5b61161488838901611281565b9096509450602087013591508082111561162d57600080fd5b5061163a87828801611281565b95989497509550505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611704576117046116a4565b5060010190565b81810381811115610297576102976116a4565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60008261175c5761175c61171e565b500690565b6000826117705761177061171e565b500490565b6000808585111561178557600080fd5b8386111561179257600080fd5b5050820193919092039150565b7fffffffff0000000000000000000000000000000000000000000000000000000081358181169160048510156117df5780818660040360031b1b83161692505b505092915050565b60ff8181168382160190811115610297576102976116a4565b80356020831015610297577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff602084900360031b1b1692915050565b8082028115828204841417610297576102976116a4565b80820180821115610297576102976116a456fea2646970667358221220c4bc85dec2ab535ec0fae7ff69d74ef7bba4bca73f1c7642d164e418be73d55d64736f6c63430008160033';

type StorageMessageIdMultisigIsmConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StorageMessageIdMultisigIsmConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StorageMessageIdMultisigIsm__factory extends ContractFactory {
  constructor(...args: StorageMessageIdMultisigIsmConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _validators: string[],
    _threshold: BigNumberish,
    overrides?: Overrides & { from?: string },
  ): Promise<StorageMessageIdMultisigIsm> {
    return super.deploy(
      _validators,
      _threshold,
      overrides || {},
    ) as Promise<StorageMessageIdMultisigIsm>;
  }
  override getDeployTransaction(
    _validators: string[],
    _threshold: BigNumberish,
    overrides?: Overrides & { from?: string },
  ): TransactionRequest {
    return super.getDeployTransaction(_validators, _threshold, overrides || {});
  }
  override attach(address: string): StorageMessageIdMultisigIsm {
    return super.attach(address) as StorageMessageIdMultisigIsm;
  }
  override connect(signer: Signer): StorageMessageIdMultisigIsm__factory {
    return super.connect(signer) as StorageMessageIdMultisigIsm__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StorageMessageIdMultisigIsmInterface {
    return new utils.Interface(_abi) as StorageMessageIdMultisigIsmInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): StorageMessageIdMultisigIsm {
    return new Contract(
      address,
      _abi,
      signerOrProvider,
    ) as StorageMessageIdMultisigIsm;
  }
}
