/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Provider } from '@ethersproject/providers';
import { Contract, Signer, utils } from 'ethers';

import type {
  AbstractDomainRoutingIsmFactory,
  AbstractDomainRoutingIsmFactoryInterface,
} from '../../../../../contracts/isms/routing/DomainRoutingIsmFactory.sol/AbstractDomainRoutingIsmFactory.js';

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'contract DomainRoutingIsm',
        name: 'module',
        type: 'address',
      },
    ],
    name: 'ModuleDeployed',
    type: 'event',
  },
  {
    inputs: [],
    name: 'PACKAGE_VERSION',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_owner',
        type: 'address',
      },
      {
        internalType: 'uint32[]',
        name: '_domains',
        type: 'uint32[]',
      },
      {
        internalType: 'contract IInterchainSecurityModule[]',
        name: '_modules',
        type: 'address[]',
      },
    ],
    name: 'deploy',
    outputs: [
      {
        internalType: 'contract DomainRoutingIsm',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'implementation',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
] as const;

export class AbstractDomainRoutingIsmFactory__factory {
  static readonly abi = _abi;
  static createInterface(): AbstractDomainRoutingIsmFactoryInterface {
    return new utils.Interface(
      _abi,
    ) as AbstractDomainRoutingIsmFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): AbstractDomainRoutingIsmFactory {
    return new Contract(
      address,
      _abi,
      signerOrProvider,
    ) as AbstractDomainRoutingIsmFactory;
  }
}
