/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import {
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
  Signer,
  utils,
} from 'ethers';

import type {
  HypXERC20,
  HypXERC20Interface,
} from '../../../../contracts/token/extensions/HypXERC20.js';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_xerc20',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_scale',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: '_mailbox',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint32',
        name: 'domain',
        type: 'uint32',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'gas',
        type: 'uint256',
      },
    ],
    name: 'GasSet',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: '_hook',
        type: 'address',
      },
    ],
    name: 'HookSet',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint8',
        name: 'version',
        type: 'uint8',
      },
    ],
    name: 'Initialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: '_ism',
        type: 'address',
      },
    ],
    name: 'IsmSet',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint32',
        name: 'origin',
        type: 'uint32',
      },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'recipient',
        type: 'bytes32',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'ReceivedTransferRemote',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint32',
        name: 'destination',
        type: 'uint32',
      },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'recipient',
        type: 'bytes32',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'SentTransferRemote',
    type: 'event',
  },
  {
    inputs: [],
    name: 'PACKAGE_VERSION',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    name: 'destinationGas',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'domains',
    outputs: [
      {
        internalType: 'uint32[]',
        name: '',
        type: 'uint32[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_domain',
        type: 'uint32',
      },
      {
        internalType: 'bytes32',
        name: '_router',
        type: 'bytes32',
      },
    ],
    name: 'enrollRemoteRouter',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32[]',
        name: '_domains',
        type: 'uint32[]',
      },
      {
        internalType: 'bytes32[]',
        name: '_addresses',
        type: 'bytes32[]',
      },
    ],
    name: 'enrollRemoteRouters',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_origin',
        type: 'uint32',
      },
      {
        internalType: 'bytes32',
        name: '_sender',
        type: 'bytes32',
      },
      {
        internalType: 'bytes',
        name: '_message',
        type: 'bytes',
      },
    ],
    name: 'handle',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'hook',
    outputs: [
      {
        internalType: 'contract IPostDispatchHook',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_hook',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_interchainSecurityModule',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_owner',
        type: 'address',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'interchainSecurityModule',
    outputs: [
      {
        internalType: 'contract IInterchainSecurityModule',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'localDomain',
    outputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'mailbox',
    outputs: [
      {
        internalType: 'contract IMailbox',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_destinationDomain',
        type: 'uint32',
      },
    ],
    name: 'quoteGasPayment',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_domain',
        type: 'uint32',
      },
    ],
    name: 'routers',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'scale',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'domain',
        type: 'uint32',
      },
      {
        internalType: 'uint256',
        name: 'gas',
        type: 'uint256',
      },
    ],
    name: 'setDestinationGas',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint32',
            name: 'domain',
            type: 'uint32',
          },
          {
            internalType: 'uint256',
            name: 'gas',
            type: 'uint256',
          },
        ],
        internalType: 'struct GasRouter.GasRouterConfig[]',
        name: 'gasConfigs',
        type: 'tuple[]',
      },
    ],
    name: 'setDestinationGas',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_hook',
        type: 'address',
      },
    ],
    name: 'setHook',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_module',
        type: 'address',
      },
    ],
    name: 'setInterchainSecurityModule',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_destination',
        type: 'uint32',
      },
      {
        internalType: 'bytes32',
        name: '_recipient',
        type: 'bytes32',
      },
      {
        internalType: 'uint256',
        name: '_amountOrId',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: '_hookMetadata',
        type: 'bytes',
      },
      {
        internalType: 'address',
        name: '_hook',
        type: 'address',
      },
    ],
    name: 'transferRemote',
    outputs: [
      {
        internalType: 'bytes32',
        name: 'messageId',
        type: 'bytes32',
      },
    ],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_destination',
        type: 'uint32',
      },
      {
        internalType: 'bytes32',
        name: '_recipient',
        type: 'bytes32',
      },
      {
        internalType: 'uint256',
        name: '_amountOrId',
        type: 'uint256',
      },
    ],
    name: 'transferRemote',
    outputs: [
      {
        internalType: 'bytes32',
        name: 'messageId',
        type: 'bytes32',
      },
    ],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_domain',
        type: 'uint32',
      },
    ],
    name: 'unenrollRemoteRouter',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32[]',
        name: '_domains',
        type: 'uint32[]',
      },
    ],
    name: 'unenrollRemoteRouters',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'wrappedToken',
    outputs: [
      {
        internalType: 'contract IERC20',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x6101006040523480156200001257600080fd5b5060405162002b0538038062002b058339810160408190526200003591620002de565b828282818180808080806001600160a01b0381163b6200009c5760405162461bcd60e51b815260206004820152601e60248201527f4d61696c626f78436c69656e743a20696e76616c6964206d61696c626f78000060448201526064015b60405180910390fd5b6001600160a01b03821660808190526040805163234d8e3d60e21b81529051638d3638f4916004808201926020929091908290030181865afa158015620000e7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200010d91906200031f565b63ffffffff1660a0526200012133620001b1565b50505060c0939093525050506001600160a01b0383163b620001905760405162461bcd60e51b815260206004820152602160248201527f4879704552433230436f6c6c61746572616c3a20696e76616c696420746f6b656044820152603760f91b606482015260840162000093565b50506001600160a01b031660e052620001a862000203565b5050506200034e565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16156200026d5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840162000093565b60005460ff90811614620002bf576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b80516001600160a01b0381168114620002d957600080fd5b919050565b600080600060608486031215620002f457600080fd5b620002ff84620002c1565b9250602084015191506200031660408501620002c1565b90509250925092565b6000602082840312156200033257600080fd5b815163ffffffff811681146200034757600080fd5b9392505050565b60805160a05160c05160e051612745620003c06000396000818161045101528181610acb0152818161161801526119140152600081816105c6015281816116a501526118a3015260006103870152600081816104e501528181610927015281816116da0152611a9a01526127456000f3fe6080604052600436106101ac5760003560e01c80638d3638f4116100ec578063d5438eae1161008a578063efae508a11610064578063efae508a14610554578063f2ed8c5314610574578063f2fde38b14610594578063f51e181a146105b457600080fd5b8063d5438eae146104d3578063de523cf314610507578063e9198bf91461053457600080fd5b8063996c6cc3116100c6578063996c6cc31461043f578063b1bd643614610473578063b49c53a714610493578063c0c53b8b146104b357600080fd5b80638d3638f4146103755780638da5cb5b146103be57806393c44847146103e957600080fd5b806356d5d4751161015957806371a15b381161013357806371a15b38146102c3578063775313a1146102e35780637f5a7c7b1461031057806381b4e8b41461036257600080fd5b806356d5d4751461027b57806370a082311461028e578063715018a6146102ae57600080fd5b8063440df4f41161018a578063440df4f41461022657806349d462ef1461024857806351debffc1461026857600080fd5b80630e72cc06146101b15780632ead72f6146101d35780633dfd387314610206575b600080fd5b3480156101bd57600080fd5b506101d16101cc366004611fe1565b6105e8565b005b3480156101df57600080fd5b506101f36101ee366004612010565b610736565b6040519081526020015b60405180910390f35b34801561021257600080fd5b506101d1610221366004611fe1565b610755565b34801561023257600080fd5b5061023b610896565b6040516101fd919061202b565b34801561025457600080fd5b506101d1610263366004612075565b6108a7565b6101f36102763660046120e1565b6108bd565b6101d1610289366004612158565b61090f565b34801561029a57600080fd5b506101f36102a9366004611fe1565b610a83565b3480156102ba57600080fd5b506101d1610b3e565b3480156102cf57600080fd5b506101d16102de3660046121f7565b610b52565b3480156102ef57600080fd5b506101f36102fe366004612010565b60ca6020526000908152604090205481565b34801561031c57600080fd5b5060655461033d9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101fd565b6101f3610370366004612239565b610bad565b34801561038157600080fd5b506103a97f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020016101fd565b3480156103ca57600080fd5b5060335473ffffffffffffffffffffffffffffffffffffffff1661033d565b3480156103f557600080fd5b506104326040518060400160405280600581526020017f372e312e3400000000000000000000000000000000000000000000000000000081525081565b6040516101fd91906122da565b34801561044b57600080fd5b5061033d7f000000000000000000000000000000000000000000000000000000000000000081565b34801561047f57600080fd5b506101d161048e3660046122ed565b610bbb565b34801561049f57600080fd5b506101d16104ae366004612075565b610c31565b3480156104bf57600080fd5b506101d16104ce366004612362565b610c43565b3480156104df57600080fd5b5061033d7f000000000000000000000000000000000000000000000000000000000000000081565b34801561051357600080fd5b5060665461033d9073ffffffffffffffffffffffffffffffffffffffff1681565b34801561054057600080fd5b506101d161054f3660046123a5565b610dda565b34801561056057600080fd5b506101d161056f366004612010565b610eb9565b34801561058057600080fd5b506101f361058f366004612010565b610ecd565b3480156105a057600080fd5b506101d16105af366004611fe1565b610f2e565b3480156105c057600080fd5b506101f37f000000000000000000000000000000000000000000000000000000000000000081565b8073ffffffffffffffffffffffffffffffffffffffff81163b151580610622575073ffffffffffffffffffffffffffffffffffffffff8116155b6106b3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f4d61696c626f78436c69656e743a20696e76616c696420636f6e74726163742060448201527f73657474696e670000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6106bb610fe2565b606680547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff84169081179091556040519081527fc47cbcc588c67679e52261c45cc315e56562f8d0ccaba16facb9093ff9498799906020015b60405180910390a15050565b60008061074d609763ffffffff8086169061106316565b949350505050565b8073ffffffffffffffffffffffffffffffffffffffff81163b15158061078f575073ffffffffffffffffffffffffffffffffffffffff8116155b61081b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f4d61696c626f78436c69656e743a20696e76616c696420636f6e74726163742060448201527f73657474696e670000000000000000000000000000000000000000000000000060648201526084016106aa565b610823610fe2565b606580547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff84169081179091556040519081527f4eab7b127c764308788622363ad3e9532de3dfba7845bd4f84c125a22544255a9060200161072a565b60606108a2609761107c565b905090565b6108af610fe2565b6108b9828261112d565b5050565b60006109048787873488888080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508a925061117b915050565b979650505050505050565b3373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016146109d4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f4d61696c626f78436c69656e743a2073656e646572206e6f74206d61696c626f60448201527f780000000000000000000000000000000000000000000000000000000000000060648201526084016106aa565b60006109df85611202565b9050838114610a70576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f456e726f6c6c656420726f7574657220646f6573206e6f74206d61746368207360448201527f656e64657200000000000000000000000000000000000000000000000000000060648201526084016106aa565b610a7c85858585611267565b5050505050565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82811660048301526000917f0000000000000000000000000000000000000000000000000000000000000000909116906370a0823190602401602060405180830381865afa158015610b14573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b389190612405565b92915050565b610b46610fe2565b610b5060006112fb565b565b610b5a610fe2565b8060005b81811015610ba757610b95848483818110610b7b57610b7b61241e565b9050602002016020810190610b909190612010565b611372565b610ba060018261247c565b9050610b5e565b50505050565b600061074d848484346113c7565b610bc3610fe2565b60005b81811015610c2c57610c1a838383818110610be357610be361241e565b610bf99260206040909202019081019150612010565b848484818110610c0b57610c0b61241e565b9050604002016020013561112d565b610c2560018261247c565b9050610bc6565b505050565b610c39610fe2565b6108b98282611400565b600054610100900460ff1615808015610c635750600054600160ff909116105b80610c7d5750303b158015610c7d575060005460ff166001145b610d09576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084016106aa565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790558015610d6757600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b610d72848484611416565b8015610ba757600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a150505050565b610de2610fe2565b828114610e4b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600760248201527f216c656e6774680000000000000000000000000000000000000000000000000060448201526064016106aa565b8260005b81811015610eb157610e9f868683818110610e6c57610e6c61241e565b9050602002016020810190610e819190612010565b858584818110610e9357610e9361241e565b90506020020135611400565b610eaa60018261247c565b9050610e4f565b505050505050565b610ec1610fe2565b610eca81611372565b50565b6000610b3882610f106000801b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff604051806020016040528060008152506114d0565b60655473ffffffffffffffffffffffffffffffffffffffff166114ff565b610f36610fe2565b73ffffffffffffffffffffffffffffffffffffffff8116610fd9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016106aa565b610eca816112fb565b60335473ffffffffffffffffffffffffffffffffffffffff163314610b50576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106aa565b6000806110708484611515565b915091505b9250929050565b606060006110898361154f565b9050805167ffffffffffffffff8111156110a5576110a561248f565b6040519080825280602002602001820160405280156110ce578160200160208202803683370190505b50915060005b8151811015611126578181815181106110ef576110ef61241e565b60200260200101518382815181106111095761110961241e565b63ffffffff909216602092830291909101909101526001016110d4565b5050919050565b63ffffffff8216600081815260ca6020908152604091829020849055815192835282018390527fc3de732a98b24a2b5c6f67e8a7fb057ffc14046b83968a2c73e4148d2fba978b910161072a565b600080611187866115e0565b905060006111948761169e565b905060006111a38983856114d0565b90506111b28a888389896116ca565b9350888a63ffffffff167fd229aacb94204188fe8042965fa6b269c62dc5818b21238779ab64bdd17efeec846040516111ed91815260200190565b60405180910390a35050509695505050505050565b6000808061121a609763ffffffff8087169061106316565b91509150811561122b579392505050565b6112348461177d565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106aa91906122da565b600061127383836117b4565b9050600061128184846117d3565b905036600061129086866117e3565b915091506112b06112a0856117f3565b6112a98561189c565b84846118c8565b838863ffffffff167fba20947a325f450d232530e5f5fce293e7963499d5309a07cee84a269f2f15a6856040516112e991815260200190565b60405180910390a35050505050505050565b6033805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b611386609763ffffffff8084169061197616565b61138f8261177d565b906108b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106aa91906122da565b60006113f7858585856113d98a611982565b60655473ffffffffffffffffffffffffffffffffffffffff1661117b565b95945050505050565b6108b9609763ffffffff8085169084906119a416565b600054610100900460ff166114ad576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e6700000000000000000000000000000000000000000060648201526084016106aa565b6114b56119af565b6114be83610755565b6114c7826105e8565b610c2c816112fb565b60608383836040516020016114e7939291906124be565b60405160208183030381529060405290509392505050565b600061074d848461150f87611982565b85611a4e565b6000818152600283016020526040812054819080611544576115378585611b22565b9250600091506110759050565b600192509050611075565b6060600061155c83611b2e565b90508067ffffffffffffffff8111156115775761157761248f565b6040519080825280602002602001820160405280156115a0578160200160208202803683370190505b50915060005b81811015611126576115b88482611b39565b60001c8382815181106115cd576115cd61241e565b60209081029190910101526001016115a6565b6040517f9dc29fac000000000000000000000000000000000000000000000000000000008152336004820152602481018290526060907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690639dc29fac90604401600060405180830381600087803b15801561167157600080fd5b505af1158015611685573d6000803e3d6000fd5b5050604080516020810190915260008152949350505050565b6000610b387f0000000000000000000000000000000000000000000000000000000000000000836124eb565b6000806116d687611202565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166310b83dc08789848989896040518763ffffffff1660e01b815260040161173a959493929190612502565b60206040518083038185885af1158015611758573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906109049190612405565b606061178e8263ffffffff16611b45565b60405160200161179e9190612562565b6040516020818303038152906040529050919050565b60006117c360208284866125a7565b6117cc916125d1565b9392505050565b60006117c36040602084866125a7565b36600061107083604081876125a7565b600073ffffffffffffffffffffffffffffffffffffffff821115611898576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f5479706543617374733a2062797465733332546f41646472657373206f76657260448201527f666c6f770000000000000000000000000000000000000000000000000000000060648201526084016106aa565b5090565b6000610b387f00000000000000000000000000000000000000000000000000000000000000008361260d565b6040517f40c10f1900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152602482018590527f000000000000000000000000000000000000000000000000000000000000000016906340c10f1990604401600060405180830381600087803b15801561195857600080fd5b505af115801561196c573d6000803e3d6000fd5b5050505050505050565b60006117cc8383611c03565b63ffffffff8116600090815260ca6020526040902054606090610b3890611c20565b610ba7838383611c3e565b600054610100900460ff16611a46576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e6700000000000000000000000000000000000000000060648201526084016106aa565b610b50611c5b565b600080611a5a86611202565b6040517f81d2ea9500000000000000000000000000000000000000000000000000000000815290915073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906381d2ea9590611ad790899085908a908a908a90600401612502565b602060405180830381865afa158015611af4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b189190612405565b9695505050505050565b60006117cc8383611cfb565b6000610b3882611d13565b60006117cc8383611d1d565b60606000611b5283611d47565b600101905060008167ffffffffffffffff811115611b7257611b7261248f565b6040519080825280601f01601f191660200182016040528015611b9c576020820181803683370190505b5090508181016020015b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8504945084611ba657509392505050565b600081815260028301602052604081208190556117cc8383611e29565b6060610b386000833360405180602001604052806000815250611e35565b6000828152600284016020526040812082905561074d8484611e6a565b600054610100900460ff16611cf2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e6700000000000000000000000000000000000000000060648201526084016106aa565b610b50336112fb565b600081815260018301602052604081205415156117cc565b6000610b38825490565b6000826000018281548110611d3457611d3461241e565b9060005260206000200154905092915050565b6000807a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611d90577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef81000000008310611dbc576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310611dda57662386f26fc10000830492506010015b6305f5e1008310611df2576305f5e100830492506008015b6127108310611e0657612710830492506004015b60648310611e18576064830492506002015b600a8310610b385760010192915050565b60006117cc8383611e76565b6060600185858585604051602001611e51959493929190612648565b6040516020818303038152906040529050949350505050565b60006117cc8383611f69565b60008181526001830160205260408120548015611f5f576000611e9a6001836126cd565b8554909150600090611eae906001906126cd565b9050818114611f13576000866000018281548110611ece57611ece61241e565b9060005260206000200154905080876000018481548110611ef157611ef161241e565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080611f2457611f246126e0565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610b38565b6000915050610b38565b6000818152600183016020526040812054611fb057508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610b38565b506000610b38565b803573ffffffffffffffffffffffffffffffffffffffff81168114611fdc57600080fd5b919050565b600060208284031215611ff357600080fd5b6117cc82611fb8565b803563ffffffff81168114611fdc57600080fd5b60006020828403121561202257600080fd5b6117cc82611ffc565b6020808252825182820181905260009190848201906040850190845b8181101561206957835163ffffffff1683529284019291840191600101612047565b50909695505050505050565b6000806040838503121561208857600080fd5b61209183611ffc565b946020939093013593505050565b60008083601f8401126120b157600080fd5b50813567ffffffffffffffff8111156120c957600080fd5b60208301915083602082850101111561107557600080fd5b60008060008060008060a087890312156120fa57600080fd5b61210387611ffc565b95506020870135945060408701359350606087013567ffffffffffffffff81111561212d57600080fd5b61213989828a0161209f565b909450925061214c905060808801611fb8565b90509295509295509295565b6000806000806060858703121561216e57600080fd5b61217785611ffc565b935060208501359250604085013567ffffffffffffffff81111561219a57600080fd5b6121a68782880161209f565b95989497509550505050565b60008083601f8401126121c457600080fd5b50813567ffffffffffffffff8111156121dc57600080fd5b6020830191508360208260051b850101111561107557600080fd5b6000806020838503121561220a57600080fd5b823567ffffffffffffffff81111561222157600080fd5b61222d858286016121b2565b90969095509350505050565b60008060006060848603121561224e57600080fd5b61225784611ffc565b95602085013595506040909401359392505050565b60005b8381101561228757818101518382015260200161226f565b50506000910152565b600081518084526122a881602086016020860161226c565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006117cc6020830184612290565b6000806020838503121561230057600080fd5b823567ffffffffffffffff8082111561231857600080fd5b818501915085601f83011261232c57600080fd5b81358181111561233b57600080fd5b8660208260061b850101111561235057600080fd5b60209290920196919550909350505050565b60008060006060848603121561237757600080fd5b61238084611fb8565b925061238e60208501611fb8565b915061239c60408501611fb8565b90509250925092565b600080600080604085870312156123bb57600080fd5b843567ffffffffffffffff808211156123d357600080fd5b6123df888389016121b2565b909650945060208701359150808211156123f857600080fd5b506121a6878288016121b2565b60006020828403121561241757600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b80820180821115610b3857610b3861244d565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b838152826020820152600082516124dc81604085016020870161226c565b91909101604001949350505050565b8082028115828204841417610b3857610b3861244d565b63ffffffff8616815284602082015260a06040820152600061252760a0830186612290565b82810360608401526125398186612290565b91505073ffffffffffffffffffffffffffffffffffffffff831660808301529695505050505050565b7f4e6f20726f7574657220656e726f6c6c656420666f7220646f6d61696e3a200081526000825161259a81601f85016020870161226c565b91909101601f0192915050565b600080858511156125b757600080fd5b838611156125c457600080fd5b5050820193919092039150565b80356020831015610b38577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff602084900360031b1b1692915050565b600082612643577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b7fffff0000000000000000000000000000000000000000000000000000000000008660f01b1681528460028201528360228201527fffffffffffffffffffffffffffffffffffffffff0000000000000000000000008360601b166042820152600082516126bc81605685016020870161226c565b919091016056019695505050505050565b81810381811115610b3857610b3861244d565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea2646970667358221220f90583b31fabb25835cc15747d167ece74d93fd15130df081504fd2d3f95fddb64736f6c63430008160033';

type HypXERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HypXERC20ConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HypXERC20__factory extends ContractFactory {
  constructor(...args: HypXERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _xerc20: string,
    _scale: BigNumberish,
    _mailbox: string,
    overrides?: Overrides & { from?: string },
  ): Promise<HypXERC20> {
    return super.deploy(
      _xerc20,
      _scale,
      _mailbox,
      overrides || {},
    ) as Promise<HypXERC20>;
  }
  override getDeployTransaction(
    _xerc20: string,
    _scale: BigNumberish,
    _mailbox: string,
    overrides?: Overrides & { from?: string },
  ): TransactionRequest {
    return super.getDeployTransaction(
      _xerc20,
      _scale,
      _mailbox,
      overrides || {},
    );
  }
  override attach(address: string): HypXERC20 {
    return super.attach(address) as HypXERC20;
  }
  override connect(signer: Signer): HypXERC20__factory {
    return super.connect(signer) as HypXERC20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HypXERC20Interface {
    return new utils.Interface(_abi) as HypXERC20Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): HypXERC20 {
    return new Contract(address, _abi, signerOrProvider) as HypXERC20;
  }
}
