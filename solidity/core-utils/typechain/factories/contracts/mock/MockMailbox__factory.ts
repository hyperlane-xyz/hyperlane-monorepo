/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import {
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
  Signer,
  utils,
} from 'ethers';

import type {
  MockMailbox,
  MockMailboxInterface,
} from '../../../contracts/mock/MockMailbox.js';

const _abi = [
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_domain',
        type: 'uint32',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'hook',
        type: 'address',
      },
    ],
    name: 'DefaultHookSet',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'module',
        type: 'address',
      },
    ],
    name: 'DefaultIsmSet',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint32',
        name: 'destination',
        type: 'uint32',
      },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'recipient',
        type: 'bytes32',
      },
      {
        indexed: false,
        internalType: 'bytes',
        name: 'message',
        type: 'bytes',
      },
    ],
    name: 'Dispatch',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'messageId',
        type: 'bytes32',
      },
    ],
    name: 'DispatchId',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint8',
        name: 'version',
        type: 'uint8',
      },
    ],
    name: 'Initialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint32',
        name: 'origin',
        type: 'uint32',
      },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'sender',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'recipient',
        type: 'address',
      },
    ],
    name: 'Process',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'messageId',
        type: 'bytes32',
      },
    ],
    name: 'ProcessId',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'hook',
        type: 'address',
      },
    ],
    name: 'RequiredHookSet',
    type: 'event',
  },
  {
    inputs: [],
    name: 'PACKAGE_VERSION',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'VERSION',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'message',
        type: 'bytes',
      },
    ],
    name: 'addInboundMessage',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_domain',
        type: 'uint32',
      },
      {
        internalType: 'contract MockMailbox',
        name: '_mailbox',
        type: 'address',
      },
    ],
    name: 'addRemoteMailbox',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultHook',
    outputs: [
      {
        internalType: 'contract IPostDispatchHook',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultIsm',
    outputs: [
      {
        internalType: 'contract IInterchainSecurityModule',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: '_id',
        type: 'bytes32',
      },
    ],
    name: 'delivered',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'deployedBlock',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'destinationDomain',
        type: 'uint32',
      },
      {
        internalType: 'bytes32',
        name: 'recipientAddress',
        type: 'bytes32',
      },
      {
        internalType: 'bytes',
        name: 'messageBody',
        type: 'bytes',
      },
      {
        internalType: 'bytes',
        name: 'metadata',
        type: 'bytes',
      },
      {
        internalType: 'contract IPostDispatchHook',
        name: 'hook',
        type: 'address',
      },
    ],
    name: 'dispatch',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'destinationDomain',
        type: 'uint32',
      },
      {
        internalType: 'bytes32',
        name: 'recipientAddress',
        type: 'bytes32',
      },
      {
        internalType: 'bytes',
        name: 'messageBody',
        type: 'bytes',
      },
      {
        internalType: 'bytes',
        name: 'hookMetadata',
        type: 'bytes',
      },
    ],
    name: 'dispatch',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_destinationDomain',
        type: 'uint32',
      },
      {
        internalType: 'bytes32',
        name: '_recipientAddress',
        type: 'bytes32',
      },
      {
        internalType: 'bytes',
        name: '_messageBody',
        type: 'bytes',
      },
    ],
    name: 'dispatch',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'inboundMessages',
    outputs: [
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'inboundProcessedNonce',
    outputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'inboundUnprocessedNonce',
    outputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_owner',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_defaultIsm',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_defaultHook',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_requiredHook',
        type: 'address',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'latestDispatchedId',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'localDomain',
    outputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'nonce',
    outputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: '_metadata',
        type: 'bytes',
      },
      {
        internalType: 'bytes',
        name: '_message',
        type: 'bytes',
      },
    ],
    name: 'process',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_nonce',
        type: 'uint32',
      },
    ],
    name: 'processInboundMessage',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'processNextInboundMessage',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: '_id',
        type: 'bytes32',
      },
    ],
    name: 'processedAt',
    outputs: [
      {
        internalType: 'uint48',
        name: '',
        type: 'uint48',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: '_id',
        type: 'bytes32',
      },
    ],
    name: 'processor',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'destinationDomain',
        type: 'uint32',
      },
      {
        internalType: 'bytes32',
        name: 'recipientAddress',
        type: 'bytes32',
      },
      {
        internalType: 'bytes',
        name: 'messageBody',
        type: 'bytes',
      },
      {
        internalType: 'bytes',
        name: 'metadata',
        type: 'bytes',
      },
      {
        internalType: 'contract IPostDispatchHook',
        name: 'hook',
        type: 'address',
      },
    ],
    name: 'quoteDispatch',
    outputs: [
      {
        internalType: 'uint256',
        name: 'fee',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'destinationDomain',
        type: 'uint32',
      },
      {
        internalType: 'bytes32',
        name: 'recipientAddress',
        type: 'bytes32',
      },
      {
        internalType: 'bytes',
        name: 'messageBody',
        type: 'bytes',
      },
    ],
    name: 'quoteDispatch',
    outputs: [
      {
        internalType: 'uint256',
        name: 'fee',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'destinationDomain',
        type: 'uint32',
      },
      {
        internalType: 'bytes32',
        name: 'recipientAddress',
        type: 'bytes32',
      },
      {
        internalType: 'bytes',
        name: 'messageBody',
        type: 'bytes',
      },
      {
        internalType: 'bytes',
        name: 'defaultHookMetadata',
        type: 'bytes',
      },
    ],
    name: 'quoteDispatch',
    outputs: [
      {
        internalType: 'uint256',
        name: 'fee',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_recipient',
        type: 'address',
      },
    ],
    name: 'recipientIsm',
    outputs: [
      {
        internalType: 'contract IInterchainSecurityModule',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    name: 'remoteMailboxes',
    outputs: [
      {
        internalType: 'contract MockMailbox',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'requiredHook',
    outputs: [
      {
        internalType: 'contract IPostDispatchHook',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_hook',
        type: 'address',
      },
    ],
    name: 'setDefaultHook',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_module',
        type: 'address',
      },
    ],
    name: 'setDefaultIsm',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_hook',
        type: 'address',
      },
    ],
    name: 'setRequiredHook',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x60c0604052606b80546001600160401b03191690553480156200002157600080fd5b50604051620034cd380380620034cd833981016040819052620000449162000248565b4360805263ffffffff811660a05260405160009062000063906200022c565b604051809103906000f08015801562000080573d6000803e3d6000fd5b50606780546001600160a01b0319166001600160a01b038316179055604051909150600090620000b0906200023a565b604051809103906000f080158015620000cd573d6000803e3d6000fd5b50606880546001600160a01b0383166001600160a01b031991821681179092556069805490911690911790559050620001063362000119565b620001106200016b565b50505062000277565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff1615620001d85760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff908116146200022a576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b6102258062002e5083390190565b610458806200307583390190565b6000602082840312156200025b57600080fd5b815163ffffffff811681146200027057600080fd5b9392505050565b60805160a051612ba5620002ab6000396000818161054101528181610e320152611b1e0152600061050d0152612ba56000f3fe6080604052600436106102345760003560e01c80638d3638f411610138578063d6d08a09116100b0578063f794687a1161007f578063f8c8765e11610064578063f8c8765e146107d5578063fa31de01146107f5578063ffa1ad741461080857600080fd5b8063f794687a14610795578063f7ccd321146107b557600080fd5b8063d6d08a09146106c9578063e495f1d4146106f6578063e70f48ac14610755578063f2fde38b1461077557600080fd5b806399b0480911610107578063a3b4919f116100ec578063a3b4919f14610644578063affed0e014610687578063d12164e4146106a457600080fd5b806399b04809146106045780639c42bd181461062457600080fd5b80638d3638f41461052f5780638da5cb5b1461056357806392d28b3d1461058e57806393c44847146105bb57600080fd5b806348aee8d4116101cb578063715018a61161019a57806381d2ea951161017f57806381d2ea95146104a95780638209d312146104c957806382ea7bfe146104fb57600080fd5b8063715018a6146104815780637c39d1301461049657600080fd5b806348aee8d41461038857806359b3f6e01461039b5780635d1fe5a9146104115780636e5f516e1461045457600080fd5b80631426b7f4116102075780631426b7f4146102ee5780631605c3061461030e5780633288990c146103165780633d1250b71461033657600080fd5b806307a2fda1146102395780630a2ee402146102a257806310b83dc0146102b7578063134fbb4f146102d8575b600080fd5b34801561024557600080fd5b506102866102543660046121fb565b6000908152606a602052604090205474010000000000000000000000000000000000000000900465ffffffffffff1690565b60405165ffffffffffff90911681526020015b60405180910390f35b6102b56102b036600461222d565b61082f565b005b6102ca6102c53660046122ac565b610944565b604051908152602001610299565b3480156102e457600080fd5b506102ca60665481565b3480156102fa57600080fd5b506102b561030936600461234a565b610a94565b6102b5610baf565b34801561032257600080fd5b506102b5610331366004612367565b610d0c565b34801561034257600080fd5b506068546103639073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610299565b6102ca6103963660046123a9565b610d68565b3480156103a757600080fd5b506102b56103b6366004612433565b63ffffffff919091166000908152606c6020526040902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909216919091179055565b34801561041d57600080fd5b5061036361042c3660046121fb565b6000908152606a602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b34801561046057600080fd5b506067546103639073ffffffffffffffffffffffffffffffffffffffff1681565b34801561048d57600080fd5b506102b5610da6565b6102b56104a436600461246a565b610dba565b3480156104b557600080fd5b506102ca6104c43660046122ac565b61125c565b3480156104d557600080fd5b50606b546104e69063ffffffff1681565b60405163ffffffff9091168152602001610299565b34801561050757600080fd5b506102ca7f000000000000000000000000000000000000000000000000000000000000000081565b34801561053b57600080fd5b506104e67f000000000000000000000000000000000000000000000000000000000000000081565b34801561056f57600080fd5b5060335473ffffffffffffffffffffffffffffffffffffffff16610363565b34801561059a57600080fd5b506105ae6105a93660046121fb565b6113ef565b6040516102999190612544565b3480156105c757600080fd5b506105ae6040518060400160405280600581526020017f372e312e3400000000000000000000000000000000000000000000000000000081525081565b34801561061057600080fd5b506102b561061f36600461234a565b611489565b34801561063057600080fd5b506102ca61063f366004612557565b6115a4565b34801561065057600080fd5b5061036361065f36600461222d565b606c6020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b34801561069357600080fd5b506065546104e69063ffffffff1681565b3480156106b057600080fd5b50606b546104e690640100000000900463ffffffff1681565b3480156106d557600080fd5b506069546103639073ffffffffffffffffffffffffffffffffffffffff1681565b34801561070257600080fd5b506107456107113660046121fb565b6000908152606a602052604090205474010000000000000000000000000000000000000000900465ffffffffffff16151590565b6040519015158152602001610299565b34801561076157600080fd5b5061036361077036600461234a565b6115e0565b34801561078157600080fd5b506102b561079036600461234a565b611717565b3480156107a157600080fd5b506102b56107b036600461234a565b6117ce565b3480156107c157600080fd5b506102ca6107d03660046123a9565b6118e9565b3480156107e157600080fd5b506102b56107f03660046125a5565b61191c565b6102ca610803366004612557565b611ad6565b34801561081457600080fd5b5061081d600381565b60405160ff9091168152602001610299565b63ffffffff81166000908152606d60205260408120805461084f90612601565b80601f016020809104026020016040519081016040528092919081815260200182805461087b90612601565b80156108c85780601f1061089d576101008083540402835291602001916108c8565b820191906000526020600020905b8154815290600101906020018083116108ab57829003601f168201915b50506040517f7c39d1300000000000000000000000000000000000000000000000000000000081529394503093637c39d130935034925061090e91508590600401612654565b6000604051808303818588803b15801561092757600080fd5b505af115801561093b573d6000803e3d6000fd5b50505050505050565b60008061095389898989611b09565b905060006109668a8a8a8a8a8a8a611b47565b63ffffffff8b166000908152606c602052604090205490915073ffffffffffffffffffffffffffffffffffffffff1680610a01576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4d697373696e672072656d6f7465206d61696c626f780000000000000000000060448201526064015b60405180910390fd5b6040517f3288990c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff821690633288990c90610a53908690600401612544565b600060405180830381600087803b158015610a6d57600080fd5b505af1158015610a81573d6000803e3d6000fd5b50939d9c50505050505050505050505050565b610a9c611e1b565b73ffffffffffffffffffffffffffffffffffffffff81163b610b40576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f4d61696c626f783a20726571756972656420686f6f6b206e6f7420636f6e747260448201527f616374000000000000000000000000000000000000000000000000000000000060648201526084016109f8565b606980547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040517f329ec8e2438a73828ecf31a6568d7a91d7b1d79e342b0692914fd053d1a002b190600090a250565b606b54640100000000900463ffffffff166000908152606d602052604081208054610bd990612601565b80601f0160208091040260200160405190810160405280929190818152602001828054610c0590612601565b8015610c525780601f10610c2757610100808354040283529160200191610c52565b820191906000526020600020905b815481529060010190602001808311610c3557829003601f168201915b50506040517f7c39d1300000000000000000000000000000000000000000000000000000000081529394503093637c39d1309350349250610c9891508590600401612654565b6000604051808303818588803b158015610cb157600080fd5b505af1158015610cc5573d6000803e3d6000fd5b5050606b8054640100000000900463ffffffff169350915060049050610cea836126a4565b91906101000a81548163ffffffff021916908363ffffffff1602179055505050565b606b5463ffffffff166000908152606d60205260409020610d2e828483612747565b50606b805463ffffffff16906000610d45836126a4565b91906101000a81548163ffffffff021916908363ffffffff160217905550505050565b6000610d9b878787878787606860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610944565b979650505050505050565b610dae611e1b565b610db86000611e9c565b565b6003610dc68383611f13565b60ff1614610e30576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f4d61696c626f783a206261642076657273696f6e00000000000000000000000060448201526064016109f8565b7f000000000000000000000000000000000000000000000000000000000000000063ffffffff16610e618383611f37565b63ffffffff1614610ece576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f4d61696c626f783a20756e65787065637465642064657374696e6174696f6e0060448201526064016109f8565b6000610f0f83838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611f5a92505050565b6000818152606a602052604090205490915074010000000000000000000000000000000000000000900465ffffffffffff1615610fa8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f4d61696c626f783a20616c72656164792064656c69766572656400000000000060448201526064016109f8565b6000610fb48484611f65565b90506000610fc1826115e0565b60408051808201825233815265ffffffffffff43811660208084019182526000898152606a9091529390932091518254935190911674010000000000000000000000000000000000000000027fffffffffffff000000000000000000000000000000000000000000000000000090931673ffffffffffffffffffffffffffffffffffffffff91821617929092179055909150821661105f8686611f80565b6110698787611f99565b63ffffffff167f0d381c2a574ae8f04e213db7cfb4df8df712cdbd427d9868ffef380660ca657460405160405180910390a460405183907f1cae38cdd3d3919489272725a5ae62a4f48b2989b0dae843d3c279fee18073a990600090a26040517ff7e83aee00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82169063f7e83aee9061111e908a908a908a908a906004016128aa565b6020604051808303816000875af115801561113d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061116191906128d1565b6111c7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4d61696c626f783a2049534d20766572696669636174696f6e206661696c656460448201526064016109f8565b8173ffffffffffffffffffffffffffffffffffffffff166356d5d475346111ee8888611f99565b6111f88989611f80565b6112028a8a611fa9565b6040518663ffffffff1660e01b815260040161122194939291906128f3565b6000604051808303818588803b15801561123a57600080fd5b505af115801561124e573d6000803e3d6000fd5b505050505050505050505050565b600073ffffffffffffffffffffffffffffffffffffffff82166112955760685473ffffffffffffffffffffffffffffffffffffffff1691505b60006112a389898989611b09565b6040517faaccd23000000000000000000000000000000000000000000000000000000000815290915073ffffffffffffffffffffffffffffffffffffffff84169063aaccd230906112fc90889088908690600401612923565b602060405180830381865afa158015611319573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061133d9190612949565b6069546040517faaccd23000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063aaccd2309061139790899089908790600401612923565b602060405180830381865afa1580156113b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113d89190612949565b6113e29190612962565b9998505050505050505050565b606d602052600090815260409020805461140890612601565b80601f016020809104026020016040519081016040528092919081815260200182805461143490612601565b80156114815780601f1061145657610100808354040283529160200191611481565b820191906000526020600020905b81548152906001019060200180831161146457829003601f168201915b505050505081565b611491611e1b565b73ffffffffffffffffffffffffffffffffffffffff81163b611535576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f4d61696c626f783a2064656661756c7420686f6f6b206e6f7420636f6e74726160448201527f637400000000000000000000000000000000000000000000000000000000000060648201526084016109f8565b606880547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040517f65a63e5066ee2fcdf9d32a7f1bf7ce71c76066f19d0609dddccd334ab87237d790600090a250565b60006115d7858585856115b986808385612975565b60685473ffffffffffffffffffffffffffffffffffffffff1661125c565b95945050505050565b60408051600481526024810182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fde523cf30000000000000000000000000000000000000000000000000000000017905290516000918291829173ffffffffffffffffffffffffffffffffffffffff861691611661919061299f565b600060405180830381855afa9150503d806000811461169c576040519150601f19603f3d011682016040523d82523d6000602084013e6116a1565b606091505b50915091508180156116b35750805115155b156116f6576000818060200190518101906116ce91906129bb565b905073ffffffffffffffffffffffffffffffffffffffff8116156116f457949350505050565b505b505060675473ffffffffffffffffffffffffffffffffffffffff1692915050565b61171f611e1b565b73ffffffffffffffffffffffffffffffffffffffff81166117c2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016109f8565b6117cb81611e9c565b50565b6117d6611e1b565b73ffffffffffffffffffffffffffffffffffffffff81163b61187a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f4d61696c626f783a2064656661756c742049534d206e6f7420636f6e7472616360448201527f740000000000000000000000000000000000000000000000000000000000000060648201526084016109f8565b606780547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040517fa76ad0adbf45318f8633aa0210f711273d50fbb6fef76ed95bbae97082c75daa90600090a250565b6000610d9b878787878787606860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661125c565b600054610100900460ff161580801561193c5750600054600160ff909116105b806119565750303b158015611956575060005460ff166001145b6119e2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084016109f8565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790558015611a4057600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b611a48611fc5565b611a51846117ce565b611a5a83611489565b611a6382610a94565b611a6c85611717565b8015611acf57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050565b60006115d785858585611aeb86808385612975565b60685473ffffffffffffffffffffffffffffffffffffffff16610944565b6065546060906115d79060039063ffffffff167f00000000000000000000000000000000000000000000000000000000000000003389898989612064565b600073ffffffffffffffffffffffffffffffffffffffff8216611b805760685473ffffffffffffffffffffffffffffffffffffffff1691505b6000611b8e89898989611b09565b80516020820120606681905560658054929350909160019190600090611bbb90849063ffffffff166129d8565b92506101000a81548163ffffffff021916908363ffffffff160217905550888a63ffffffff163373ffffffffffffffffffffffffffffffffffffffff167f769f711d20c679153d382254f59892613b58a97cc876b249134ac25c80f9c81485604051611c279190612544565b60405180910390a460405181907f788dbc1b7152732178210e7f4d9d010ef016f9eafbe66786bd7169f56e0c353a90600090a26069546040517faaccd23000000000000000000000000000000000000000000000000000000000815260009173ffffffffffffffffffffffffffffffffffffffff169063aaccd23090611cb5908a908a908890600401612923565b602060405180830381865afa158015611cd2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cf69190612949565b905080341015611d035750345b6069546040517f086011b900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063086011b9908390611d5f908b908b908990600401612923565b6000604051808303818588803b158015611d7857600080fd5b505af1158015611d8c573d6000803e3d6000fd5b50505050508473ffffffffffffffffffffffffffffffffffffffff1663086011b98234611db991906129fc565b8989876040518563ffffffff1660e01b8152600401611dda93929190612923565b6000604051808303818588803b158015611df357600080fd5b505af1158015611e07573d6000803e3d6000fd5b50949e9d5050505050505050505050505050565b60335473ffffffffffffffffffffffffffffffffffffffff163314610db8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016109f8565b6033805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000611f226001828486612975565b611f2b91612a0f565b60f81c90505b92915050565b6000611f47602d60298486612975565b611f5091612a57565b60e01c9392505050565b805160209091012090565b6000611f79611f7484846120a2565b6120b2565b9392505050565b6000611f90602960098486612975565b611f7991612a9d565b6000611f47600960058486612975565b366000611fb983604d8187612975565b915091505b9250929050565b600054610100900460ff1661205c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e6700000000000000000000000000000000000000000060648201526084016109f8565b610db861215b565b60608888888888888888604051602001612085989796959493929190612ad9565b604051602081830303815290604052905098975050505050505050565b6000611f90604d602d8486612975565b600073ffffffffffffffffffffffffffffffffffffffff821115612157576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f5479706543617374733a2062797465733332546f41646472657373206f76657260448201527f666c6f770000000000000000000000000000000000000000000000000000000060648201526084016109f8565b5090565b600054610100900460ff166121f2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e6700000000000000000000000000000000000000000060648201526084016109f8565b610db833611e9c565b60006020828403121561220d57600080fd5b5035919050565b803563ffffffff8116811461222857600080fd5b919050565b60006020828403121561223f57600080fd5b611f7982612214565b60008083601f84011261225a57600080fd5b50813567ffffffffffffffff81111561227257600080fd5b602083019150836020828501011115611fbe57600080fd5b73ffffffffffffffffffffffffffffffffffffffff811681146117cb57600080fd5b600080600080600080600060a0888a0312156122c757600080fd5b6122d088612214565b965060208801359550604088013567ffffffffffffffff808211156122f457600080fd5b6123008b838c01612248565b909750955060608a013591508082111561231957600080fd5b506123268a828b01612248565b909450925050608088013561233a8161228a565b8091505092959891949750929550565b60006020828403121561235c57600080fd5b8135611f798161228a565b6000806020838503121561237a57600080fd5b823567ffffffffffffffff81111561239157600080fd5b61239d85828601612248565b90969095509350505050565b600080600080600080608087890312156123c257600080fd5b6123cb87612214565b955060208701359450604087013567ffffffffffffffff808211156123ef57600080fd5b6123fb8a838b01612248565b9096509450606089013591508082111561241457600080fd5b5061242189828a01612248565b979a9699509497509295939492505050565b6000806040838503121561244657600080fd5b61244f83612214565b9150602083013561245f8161228a565b809150509250929050565b6000806000806040858703121561248057600080fd5b843567ffffffffffffffff8082111561249857600080fd5b6124a488838901612248565b909650945060208701359150808211156124bd57600080fd5b506124ca87828801612248565b95989497509550505050565b60005b838110156124f15781810151838201526020016124d9565b50506000910152565b600081518084526125128160208601602086016124d6565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602081526000611f7960208301846124fa565b6000806000806060858703121561256d57600080fd5b61257685612214565b935060208501359250604085013567ffffffffffffffff81111561259957600080fd5b6124ca87828801612248565b600080600080608085870312156125bb57600080fd5b84356125c68161228a565b935060208501356125d68161228a565b925060408501356125e68161228a565b915060608501356125f68161228a565b939692955090935050565b600181811c9082168061261557607f821691505b60208210810361264e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b6040815260006040820152606060208201526000611f7960608301846124fa565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600063ffffffff8083168181036126bd576126bd612675565b6001019392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b601f821115612742576000816000526020600020601f850160051c8101602086101561271f5750805b601f850160051c820191505b8181101561273e5782815560010161272b565b5050505b505050565b67ffffffffffffffff83111561275f5761275f6126c7565b6127738361276d8354612601565b836126f6565b6000601f8411600181146127c5576000851561278f5750838201355b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600387901b1c1916600186901b178355611acf565b6000838152602090207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0861690835b8281101561281457868501358255602094850194600190920191016127f4565b508682101561284f577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88860031b161c19848701351681555b505060018560011b0183555050505050565b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b6040815260006128be604083018688612861565b8281036020840152610d9b818587612861565b6000602082840312156128e357600080fd5b81518015158114611f7957600080fd5b63ffffffff85168152836020820152606060408201526000612919606083018486612861565b9695505050505050565b604081526000612937604083018587612861565b828103602084015261291981856124fa565b60006020828403121561295b57600080fd5b5051919050565b80820180821115611f3157611f31612675565b6000808585111561298557600080fd5b8386111561299257600080fd5b5050820193919092039150565b600082516129b18184602087016124d6565b9190910192915050565b6000602082840312156129cd57600080fd5b8151611f798161228a565b63ffffffff8181168382160190808211156129f5576129f5612675565b5092915050565b81810381811115611f3157611f31612675565b7fff000000000000000000000000000000000000000000000000000000000000008135818116916001851015612a4f5780818660010360031b1b83161692505b505092915050565b7fffffffff000000000000000000000000000000000000000000000000000000008135818116916004851015612a4f5760049490940360031b84901b1690921692915050565b80356020831015611f31577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff602084900360031b1b1692915050565b7fff000000000000000000000000000000000000000000000000000000000000008960f81b16815260007fffffffff00000000000000000000000000000000000000000000000000000000808a60e01b166001840152808960e01b166005840152876009840152808760e01b1660298401525084602d8301528284604d8401375060009101604d0190815297965050505050505056fea26469706673582212206482ee68c5028397004c4162be88ae00ded5c649ccf07ab76d760611c589d9f264736f6c6343000816003360806040526000805461ffff191661010617905534801561001f57600080fd5b506101f68061002f6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80636465e69f14610046578063951a291f1461006a578063f7e83aee146100b1575b600080fd5b6000546100539060ff1681565b60405160ff90911681526020015b60405180910390f35b6100af6100783660046100e2565b60008054911515610100027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff909216919091179055565b005b6100d26100bf366004610154565b5050600054610100900460ff1692915050565b6040519015158152602001610061565b6000602082840312156100f457600080fd5b8135801515811461010457600080fd5b9392505050565b60008083601f84011261011d57600080fd5b50813567ffffffffffffffff81111561013557600080fd5b60208301915083602082850101111561014d57600080fd5b9250929050565b6000806000806040858703121561016a57600080fd5b843567ffffffffffffffff8082111561018257600080fd5b61018e8883890161010b565b909650945060208701359150808211156101a757600080fd5b506101b48782880161010b565b9598949750955050505056fea2646970667358221220819733c099e51c47f2ab1bfb0a8c25fc5546b5d715de6aee84959e82cdf9b48164736f6c6343000816003360806040526000805534801561001457600080fd5b50610434806100246000396000f3fe60806040526004361061007b5760003560e01c8063ddca3f431161004e578063ddca3f4314610148578063e445e7dd1461015e578063e5320bb91461017a578063f667ee91146101ad57600080fd5b8063086011b91461008057806369fe0e2d1461009557806393c44847146100b5578063aaccd23014610114575b600080fd5b61009361008e3660046102ca565b6101dd565b005b3480156100a157600080fd5b506100936100b0366004610336565b600055565b3480156100c157600080fd5b506100fe6040518060400160405280600581526020017f372e312e3400000000000000000000000000000000000000000000000000000081525081565b60405161010b919061034f565b60405180910390f35b34801561012057600080fd5b5061013a61012f3660046102ca565b505060005492915050565b60405190815260200161010b565b34801561015457600080fd5b5061013a60005481565b34801561016a57600080fd5b506040516000815260200161010b565b34801561018657600080fd5b5061019d6101953660046103bc565b600192915050565b604051901515815260200161010b565b3480156101b957600080fd5b5061019d6101c8366004610336565b60016020526000908152604090205460ff1681565b6101e9848484846101ef565b50505050565b600180600061023385858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061027692505050565b8152602081019190915260400160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001691151591909117905550505050565b805160209091012090565b60008083601f84011261029357600080fd5b50813567ffffffffffffffff8111156102ab57600080fd5b6020830191508360208285010111156102c357600080fd5b9250929050565b600080600080604085870312156102e057600080fd5b843567ffffffffffffffff808211156102f857600080fd5b61030488838901610281565b9096509450602087013591508082111561031d57600080fd5b5061032a87828801610281565b95989497509550505050565b60006020828403121561034857600080fd5b5035919050565b60006020808352835180602085015260005b8181101561037d57858101830151858201604001528201610361565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b600080602083850312156103cf57600080fd5b823567ffffffffffffffff8111156103e657600080fd5b6103f285828601610281565b9096909550935050505056fea2646970667358221220b8e4db362bae39af77e2bcb66823508e0dad3e1d55c4f9ca348cd5f637da84b764736f6c63430008160033';

type MockMailboxConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockMailboxConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockMailbox__factory extends ContractFactory {
  constructor(...args: MockMailboxConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: BigNumberish,
    overrides?: Overrides & { from?: string },
  ): Promise<MockMailbox> {
    return super.deploy(_domain, overrides || {}) as Promise<MockMailbox>;
  }
  override getDeployTransaction(
    _domain: BigNumberish,
    overrides?: Overrides & { from?: string },
  ): TransactionRequest {
    return super.getDeployTransaction(_domain, overrides || {});
  }
  override attach(address: string): MockMailbox {
    return super.attach(address) as MockMailbox;
  }
  override connect(signer: Signer): MockMailbox__factory {
    return super.connect(signer) as MockMailbox__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockMailboxInterface {
    return new utils.Interface(_abi) as MockMailboxInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): MockMailbox {
    return new Contract(address, _abi, signerOrProvider) as MockMailbox;
  }
}
