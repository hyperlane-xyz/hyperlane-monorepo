/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import { Contract, ContractFactory, Overrides, Signer, utils } from 'ethers';

import type {
  ECDSAStakeRegistry,
  ECDSAStakeRegistryInterface,
} from '../../../contracts/avs/ECDSAStakeRegistry.js';

const _abi = [
  {
    inputs: [
      {
        internalType: 'contract IDelegationManager',
        name: '_delegationManager',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'InsufficientSignedStake',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InsufficientWeight',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidLength',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidQuorum',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidReferenceBlock',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidSignature',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidSignedWeight',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidThreshold',
    type: 'error',
  },
  {
    inputs: [],
    name: 'LengthMismatch',
    type: 'error',
  },
  {
    inputs: [],
    name: 'MustUpdateAllOperators',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotSorted',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OperatorAlreadyRegistered',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OperatorNotRegistered',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint8',
        name: 'version',
        type: 'uint8',
      },
    ],
    name: 'Initialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: '_old',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: '_new',
        type: 'uint256',
      },
    ],
    name: 'MinimumWeightUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: '_operator',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: '_avs',
        type: 'address',
      },
    ],
    name: 'OperatorDeregistered',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: '_operator',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: '_avs',
        type: 'address',
      },
    ],
    name: 'OperatorRegistered',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: '_operator',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'oldWeight',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'newWeight',
        type: 'uint256',
      },
    ],
    name: 'OperatorWeightUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'contract IStrategy',
                name: 'strategy',
                type: 'address',
              },
              {
                internalType: 'uint96',
                name: 'multiplier',
                type: 'uint96',
              },
            ],
            internalType: 'struct StrategyParams[]',
            name: 'strategies',
            type: 'tuple[]',
          },
        ],
        indexed: false,
        internalType: 'struct Quorum',
        name: '_old',
        type: 'tuple',
      },
      {
        components: [
          {
            components: [
              {
                internalType: 'contract IStrategy',
                name: 'strategy',
                type: 'address',
              },
              {
                internalType: 'uint96',
                name: 'multiplier',
                type: 'uint96',
              },
            ],
            internalType: 'struct StrategyParams[]',
            name: 'strategies',
            type: 'tuple[]',
          },
        ],
        indexed: false,
        internalType: 'struct Quorum',
        name: '_new',
        type: 'tuple',
      },
    ],
    name: 'QuorumUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'updateBlock',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newSigningKey',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'oldSigningKey',
        type: 'address',
      },
    ],
    name: 'SigningKeyUpdate',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: '_thresholdWeight',
        type: 'uint256',
      },
    ],
    name: 'ThresholdWeightUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'oldTotalWeight',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'newTotalWeight',
        type: 'uint256',
      },
    ],
    name: 'TotalWeightUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'oldMinimumWeight',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'newMinimumWeight',
        type: 'uint256',
      },
    ],
    name: 'UpdateMinimumWeight',
    type: 'event',
  },
  {
    inputs: [],
    name: 'PACKAGE_VERSION',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'deregisterOperator',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_operator',
        type: 'address',
      },
    ],
    name: 'getLastCheckpointOperatorWeight',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getLastCheckpointThresholdWeight',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_blockNumber',
        type: 'uint32',
      },
    ],
    name: 'getLastCheckpointThresholdWeightAtBlock',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getLastCheckpointTotalWeight',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_blockNumber',
        type: 'uint32',
      },
    ],
    name: 'getLastCheckpointTotalWeightAtBlock',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_operator',
        type: 'address',
      },
    ],
    name: 'getLastestOperatorSigningKey',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_operator',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_blockNumber',
        type: 'uint256',
      },
    ],
    name: 'getOperatorSigningKeyAtBlock',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_operator',
        type: 'address',
      },
    ],
    name: 'getOperatorWeight',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_operator',
        type: 'address',
      },
      {
        internalType: 'uint32',
        name: '_blockNumber',
        type: 'uint32',
      },
    ],
    name: 'getOperatorWeightAtBlock',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_serviceManager',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_thresholdWeight',
        type: 'uint256',
      },
      {
        components: [
          {
            components: [
              {
                internalType: 'contract IStrategy',
                name: 'strategy',
                type: 'address',
              },
              {
                internalType: 'uint96',
                name: 'multiplier',
                type: 'uint96',
              },
            ],
            internalType: 'struct StrategyParams[]',
            name: 'strategies',
            type: 'tuple[]',
          },
        ],
        internalType: 'struct Quorum',
        name: '_quorum',
        type: 'tuple',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: '_dataHash',
        type: 'bytes32',
      },
      {
        internalType: 'bytes',
        name: '_signatureData',
        type: 'bytes',
      },
    ],
    name: 'isValidSignature',
    outputs: [
      {
        internalType: 'bytes4',
        name: '',
        type: 'bytes4',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'minimumWeight',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_operator',
        type: 'address',
      },
    ],
    name: 'operatorRegistered',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'quorum',
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'contract IStrategy',
                name: 'strategy',
                type: 'address',
              },
              {
                internalType: 'uint96',
                name: 'multiplier',
                type: 'uint96',
              },
            ],
            internalType: 'struct StrategyParams[]',
            name: 'strategies',
            type: 'tuple[]',
          },
        ],
        internalType: 'struct Quorum',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'bytes',
            name: 'signature',
            type: 'bytes',
          },
          {
            internalType: 'bytes32',
            name: 'salt',
            type: 'bytes32',
          },
          {
            internalType: 'uint256',
            name: 'expiry',
            type: 'uint256',
          },
        ],
        internalType: 'struct ISignatureUtils.SignatureWithSaltAndExpiry',
        name: '_operatorSignature',
        type: 'tuple',
      },
      {
        internalType: 'address',
        name: '_signingKey',
        type: 'address',
      },
    ],
    name: 'registerOperatorWithSignature',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_newMinimumWeight',
        type: 'uint256',
      },
      {
        internalType: 'address[]',
        name: '_operators',
        type: 'address[]',
      },
    ],
    name: 'updateMinimumWeight',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_newSigningKey',
        type: 'address',
      },
    ],
    name: 'updateOperatorSigningKey',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: '_operators',
        type: 'address[]',
      },
    ],
    name: 'updateOperators',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[][]',
        name: 'operatorsPerQuorum',
        type: 'address[][]',
      },
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    name: 'updateOperatorsForQuorum',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'contract IStrategy',
                name: 'strategy',
                type: 'address',
              },
              {
                internalType: 'uint96',
                name: 'multiplier',
                type: 'uint96',
              },
            ],
            internalType: 'struct StrategyParams[]',
            name: 'strategies',
            type: 'tuple[]',
          },
        ],
        internalType: 'struct Quorum',
        name: '_quorum',
        type: 'tuple',
      },
      {
        internalType: 'address[]',
        name: '_operators',
        type: 'address[]',
      },
    ],
    name: 'updateQuorumConfig',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_thresholdWeight',
        type: 'uint256',
      },
    ],
    name: 'updateStakeThreshold',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x60a06040523480156200001157600080fd5b506040516200348938038062003489833981016040819052620000349162000046565b6001600160a01b031660805262000078565b6000602082840312156200005957600080fd5b81516001600160a01b03811681146200007157600080fd5b9392505050565b6080516133f56200009460003960006108e701526133f56000f3fe608060405234801561001057600080fd5b50600436106101ad5760003560e01c8063715018a6116100ee57806398ec1ac911610097578063cdcd358111610071578063cdcd3581146103cb578063dec5d1f6146103de578063ec7fbb31146103f1578063f2fde38b1461043a57600080fd5b806398ec1ac91461039d578063ab118995146103b0578063b933fa74146103c357600080fd5b80638da5cb5b116100c85780638da5cb5b1461032357806393c4484714610341578063955f2d901461038a57600080fd5b8063715018a614610300578063743c31f414610308578063857dc1901461031b57600080fd5b80633b242e4a1161015b5780635140a548116101355780635140a5481461028f5780635e1042e8146102a25780635ef53329146102da578063696255be146102ed57600080fd5b80633b242e4a146102615780633d5611f61461027457806340bf2fb71461028757600080fd5b80631703a0181161018c5780631703a018146102315780631e4cd85e14610246578063314f3a491461025957600080fd5b8062cf2ab5146101b25780630dba3394146101c75780631626ba7e146101ed575b600080fd5b6101c56101c036600461285b565b61044d565b005b6101da6101d53660046128aa565b610459565b6040519081526020015b60405180910390f35b6102006101fb36600461295e565b610475565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020016101e4565b6102396104cc565b6040516101e49190612a1a565b6101da6102543660046128aa565b610582565b6101da610598565b6101da61026f366004612a2d565b6105c7565b6101c5610282366004612a4a565b610619565b6067546101da565b6101c561029d366004612af8565b610628565b6102b56102b0366004612bc2565b61064b565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101e4565b6101c56102e8366004612bee565b610681565b6101c56102fb366004612c07565b610692565b6101c56106ac565b6101c5610316366004612a2d565b6106c0565b6101c5610713565b60335473ffffffffffffffffffffffffffffffffffffffff166102b5565b61037d6040518060400160405280600581526020017f372e312e3400000000000000000000000000000000000000000000000000000081525081565b6040516101e49190612cb2565b6101da610398366004612cc5565b61071c565b6101da6103ab366004612a2d565b610754565b6101c56103be366004612dda565b610a21565b6101da610bbe565b6102b56103d9366004612a2d565b610bca565b6101c56103ec366004612e33565b610bf8565b61042a6103ff366004612a2d565b73ffffffffffffffffffffffffffffffffffffffff166000908152606e602052604090205460ff1690565b60405190151581526020016101e4565b6101c5610448366004612a2d565b610c09565b61045681610cbd565b50565b600061046f606b63ffffffff80851690610d0a16565b92915050565b6000806000808480602001905181019061048f9190612f59565b9250925092506104a186848484610e0f565b507f1626ba7e0000000000000000000000000000000000000000000000000000000095945050505050565b6040805160208101909152606081526040805160668054602081810284018501855283018181529293919284929091849160009085015b82821015610575576000848152602090819020604080518082019091529084015473ffffffffffffffffffffffffffffffffffffffff811682527401000000000000000000000000000000000000000090046bffffffffffffffffffffffff1681830152825260019092019101610503565b5050505081525050905090565b600061046f606c63ffffffff80851690610d0a16565b60006105a4606b610ec3565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16905090565b73ffffffffffffffffffffffffffffffffffffffff81166000908152606d602052604081206105f590610ec3565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1692915050565b610624338383610f12565b5050565b6106248260008151811061063e5761063e61302e565b60200260200101516110ce565b73ffffffffffffffffffffffffffffffffffffffff82166000908152606a6020526040812061067a9083610d0a565b9392505050565b61068961110a565b6104568161118b565b61069a61110a565b6106a3826111ce565b61062481610cbd565b6106b461110a565b6106be6000611214565b565b336000908152606e602052604090205460ff16610709576040517f25ec6c1f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610456338261128b565b6106be3361137e565b73ffffffffffffffffffffffffffffffffffffffff82166000908152606d6020526040812061067a9063ffffffff80851690610d0a16565b6000806066600001805480602002602001604051908101604052809291908181526020016000905b828210156107ee576000848152602090819020604080518082019091529084015473ffffffffffffffffffffffffffffffffffffffff811682527401000000000000000000000000000000000000000090046bffffffffffffffffffffffff168183015282526001909201910161077c565b505050509050600080825167ffffffffffffffff811115610811576108116126d3565b60405190808252806020026020018201604052801561083a578160200160208202803683370190505b50905060005b83518110156108a65783818151811061085b5761085b61302e565b6020026020010151600001518282815181106108795761087961302e565b73ffffffffffffffffffffffffffffffffffffffff90921660209283029190910190910152600101610840565b506040517f9004134700000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063900413479061091e908990869060040161305d565b600060405180830381865afa15801561093b573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261098191908101906130c7565b905060005b84518110156109f3578481815181106109a1576109a161302e565b6020026020010151602001516bffffffffffffffffffffffff168282815181106109cd576109cd61302e565b60200260200101516109df9190613187565b6109e9908561319e565b9350600101610986565b50610a00612710846131b1565b92506067548310610a15575090949350505050565b50600095945050505050565b600054610100900460ff1615808015610a415750600054600160ff909116105b80610a5b5750303b158015610a5b575060005460ff166001145b610aec576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084015b60405180910390fd5b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790558015610b4a57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b610b55848484611525565b8015610bb857600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b60006105a4606c610ec3565b73ffffffffffffffffffffffffffffffffffffffff81166000908152606a6020526040812061046f90610ec3565b610c0061110a565b6106a38261161b565b610c1161110a565b73ffffffffffffffffffffffffffffffffffffffff8116610cb4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610ae3565b61045681611214565b6000805b8251811015610d0057610cec838281518110610cdf57610cdf61302e565b60200260200101516117d1565b610cf690836131ec565b9150600101610cc1565b50610bb88161195b565b6000438210610d75576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f436865636b706f696e74733a20626c6f636b206e6f7420796574206d696e65646044820152606401610ae3565b6000610d80836119e5565b84549091506000610d9386848385611a7f565b90508015610de457610db886610daa600184613214565b600091825260209091200190565b5464010000000090047bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16610de7565b60005b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff169695505050505050565b600083519050600080600080610e26858851611add565b60005b85811015610ead57888181518110610e4357610e4361302e565b60200260200101519450610e578588611b50565b9250610e638486611bc9565b610e87838b8a8481518110610e7a57610e7a61302e565b6020026020010151611c2e565b8493506000610e968689611c85565b9050610ea2818461319e565b925050600101610e29565b50610eb88187611cfe565b505050505050505050565b80546000908015610f0957610edd83610daa600184613214565b5464010000000090047bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1661067a565b60009392505050565b73ffffffffffffffffffffffffffffffffffffffff83166000908152606e602052604090205460ff1615610f72576040517f42ee68b500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60658054906000610f8283613227565b909155505073ffffffffffffffffffffffffffffffffffffffff83166000908152606e6020526040812080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055610fde846117d1565b9050610fe98161195b565b5050610ff5848361128b565b6068546040517f9926ee7d00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911690639926ee7d9061104d908790879060040161325f565b600060405180830381600087803b15801561106757600080fd5b505af115801561107b573d6000803e3d6000fd5b505060685460405173ffffffffffffffffffffffffffffffffffffffff918216935090871691507fa453db612af59e5521d6ab9284dc3e2d06af286eb1b1b7b771fce4716c19f2c190600090a350505050565b60655481511461044d576040517f2d3df6b600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60335473ffffffffffffffffffffffffffffffffffffffff1633146106be576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610ae3565b611196606c82611d8c565b50506040518181527f9324f7e5a7c0288808a634ccde44b8e979676474b22e29ee9dd569b55e791a4b9060200160405180910390a150565b606780549082905560408051828152602081018490527f713ca53b88d6eb63f5b1854cb8cbdd736ec51eda225e46791aa9298b0160648f91015b60405180910390a15050565b6033805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b73ffffffffffffffffffffffffffffffffffffffff82166000908152606a602052604081206112b990610ec3565b90508073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036112f357505050565b73ffffffffffffffffffffffffffffffffffffffff8381166000908152606a60205260409020611324918416611d8c565b505060405173ffffffffffffffffffffffffffffffffffffffff82811682528084169143918616907fd061168252f441733658f09e4d8f5b2d998ed4ef24a2bbfd6ceca52ea13150029060200160405180910390a4505050565b73ffffffffffffffffffffffffffffffffffffffff81166000908152606e602052604090205460ff166113dd576040517f25ec6c1f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b606580549060006113ed836132b8565b909155505073ffffffffffffffffffffffffffffffffffffffff81166000908152606e6020526040812080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055611446826117d1565b90506114518161195b565b50506068546040517fa364f4da00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84811660048301529091169063a364f4da90602401600060405180830381600087803b1580156114c057600080fd5b505af11580156114d4573d6000803e3d6000fd5b505060685460405173ffffffffffffffffffffffffffffffffffffffff918216935090851691507f31e0adfec71bccee37b6e83a90c2fedb17d8f1693fee863c4771e7bfe2aed58090600090a35050565b600054610100900460ff166115bc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610ae3565b606880547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff85161790556116058261118b565b61160e8161161b565b611616611dd7565b505050565b61162481611e76565b61165a576040517fd173577900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60408051606680546020818102840185018552830181815260009484928491879085015b828210156116f0576000848152602090819020604080518082019091529084015473ffffffffffffffffffffffffffffffffffffffff811682527401000000000000000000000000000000000000000090046bffffffffffffffffffffffff168183015282526001909201910161167e565b50505091525090915060669050600061170982826126a5565b505060005b82515181101561179f578251805160669190839081106117305761173061302e565b602090810291909101810151825460018181018555600094855293839020825192909301516bffffffffffffffffffffffff16740100000000000000000000000000000000000000000273ffffffffffffffffffffffffffffffffffffffff909216919091179101550161170e565b507f23aad4e61744ece164130aa415c1616e80136b0f0770e56589438b90b269265e81836040516112089291906132ed565b73ffffffffffffffffffffffffffffffffffffffff81166000908152606d6020526040812081908190819061180590610ec3565b73ffffffffffffffffffffffffffffffffffffffff86166000908152606e60205260409020547bffffffffffffffffffffffffffffffffffffffffffffffffffffffff91909116915060ff166118a75761185f818461331b565b9250826000036118725750909392505050565b73ffffffffffffffffffffffffffffffffffffffff85166000908152606d602052604081206118a091611d8c565b5050611901565b6118b085610754565b91506118bc818361331b565b9250826000036118cf5750909392505050565b73ffffffffffffffffffffffffffffffffffffffff85166000908152606d602052604090206118fe9083611d8c565b50505b604080518281526020810184905273ffffffffffffffffffffffffffffffffffffffff8716917f88770dc862e47a7ed586907857eb1b75e4c5ffc8b707c7ee10eb74d6885fe594910160405180910390a250909392505050565b600080611968606b610ec3565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff169150600061199484846131ec565b91508190506119a4606b82611d8c565b505060408051848152602081018490527f86dcf86b12dfeedea74ae9300dbdaa193bcce5809369c8177ea2f4eaaa65729b910160405180910390a150915091565b600063ffffffff821115611a7b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201527f32206269747300000000000000000000000000000000000000000000000000006064820152608401610ae3565b5090565b60005b81831015611ad5576000611a968484611f74565b60008781526020902090915063ffffffff86169082015463ffffffff161115611ac157809250611acf565b611acc81600161319e565b93505b50611a82565b509392505050565b808214611b16576040517fff633a3800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81600003610624576040517f947d5a8400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000438263ffffffff1610611b91576040517fe64f180f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff83166000908152606a6020526040902061067a9063ffffffff80851690610d0a16565b8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1610610624576040517fba50f91100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611c4f73ffffffffffffffffffffffffffffffffffffffff84168383611f8f565b611616576040517f8baa579f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000438263ffffffff1610611cc6576040517fe64f180f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff83166000908152606d6020526040902061067a9063ffffffff80851690610d0a16565b6000611d098261200a565b905080831115611d45576040517f960b41ee00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000611d508361205f565b905083811115610bb8576040517fe121632f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080611daa84611d9c436119e5565b611da5866120b4565b612162565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff91821693501690505b9250929050565b600054610100900460ff16611e6e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610ae3565b6106be612377565b8051600090818080805b8451811015611f5257848181518110611e9b57611e9b61302e565b60200260200101516000015192508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1610611f0e576040517fba50f91100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b829350848181518110611f2357611f2361302e565b6020026020010151602001516bffffffffffffffffffffffff1682611f48919061319e565b9150600101611e80565b506127108114611f685750600095945050505050565b50600195945050505050565b6000611f8360028484186131b1565b61067a9084841661319e565b6000806000611f9e8585612417565b90925090506000816004811115611fb757611fb7613342565b148015611fef57508573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b806120005750612000868686612459565b9695505050505050565b6000438263ffffffff161061204b576040517fe64f180f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61046f606b63ffffffff80851690610d0a16565b6000438263ffffffff16106120a0576040517fe64f180f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61046f606c63ffffffff80851690610d0a16565b60007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff821115611a7b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203260448201527f32342062697473000000000000000000000000000000000000000000000000006064820152608401610ae3565b82546000908190801561230457600061218087610daa600185613214565b60408051808201909152905463ffffffff8082168084526401000000009092047bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1660208401529192509087161015612231576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f436865636b706f696e743a2064656372656173696e67206b65797300000000006044820152606401610ae3565b805163ffffffff80881691160361228f578461225288610daa600186613214565b80547bffffffffffffffffffffffffffffffffffffffffffffffffffffffff929092166401000000000263ffffffff9092169190911790556122f4565b6040805180820190915263ffffffff80881682527bffffffffffffffffffffffffffffffffffffffffffffffffffffffff80881660208085019182528b54600181018d5560008d81529190912094519151909216640100000000029216919091179101555b60200151925083915061236f9050565b50506040805180820190915263ffffffff80851682527bffffffffffffffffffffffffffffffffffffffffffffffffffffffff80851660208085019182528854600181018a5560008a8152918220955192519093166401000000000291909316179201919091559050815b935093915050565b600054610100900460ff1661240e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610ae3565b6106be33611214565b600080825160410361244d5760208301516040840151606085015160001a612441878285856125b6565b94509450505050611dd0565b50600090506002611dd0565b60008060008573ffffffffffffffffffffffffffffffffffffffff16631626ba7e60e01b8686604051602401612490929190613371565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909416939093179092529051612519919061338a565b600060405180830381855afa9150503d8060008114612554576040519150601f19603f3d011682016040523d82523d6000602084013e612559565b606091505b509150915081801561256d57506020815110155b8015612000575080517f1626ba7e00000000000000000000000000000000000000000000000000000000906125ab90830160209081019084016133a6565b149695505050505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156125ed575060009050600361269c565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015612641573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff81166126955760006001925092505061269c565b9150600090505b94509492505050565b508054600082559060005260206000209081019061045691905b80821115611a7b57600081556001016126bf565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516020810167ffffffffffffffff81118282101715612725576127256126d3565b60405290565b6040805190810167ffffffffffffffff81118282101715612725576127256126d3565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715612795576127956126d3565b604052919050565b600067ffffffffffffffff8211156127b7576127b76126d3565b5060051b60200190565b73ffffffffffffffffffffffffffffffffffffffff8116811461045657600080fd5b600082601f8301126127f457600080fd5b813560206128096128048361279d565b61274e565b8083825260208201915060208460051b87010193508684111561282b57600080fd5b602086015b84811015612850578035612843816127c1565b8352918301918301612830565b509695505050505050565b60006020828403121561286d57600080fd5b813567ffffffffffffffff81111561288457600080fd5b612890848285016127e3565b949350505050565b63ffffffff8116811461045657600080fd5b6000602082840312156128bc57600080fd5b813561067a81612898565b600067ffffffffffffffff8211156128e1576128e16126d3565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f83011261291e57600080fd5b813561292c612804826128c7565b81815284602083860101111561294157600080fd5b816020850160208301376000918101602001919091529392505050565b6000806040838503121561297157600080fd5b82359150602083013567ffffffffffffffff81111561298f57600080fd5b61299b8582860161290d565b9150509250929050565b8051602080845281518482018190526000926040919083019082870190855b81811015612a0d578351805173ffffffffffffffffffffffffffffffffffffffff1684528601516bffffffffffffffffffffffff168684015292850192918401916001016129c4565b5090979650505050505050565b60208152600061067a60208301846129a5565b600060208284031215612a3f57600080fd5b813561067a816127c1565b60008060408385031215612a5d57600080fd5b823567ffffffffffffffff80821115612a7557600080fd5b9084019060608287031215612a8957600080fd5b604051606081018181108382111715612aa457612aa46126d3565b604052823582811115612ab657600080fd5b612ac28882860161290d565b82525060208301356020820152604083013560408201528094505050506020830135612aed816127c1565b809150509250929050565b60008060408385031215612b0b57600080fd5b823567ffffffffffffffff80821115612b2357600080fd5b818501915085601f830112612b3757600080fd5b81356020612b476128048361279d565b82815260059290921b84018101918181019089841115612b6657600080fd5b8286015b84811015612b9e57803586811115612b825760008081fd5b612b908c86838b01016127e3565b845250918301918301612b6a565b5096505086013592505080821115612bb557600080fd5b5061299b8582860161290d565b60008060408385031215612bd557600080fd5b8235612be0816127c1565b946020939093013593505050565b600060208284031215612c0057600080fd5b5035919050565b60008060408385031215612c1a57600080fd5b82359150602083013567ffffffffffffffff811115612c3857600080fd5b61299b858286016127e3565b60005b83811015612c5f578181015183820152602001612c47565b50506000910152565b60008151808452612c80816020860160208601612c44565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60208152600061067a6020830184612c68565b60008060408385031215612cd857600080fd5b8235612ce3816127c1565b91506020830135612aed81612898565b60006020808385031215612d0657600080fd5b612d0e612702565b9150823567ffffffffffffffff811115612d2757600080fd5b8301601f81018513612d3857600080fd5b8035612d466128048261279d565b81815260069190911b82018301908381019087831115612d6557600080fd5b928401925b82841015612dcd5760408489031215612d835760008081fd5b612d8b61272b565b8435612d96816127c1565b8152848601356bffffffffffffffffffffffff81168114612db75760008081fd5b8187015282526040939093019290840190612d6a565b8552509295945050505050565b600080600060608486031215612def57600080fd5b8335612dfa816127c1565b925060208401359150604084013567ffffffffffffffff811115612e1d57600080fd5b612e2986828701612cf3565b9150509250925092565b60008060408385031215612e4657600080fd5b823567ffffffffffffffff80821115612e5e57600080fd5b612e6a86838701612cf3565b93506020850135915080821115612e8057600080fd5b5061299b858286016127e3565b600082601f830112612e9e57600080fd5b81516020612eae6128048361279d565b82815260059290921b84018101918181019086841115612ecd57600080fd5b8286015b8481101561285057805167ffffffffffffffff811115612ef15760008081fd5b8701603f81018913612f035760008081fd5b848101516040612f15612804836128c7565b8281528b82848601011115612f2a5760008081fd5b612f3983898301848701612c44565b8652505050918301918301612ed1565b8051612f5481612898565b919050565b600080600060608486031215612f6e57600080fd5b835167ffffffffffffffff80821115612f8657600080fd5b818601915086601f830112612f9a57600080fd5b81516020612faa6128048361279d565b82815260059290921b8401810191818101908a841115612fc957600080fd5b948201945b83861015612ff0578551612fe1816127c1565b82529482019490820190612fce565b9189015191975090935050508082111561300957600080fd5b5061301686828701612e8d565b92505061302560408501612f49565b90509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006040820173ffffffffffffffffffffffffffffffffffffffff808616845260206040602086015282865180855260608701915060208801945060005b818110156130b957855185168352948301949183019160010161309b565b509098975050505050505050565b600060208083850312156130da57600080fd5b825167ffffffffffffffff8111156130f157600080fd5b8301601f8101851361310257600080fd5b80516131106128048261279d565b81815260059190911b8201830190838101908783111561312f57600080fd5b928401925b8284101561314d57835182529284019290840190613134565b979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b808202811582820484141761046f5761046f613158565b8082018082111561046f5761046f613158565b6000826131e7577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b808201828112600083128015821682158216171561320c5761320c613158565b505092915050565b8181038181111561046f5761046f613158565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361325857613258613158565b5060010190565b73ffffffffffffffffffffffffffffffffffffffff8316815260406020820152600082516060604084015261329760a0840182612c68565b90506020840151606084015260408401516080840152809150509392505050565b6000816132c7576132c7613158565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b60408152600061330060408301856129a5565b828103602084015261331281856129a5565b95945050505050565b818103600083128015838313168383128216171561333b5761333b613158565b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8281526040602082015260006128906040830184612c68565b6000825161339c818460208701612c44565b9190910192915050565b6000602082840312156133b857600080fd5b505191905056fea2646970667358221220dee0a6a6f805511b7066f894d642ef48b053b1d5e3100c1a1bc4eaddc7f1f35764736f6c63430008160033';

type ECDSAStakeRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ECDSAStakeRegistryConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ECDSAStakeRegistry__factory extends ContractFactory {
  constructor(...args: ECDSAStakeRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _delegationManager: string,
    overrides?: Overrides & { from?: string },
  ): Promise<ECDSAStakeRegistry> {
    return super.deploy(
      _delegationManager,
      overrides || {},
    ) as Promise<ECDSAStakeRegistry>;
  }
  override getDeployTransaction(
    _delegationManager: string,
    overrides?: Overrides & { from?: string },
  ): TransactionRequest {
    return super.getDeployTransaction(_delegationManager, overrides || {});
  }
  override attach(address: string): ECDSAStakeRegistry {
    return super.attach(address) as ECDSAStakeRegistry;
  }
  override connect(signer: Signer): ECDSAStakeRegistry__factory {
    return super.connect(signer) as ECDSAStakeRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ECDSAStakeRegistryInterface {
    return new utils.Interface(_abi) as ECDSAStakeRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): ECDSAStakeRegistry {
    return new Contract(address, _abi, signerOrProvider) as ECDSAStakeRegistry;
  }
}
