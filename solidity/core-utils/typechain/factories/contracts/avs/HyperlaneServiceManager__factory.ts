/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import { Contract, ContractFactory, Overrides, Signer, utils } from 'ethers';

import type {
  HyperlaneServiceManager,
  HyperlaneServiceManagerInterface,
} from '../../../contracts/avs/HyperlaneServiceManager.js';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_avsDirectory',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_stakeRegistry',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_paymentCoordinator',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_delegationManager',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint8',
        name: 'version',
        type: 'uint8',
      },
    ],
    name: 'Initialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
    ],
    name: 'OperatorDeregisteredFromAVS',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'contract IRemoteChallenger',
        name: 'challenger',
        type: 'address',
      },
    ],
    name: 'OperatorEnrolledToChallenger',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'contract IRemoteChallenger',
        name: 'challenger',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'unenrollmentStartBlock',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'challengeDelayBlocks',
        type: 'uint256',
      },
    ],
    name: 'OperatorQueuedUnenrollmentFromChallenger',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
    ],
    name: 'OperatorRegisteredToAVS',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'contract IRemoteChallenger',
        name: 'challenger',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'unenrollmentEndBlock',
        type: 'uint256',
      },
    ],
    name: 'OperatorUnenrolledFromChallenger',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    inputs: [],
    name: 'PACKAGE_VERSION',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'avsDirectory',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'challenger',
        type: 'address',
      },
    ],
    name: 'completeUnenrollment',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: '_challengers',
        type: 'address[]',
      },
    ],
    name: 'completeUnenrollment',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
    ],
    name: 'deregisterOperatorFromAVS',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IRemoteChallenger',
        name: 'challenger',
        type: 'address',
      },
    ],
    name: 'enrollIntoChallenger',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IRemoteChallenger[]',
        name: '_challengers',
        type: 'address[]',
      },
    ],
    name: 'enrollIntoChallengers',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
    ],
    name: 'freezeOperator',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_operator',
        type: 'address',
      },
      {
        internalType: 'contract IRemoteChallenger',
        name: '_challenger',
        type: 'address',
      },
    ],
    name: 'getChallengerEnrollment',
    outputs: [
      {
        components: [
          {
            internalType: 'enum EnrollmentStatus',
            name: 'status',
            type: 'uint8',
          },
          {
            internalType: 'uint248',
            name: 'unenrollmentStartBlock',
            type: 'uint248',
          },
        ],
        internalType: 'struct Enrollment',
        name: 'enrollment',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_operator',
        type: 'address',
      },
    ],
    name: 'getOperatorChallengers',
    outputs: [
      {
        internalType: 'address[]',
        name: '',
        type: 'address[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_operator',
        type: 'address',
      },
    ],
    name: 'getOperatorRestakedStrategies',
    outputs: [
      {
        internalType: 'address[]',
        name: '',
        type: 'address[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getRestakeableStrategies',
    outputs: [
      {
        internalType: 'address[]',
        name: '',
        type: 'address[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_owner',
        type: 'address',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'contract IStrategy',
                name: 'strategy',
                type: 'address',
              },
              {
                internalType: 'uint96',
                name: 'multiplier',
                type: 'uint96',
              },
            ],
            internalType: 'struct IPaymentCoordinator.StrategyAndMultiplier[]',
            name: 'strategiesAndMultipliers',
            type: 'tuple[]',
          },
          {
            internalType: 'contract IERC20',
            name: 'token',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint64',
            name: 'startTimestamp',
            type: 'uint64',
          },
          {
            internalType: 'uint64',
            name: 'duration',
            type: 'uint64',
          },
        ],
        internalType: 'struct IPaymentCoordinator.RangePayment[]',
        name: 'rangePayments',
        type: 'tuple[]',
      },
    ],
    name: 'payForRange',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'bytes',
            name: 'signature',
            type: 'bytes',
          },
          {
            internalType: 'bytes32',
            name: 'salt',
            type: 'bytes32',
          },
          {
            internalType: 'uint256',
            name: 'expiry',
            type: 'uint256',
          },
        ],
        internalType: 'struct ISignatureUtils.SignatureWithSaltAndExpiry',
        name: 'operatorSignature',
        type: 'tuple',
      },
    ],
    name: 'registerOperatorToAVS',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_paymentCoordinator',
        type: 'address',
      },
    ],
    name: 'setPaymentCoordinator',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract ISlasher',
        name: '_slasher',
        type: 'address',
      },
    ],
    name: 'setSlasher',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'stakeRegistry',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IRemoteChallenger',
        name: 'challenger',
        type: 'address',
      },
    ],
    name: 'startUnenrollment',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IRemoteChallenger[]',
        name: '_challengers',
        type: 'address[]',
      },
    ],
    name: 'startUnenrollment',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: '_metadataURI',
        type: 'string',
      },
    ],
    name: 'updateAVSMetadataURI',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x60e06040523480156200001157600080fd5b5060405162002f6c38038062002f6c833981016040819052620000349162000086565b6001600160a01b0393841660a052918316608052606580546001600160a01b0319169184169190911790551660c052620000e3565b80516001600160a01b03811681146200008157600080fd5b919050565b600080600080608085870312156200009d57600080fd5b620000a88562000069565b9350620000b86020860162000069565b9250620000c86040860162000069565b9150620000d86060860162000069565b905092959194509250565b60805160a05160c051612e28620001446000396000610fc1015260008181610278015281816118b0015281816119ba0152611a9801526000818161022c0152818161083c015281816109cc01528181610e1a0152611c510152612e286000f3fe608060405234801561001057600080fd5b50600436106101985760003560e01c806393c44847116100e3578063ab87d8231161008c578063c4d66de811610066578063c4d66de8146103d4578063e481af9d146103e7578063f2fde38b146103ef57600080fd5b8063ab87d8231461039b578063ad444b7c146103ae578063bb90a303146103c157600080fd5b8063a364f4da116100bd578063a364f4da14610362578063a98fb35514610375578063aabc24961461038857600080fd5b806393c44847146102f35780639926ee7d1461033c5780639e30f45a1461034f57600080fd5b806368304835116101455780637df7561d1161011f5780637df7561d146102a25780638da5cb5b146102c25780638df971c8146102e057600080fd5b806368304835146102275780636b3aa72e14610273578063715018a61461029a57600080fd5b80634cc41e91116101765780634cc41e91146101ee5780634e339a21146102015780635d13ff7e1461021457600080fd5b806333cfb7b71461019d57806338c8ee64146101c657806342b5c010146101db575b600080fd5b6101b06101ab366004612201565b610402565b6040516101bd919061221e565b60405180910390f35b6101d96101d4366004612201565b610413565b005b6101d96101e9366004612278565b610564565b6101d96101fc3660046123fe565b61057a565b6101d961020f366004612201565b6105b0565b6101d961022236600461249d565b6105bd565b61024e7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101bd565b61024e7f000000000000000000000000000000000000000000000000000000000000000081565b6101d96105c7565b6102b56102b036600461252c565b6105db565b6040516101bd9190612594565b60335473ffffffffffffffffffffffffffffffffffffffff1661024e565b6101d96102ee366004612201565b610625565b61032f6040518060400160405280600581526020017f372e312e3400000000000000000000000000000000000000000000000000000081525081565b6040516101bd919061266b565b6101d961034a3660046126f4565b610824565b6101d961035d366004612201565b610919565b6101d9610370366004612201565b6109b4565b6101d961038336600461279f565b610aa8565b6101d9610396366004612201565b610ab9565b6101d96103a9366004612201565b610b08565b6101d96103bc3660046123fe565b610b57565b6101b06103cf366004612201565b610b8d565b6101d96103e2366004612201565b610bbe565b6101b0610d51565b6101d96103fd366004612201565b610d60565b606061040d82610e14565b92915050565b73ffffffffffffffffffffffffffffffffffffffff81166000908152609960205260408120829190610445903361118c565b509050806104da576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603c60248201527f48797065726c616e65536572766963654d616e616765723a204f70657261746f60448201527f72206e6f7420656e726f6c6c656420696e206368616c6c656e6765720000000060648201526084015b60405180910390fd5b6098546040517f38c8ee6400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152909116906338c8ee6490602401600060405180830381600087803b15801561054757600080fd5b505af115801561055b573d6000803e3d6000fd5b50505050505050565b61056c6111e7565b6105768282611268565b5050565b60005b8151811015610576576105a882828151811061059b5761059b6127e8565b6020026020010151610919565b60010161057d565b6105ba3382611535565b50565b6105ba338261174f565b6105cf6111e7565b6105d9600061178b565b565b604080518082019091526000808252602082015273ffffffffffffffffffffffffffffffffffffffff8316600090815260996020526040902061061e9083611802565b9392505050565b3360009081526099602052604081208190610640908461118c565b91509150818015610663575060018151600281111561066157610661612565565b145b6106ef576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603260248201527f48797065726c616e65536572766963654d616e616765723a206368616c6c656e60448201527f6765722069736e277420656e726f6c6c6564000000000000000000000000000060648201526084016104d1565b61075083604051806040016040528060028081111561071057610710612565565b81527effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff4316602091820152336000908152609990915260409020919061183e565b507f9f241e41144c054480ac978d65c684ede531a08797b3e9b48c1179e2546ba70b3384438673ffffffffffffffffffffffffffffffffffffffff166348a345486040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e49190612817565b6040805173ffffffffffffffffffffffffffffffffffffffff958616815294909316602085015291830152606082015260800160405180910390a1505050565b3373ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161461090f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604a60248201527f4543445341536572766963654d616e61676572426173652e6f6e6c795374616b60448201527f6552656769737472793a2063616c6c6572206973206e6f74207468652073746160648201527f6b65526567697374727900000000000000000000000000000000000000000000608482015260a4016104d1565b6105768282611873565b61095a8160405180604001604052806001600281111561093b5761093b612565565b815260006020918201819052338152609990915260409020919061183e565b61096357600080fd5b6040805133815273ffffffffffffffffffffffffffffffffffffffff831660208201527faca60599b023994fdac50ab68ba3245af232ff894776242253c35bf9334c6c19910160405180910390a150565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610a9f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604a60248201527f4543445341536572766963654d616e61676572426173652e6f6e6c795374616b60448201527f6552656769737472793a2063616c6c6572206973206e6f74207468652073746160648201527f6b65526567697374727900000000000000000000000000000000000000000000608482015260a4016104d1565b6105ba8161195e565b610ab06111e7565b6105ba81611a5b565b610ac16111e7565b609880547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b610b106111e7565b606580547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60005b815181101561057657610b85828281518110610b7857610b786127e8565b6020026020010151610625565b600101610b5a565b73ffffffffffffffffffffffffffffffffffffffff8116600090815260996020526040902060609061040d90611b02565b600054610100900460ff1615808015610bde5750600054600160ff909116105b80610bf85750303b158015610bf8575060005460ff166001145b610c84576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084016104d1565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790558015610ce257600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b610ceb82611bb4565b801561057657600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b6060610d5b611c4b565b905090565b610d686111e7565b73ffffffffffffffffffffffffffffffffffffffff8116610e0b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016104d1565b6105ba8161178b565b606060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16631703a0186040518163ffffffff1660e01b8152600401600060405180830381865afa158015610e83573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610ec9919081019061284a565b80515190915060008167ffffffffffffffff811115610eea57610eea6122ed565b604051908082528060200260200182016040528015610f13578160200160208202803683370190505b50905060005b82811015610f80578351805182908110610f3557610f356127e8565b602002602001015160000151828281518110610f5357610f536127e8565b73ffffffffffffffffffffffffffffffffffffffff90921660209283029190910190910152600101610f19565b506040517f9004134700000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690639004134790610ff89089908690600401612947565b600060405180830381865afa158015611015573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261105b91908101906129a3565b90506000805b848110156110a157600083828151811061107d5761107d6127e8565b60200260200101511115611099578161109581612a58565b9250505b600101611061565b5060008167ffffffffffffffff8111156110bd576110bd6122ed565b6040519080825280602002602001820160405280156110e6578160200160208202803683370190505b5090506000805b8681101561117e576000858281518110611109576111096127e8565b6020026020010151111561117657858181518110611129576111296127e8565b6020026020010151838381518110611143576111436127e8565b73ffffffffffffffffffffffffffffffffffffffff909216602092830291909101909101528161117281612a58565b9250505b6001016110ed565b509098975050505050505050565b60006111a8604080518082019091526000808252602082015290565b6000806111cb8673ffffffffffffffffffffffffffffffffffffffff8716611dc1565b91509150816111d982611dfb565b9350935050505b9250929050565b60335473ffffffffffffffffffffffffffffffffffffffff1633146105d9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104d1565b60005b818110156114a657828282818110611285576112856127e8565b90506020028101906112979190612a90565b6112a8906040810190602001612201565b73ffffffffffffffffffffffffffffffffffffffff166323b872dd33308686868181106112d7576112d76127e8565b90506020028101906112e99190612a90565b604080517fffffffff0000000000000000000000000000000000000000000000000000000060e087901b16815273ffffffffffffffffffffffffffffffffffffffff9485166004820152939092166024840152013560448201526064016020604051808303816000875af1158015611365573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113899190612ade565b5082828281811061139c5761139c6127e8565b90506020028101906113ae9190612a90565b6113bf906040810190602001612201565b60655473ffffffffffffffffffffffffffffffffffffffff9182169163095ea7b391168585858181106113f4576113f46127e8565b90506020028101906114069190612a90565b604080517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b16815273ffffffffffffffffffffffffffffffffffffffff9093166004840152013560248201526044016020604051808303816000875af1158015611479573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061149d9190612ade565b5060010161126b565b506065546040517f42b5c01000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909116906342b5c010906114ff9085908590600401612b90565b600060405180830381600087803b15801561151957600080fd5b505af115801561152d573d6000803e3d6000fd5b505050505050565b73ffffffffffffffffffffffffffffffffffffffff821660009081526099602052604081208291908190611569908461118c565b9150915081801561158c575060028151600281111561158a5761158a612565565b145b801561163657508273ffffffffffffffffffffffffffffffffffffffff166348a345486040518163ffffffff1660e01b8152600401602060405180830381865afa1580156115de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116029190612817565b81602001517effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff166116329190612cff565b4310155b6116c2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f48797065726c616e65536572766963654d616e616765723a20496e76616c696460448201527f20756e656e726f6c6c6d656e740000000000000000000000000000000000000060648201526084016104d1565b73ffffffffffffffffffffffffffffffffffffffff851660009081526099602052604090206116f19084611e99565b506040805173ffffffffffffffffffffffffffffffffffffffff878116825285166020820152438183015290517f242aa6799e048fcfb2fdab034c8d551cfc664668dabb2c328afb2c4b1f580df29181900360600190a15050505050565b60005b81518110156117865761177e83838381518110611771576117716127e8565b6020026020010151611535565b600101611752565b505050565b6033805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b604080518082019091526000808252602082015261061e6118398473ffffffffffffffffffffffffffffffffffffffff8516611ebb565b611dfb565b600061186b73ffffffffffffffffffffffffffffffffffffffff841661186384611f45565b869190611fdc565b949350505050565b6040517f9926ee7d00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690639926ee7d906118e79085908590600401612d12565b600060405180830381600087803b15801561190157600080fd5b505af1158015611915573d6000803e3d6000fd5b505060405173ffffffffffffffffffffffffffffffffffffffff851692507f306b68d1022977e8137039c81b6a888f5873def4cb317543f9405185eecfba0b9150600090a25050565b600061196982610b8d565b9050611975828261174f565b6040517fa364f4da00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063a364f4da90602401600060405180830381600087803b1580156119fe57600080fd5b505af1158015611a12573d6000803e3d6000fd5b505060405173ffffffffffffffffffffffffffffffffffffffff851692507fab853d7336de89b5d6798d81138aa3de232eff62ca542395346484c01a3d76839150600090a25050565b6040517fa98fb35500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063a98fb35590611acd90849060040161266b565b600060405180830381600087803b158015611ae757600080fd5b505af1158015611afb573d6000803e3d6000fd5b5050505050565b60606000611b0f83611ff9565b90508067ffffffffffffffff811115611b2a57611b2a6122ed565b604051908082528060200260200182016040528015611b53578160200160208202803683370190505b50915060005b81811015611bad57611b6b8482612004565b60001c838281518110611b8057611b806127e8565b73ffffffffffffffffffffffffffffffffffffffff90921660209283029190910190910152600101611b59565b5050919050565b600054610100900460ff16610e0b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e6700000000000000000000000000000000000000000060648201526084016104d1565b606060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16631703a0186040518163ffffffff1660e01b8152600401600060405180830381865afa158015611cba573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052611d00919081019061284a565b9050600081600001515167ffffffffffffffff811115611d2257611d226122ed565b604051908082528060200260200182016040528015611d4b578160200160208202803683370190505b50905060005b825151811015611dba578251805182908110611d6f57611d6f6127e8565b602002602001015160000151828281518110611d8d57611d8d6127e8565b73ffffffffffffffffffffffffffffffffffffffff90921660209283029190910190910152600101611d51565b5092915050565b6000818152600283016020526040812054819080611df057611de38585612010565b9250600091506111e09050565b6001925090506111e0565b604080518082019091526000808252602082015260408051808201909152600083901a907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84169080836002811115611e5557611e55612565565b6002811115611e6657611e66612565565b8152602001827effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1681525092505050919050565b600061061e8373ffffffffffffffffffffffffffffffffffffffff841661201c565b600081815260028301602052604081205480151580611edf5750611edf8484612010565b61061e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f456e756d657261626c654d61703a206e6f6e6578697374656e74206b6579000060448201526064016104d1565b80516000906002811115611f5b57611f5b612565565b602080840151604051611fc493920160f89290921b7fff0000000000000000000000000000000000000000000000000000000000000016825260081b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600182015260200190565b60405160208183030381529060405261040d90612d6b565b6000828152600284016020526040812082905561186b8484612039565b600061040d82612045565b600061061e838361204f565b600061061e8383612079565b6000818152600283016020526040812081905561061e8383612091565b600061061e838361209d565b600061040d825490565b6000826000018281548110612066576120666127e8565b9060005260206000200154905092915050565b6000818152600183016020526040812054151561061e565b600061061e83836120ec565b60008181526001830160205260408120546120e45750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561040d565b50600061040d565b600081815260018301602052604081205480156121d5576000612110600183612db0565b855490915060009061212490600190612db0565b9050818114612189576000866000018281548110612144576121446127e8565b9060005260206000200154905080876000018481548110612167576121676127e8565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061219a5761219a612dc3565b60019003818190600052602060002001600090559055856001016000868152602001908152602001600020600090556001935050505061040d565b600091505061040d565b73ffffffffffffffffffffffffffffffffffffffff811681146105ba57600080fd5b60006020828403121561221357600080fd5b813561061e816121df565b6020808252825182820181905260009190848201906040850190845b8181101561226c57835173ffffffffffffffffffffffffffffffffffffffff168352928401929184019160010161223a565b50909695505050505050565b6000806020838503121561228b57600080fd5b823567ffffffffffffffff808211156122a357600080fd5b818501915085601f8301126122b757600080fd5b8135818111156122c657600080fd5b8660208260051b85010111156122db57600080fd5b60209290920196919550909350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516060810167ffffffffffffffff8111828210171561233f5761233f6122ed565b60405290565b6040516020810167ffffffffffffffff8111828210171561233f5761233f6122ed565b6040805190810167ffffffffffffffff8111828210171561233f5761233f6122ed565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156123d2576123d26122ed565b604052919050565b600067ffffffffffffffff8211156123f4576123f46122ed565b5060051b60200190565b6000602080838503121561241157600080fd5b823567ffffffffffffffff81111561242857600080fd5b8301601f8101851361243957600080fd5b803561244c612447826123da565b61238b565b81815260059190911b8201830190838101908783111561246b57600080fd5b928401925b82841015612492578335612483816121df565b82529284019290840190612470565b979650505050505050565b600060208083850312156124b057600080fd5b823567ffffffffffffffff8111156124c757600080fd5b8301601f810185136124d857600080fd5b80356124e6612447826123da565b81815260059190911b8201830190838101908783111561250557600080fd5b928401925b8284101561249257833561251d816121df565b8252928401929084019061250a565b6000806040838503121561253f57600080fd5b823561254a816121df565b9150602083013561255a816121df565b809150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81516040820190600381106125d2577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b808352507effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff602084015116602083015292915050565b6000815180845260005b8181101561262d57602081850181015186830182015201612611565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b60208152600061061e6020830184612607565b600067ffffffffffffffff831115612698576126986122ed565b6126c960207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8601160161238b565b90508281528383830111156126dd57600080fd5b828260208301376000602084830101529392505050565b6000806040838503121561270757600080fd5b8235612712816121df565b9150602083013567ffffffffffffffff8082111561272f57600080fd5b908401906060828703121561274357600080fd5b61274b61231c565b82358281111561275a57600080fd5b83019150601f8201871361276d57600080fd5b61277c8783356020850161267e565b815260208301356020820152604083013560408201528093505050509250929050565b6000602082840312156127b157600080fd5b813567ffffffffffffffff8111156127c857600080fd5b8201601f810184136127d957600080fd5b61186b8482356020840161267e565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006020828403121561282957600080fd5b5051919050565b6bffffffffffffffffffffffff811681146105ba57600080fd5b6000602080838503121561285d57600080fd5b825167ffffffffffffffff8082111561287557600080fd5b818501915082828703121561288957600080fd5b612891612345565b8251828111156128a057600080fd5b80840193505086601f8401126128b557600080fd5b825191506128c5612447836123da565b82815260069290921b830184019184810190888411156128e457600080fd5b938501935b8385101561293a576040858a0312156129025760008081fd5b61290a612368565b8551612915816121df565b81528587015161292481612830565b81880152825260409490940193908501906128e9565b8252509695505050505050565b60006040820173ffffffffffffffffffffffffffffffffffffffff808616845260206040602086015282865180855260608701915060208801945060005b8181101561117e578551851683529483019491830191600101612985565b600060208083850312156129b657600080fd5b825167ffffffffffffffff8111156129cd57600080fd5b8301601f810185136129de57600080fd5b80516129ec612447826123da565b81815260059190911b82018301908381019087831115612a0b57600080fd5b928401925b8284101561249257835182529284019290840190612a10565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612a8957612a89612a29565b5060010190565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61833603018112612ac457600080fd5b9190910192915050565b8035612ad9816121df565b919050565b600060208284031215612af057600080fd5b8151801515811461061e57600080fd5b8183526000602080850194508260005b85811015612b6d578135612b23816121df565b73ffffffffffffffffffffffffffffffffffffffff16875281830135612b4881612830565b6bffffffffffffffffffffffff16878401526040968701969190910190600101612b10565b509495945050505050565b803567ffffffffffffffff81168114612ad957600080fd5b60208082528181018390526000906040808401600586901b8501820187855b8881101561117e577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc088840301845281357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff618b3603018112612c1057600080fd5b8a0160a08135368390037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1018112612c4757600080fd5b8201888101903567ffffffffffffffff811115612c6357600080fd5b8060061b3603821315612c7557600080fd5b828752612c858388018284612b00565b92505050612c94888301612ace565b73ffffffffffffffffffffffffffffffffffffffff168886015281870135878601526060612cc3818401612b78565b67ffffffffffffffff16908601526080612cde838201612b78565b67ffffffffffffffff16950194909452509285019290850190600101612baf565b8082018082111561040d5761040d612a29565b73ffffffffffffffffffffffffffffffffffffffff83168152604060208201526000825160606040840152612d4a60a0840182612607565b90506020840151606084015260408401516080840152809150509392505050565b80516020808301519190811015612daa577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8160200360031b1b821691505b50919050565b8181038181111561040d5761040d612a29565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea2646970667358221220f69564d6026900bf28bf761ddd13c012e5a147d9675198c508336c214410c2f564736f6c63430008160033';

type HyperlaneServiceManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HyperlaneServiceManagerConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HyperlaneServiceManager__factory extends ContractFactory {
  constructor(...args: HyperlaneServiceManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _avsDirectory: string,
    _stakeRegistry: string,
    _paymentCoordinator: string,
    _delegationManager: string,
    overrides?: Overrides & { from?: string },
  ): Promise<HyperlaneServiceManager> {
    return super.deploy(
      _avsDirectory,
      _stakeRegistry,
      _paymentCoordinator,
      _delegationManager,
      overrides || {},
    ) as Promise<HyperlaneServiceManager>;
  }
  override getDeployTransaction(
    _avsDirectory: string,
    _stakeRegistry: string,
    _paymentCoordinator: string,
    _delegationManager: string,
    overrides?: Overrides & { from?: string },
  ): TransactionRequest {
    return super.getDeployTransaction(
      _avsDirectory,
      _stakeRegistry,
      _paymentCoordinator,
      _delegationManager,
      overrides || {},
    );
  }
  override attach(address: string): HyperlaneServiceManager {
    return super.attach(address) as HyperlaneServiceManager;
  }
  override connect(signer: Signer): HyperlaneServiceManager__factory {
    return super.connect(signer) as HyperlaneServiceManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HyperlaneServiceManagerInterface {
    return new utils.Interface(_abi) as HyperlaneServiceManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): HyperlaneServiceManager {
    return new Contract(
      address,
      _abi,
      signerOrProvider,
    ) as HyperlaneServiceManager;
  }
}
