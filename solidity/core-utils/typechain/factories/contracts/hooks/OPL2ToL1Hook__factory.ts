/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import {
  BigNumberish,
  BytesLike,
  Contract,
  ContractFactory,
  Overrides,
  Signer,
  utils,
} from 'ethers';

import type {
  OPL2ToL1Hook,
  OPL2ToL1HookInterface,
} from '../../../contracts/hooks/OPL2ToL1Hook.js';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_mailbox',
        type: 'address',
      },
      {
        internalType: 'uint32',
        name: '_destinationDomain',
        type: 'uint32',
      },
      {
        internalType: 'bytes32',
        name: '_ism',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: '_l2Messenger',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_childHook',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: '_hook',
        type: 'address',
      },
    ],
    name: 'HookSet',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint8',
        name: 'version',
        type: 'uint8',
      },
    ],
    name: 'Initialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: '_ism',
        type: 'address',
      },
    ],
    name: 'IsmSet',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    inputs: [],
    name: 'MIN_GAS_LIMIT',
    outputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'PACKAGE_VERSION',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'childHook',
    outputs: [
      {
        internalType: 'contract IPostDispatchHook',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'destinationDomain',
    outputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'hook',
    outputs: [
      {
        internalType: 'contract IPostDispatchHook',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'hookType',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'interchainSecurityModule',
    outputs: [
      {
        internalType: 'contract IInterchainSecurityModule',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'ism',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'l2Messenger',
    outputs: [
      {
        internalType: 'contract ICrossDomainMessenger',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'localDomain',
    outputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'mailbox',
    outputs: [
      {
        internalType: 'contract IMailbox',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'metadata',
        type: 'bytes',
      },
      {
        internalType: 'bytes',
        name: 'message',
        type: 'bytes',
      },
    ],
    name: 'postDispatch',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'metadata',
        type: 'bytes',
      },
      {
        internalType: 'bytes',
        name: 'message',
        type: 'bytes',
      },
    ],
    name: 'quoteDispatch',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_hook',
        type: 'address',
      },
    ],
    name: 'setHook',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_module',
        type: 'address',
      },
    ],
    name: 'setInterchainSecurityModule',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'metadata',
        type: 'bytes',
      },
    ],
    name: 'supportsMetadata',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x6101406040523480156200001257600080fd5b5060405162001d5838038062001d58833981016040819052620000359162000288565b84848482806001600160a01b0381163b620000975760405162461bcd60e51b815260206004820152601e60248201527f4d61696c626f78436c69656e743a20696e76616c6964206d61696c626f78000060448201526064015b60405180910390fd5b6001600160a01b03821660808190526040805163234d8e3d60e21b81529051638d3638f4916004808201926020929091908290030181865afa158015620000e2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001089190620002ef565b63ffffffff1660a0526200011c3362000204565b508190506200016c5760405162461bcd60e51b8152602060048201526026602482015260008051602062001d3883398151915260448201526569642049534d60d01b60648201526084016200008e565b8163ffffffff16600003620001d95760405162461bcd60e51b8152602060048201526035602482015260008051602062001d3883398151915260448201527f69642064657374696e6174696f6e20646f6d61696e000000000000000000000060648201526084016200008e565b60c05263ffffffff1660e052506001600160a01b039182166101005216610120525062000314915050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b03811681146200026e57600080fd5b919050565b805163ffffffff811681146200026e57600080fd5b600080600080600060a08688031215620002a157600080fd5b620002ac8662000256565b9450620002bc6020870162000273565b935060408601519250620002d36060870162000256565b9150620002e36080870162000256565b90509295509295909350565b6000602082840312156200030257600080fd5b6200030d8262000273565b9392505050565b60805160a05160c05160e05161010051610120516119aa6200038e600039600081816101de01528181610d38015261104701526000818161049401526111340152600081816101900152610a640152600081816102570152611170015260006102f20152600081816103c70152610e2b01526119aa6000f3fe6080604052600436106101445760003560e01c80638d3638f4116100c0578063de523cf311610074578063e5320bb911610059578063e5320bb914610432578063f2fde38b14610462578063f5730a721461048257600080fd5b8063de523cf3146103e9578063e445e7dd1461041657600080fd5b806393c44847116100a557806393c448471461033f578063aaccd23014610395578063d5438eae146103b557600080fd5b80638d3638f4146102e05780638da5cb5b1461031457600080fd5b80633dfd387311610117578063715018a6116100fc578063715018a6146102875780637ce1ffeb1461029c5780637f5a7c7b146102b357600080fd5b80633dfd3873146102255780634deefab21461024557600080fd5b8063086011b9146101495780630e72cc061461015e5780632858c55a1461017e5780632dd120b9146101cc575b600080fd5b61015c6101573660046115ab565b6104b6565b005b34801561016a57600080fd5b5061015c610179366004611617565b610563565b34801561018a57600080fd5b506101b27f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020015b60405180910390f35b3480156101d857600080fd5b506102007f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101c3565b34801561023157600080fd5b5061015c610240366004611617565b6106ac565b34801561025157600080fd5b506102797f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020016101c3565b34801561029357600080fd5b5061015c6107ed565b3480156102a857600080fd5b506101b2620493e081565b3480156102bf57600080fd5b506065546102009073ffffffffffffffffffffffffffffffffffffffff1681565b3480156102ec57600080fd5b506101b27f000000000000000000000000000000000000000000000000000000000000000081565b34801561032057600080fd5b5060335473ffffffffffffffffffffffffffffffffffffffff16610200565b34801561034b57600080fd5b506103886040518060400160405280600581526020017f372e312e3400000000000000000000000000000000000000000000000000000081525081565b6040516101c391906116b1565b3480156103a157600080fd5b506102796103b03660046115ab565b610801565b3480156103c157600080fd5b506102007f000000000000000000000000000000000000000000000000000000000000000081565b3480156103f557600080fd5b506066546102009073ffffffffffffffffffffffffffffffffffffffff1681565b34801561042257600080fd5b50604051600c81526020016101c3565b34801561043e57600080fd5b5061045261044d3660046116c4565b6108ae565b60405190151581526020016101c3565b34801561046e57600080fd5b5061015c61047d366004611617565b6108d3565b34801561048e57600080fd5b506102007f000000000000000000000000000000000000000000000000000000000000000081565b6104c084846108ae565b610551576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603260248201527f4162737472616374506f73744469737061746368486f6f6b3a20696e76616c6960448201527f64206d657461646174612076617269616e74000000000000000000000000000060648201526084015b60405180910390fd5b61055d8484848461098a565b50505050565b8073ffffffffffffffffffffffffffffffffffffffff81163b15158061059d575073ffffffffffffffffffffffffffffffffffffffff8116155b610629576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f4d61696c626f78436c69656e743a20696e76616c696420636f6e74726163742060448201527f73657474696e67000000000000000000000000000000000000000000000000006064820152608401610548565b610631610c00565b606680547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff84169081179091556040519081527fc47cbcc588c67679e52261c45cc315e56562f8d0ccaba16facb9093ff9498799906020015b60405180910390a15050565b8073ffffffffffffffffffffffffffffffffffffffff81163b1515806106e6575073ffffffffffffffffffffffffffffffffffffffff8116155b610772576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f4d61696c626f78436c69656e743a20696e76616c696420636f6e74726163742060448201527f73657474696e67000000000000000000000000000000000000000000000000006064820152608401610548565b61077a610c00565b606580547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff84169081179091556040519081527f4eab7b127c764308788622363ad3e9532de3dfba7845bd4f84c125a22544255a906020016106a0565b6107f5610c00565b6107ff6000610c81565b565b600061080d85856108ae565b610899576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603260248201527f4162737472616374506f73744469737061746368486f6f6b3a20696e76616c6960448201527f64206d657461646174612076617269616e7400000000000000000000000000006064820152608401610548565b6108a585858585610cf8565b95945050505050565b60008115806108ca575060016108c48484610dca565b61ffff16145b90505b92915050565b6108db610c00565b73ffffffffffffffffffffffffffffffffffffffff811661097e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610548565b61098781610c81565b50565b60006109cb83838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610e1b92505050565b90506109d681610e26565b610a62576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603860248201527f41627374726163744d657373616765496441757468486f6f6b3a206d6573736160448201527f6765206e6f74206c6174657374206469737061746368656400000000000000006064820152608401610548565b7f000000000000000000000000000000000000000000000000000000000000000063ffffffff16610a938484610ebf565b63ffffffff1614610b26576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603560248201527f41627374726163744d657373616765496441757468486f6f6b3a20696e76616c60448201527f69642064657374696e6174696f6e20646f6d61696e00000000000000000000006064820152608401610548565b7f8000000000000000000000000000000000000000000000000000000000000000610b5386866000610ee2565b10610be0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603e60248201527f41627374726163744d657373616765496441757468486f6f6b3a206d7367566160448201527f6c7565206d757374206265206c657373207468616e2032202a2a2032353500006064820152608401610548565b610bec85858585610f33565b610bf985858585476111f0565b5050505050565b60335473ffffffffffffffffffffffffffffffffffffffff1633146107ff576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610548565b6033805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6040517faaccd23000000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063aaccd23090610d7390889088908890889060040161174f565b602060405180830381865afa158015610d90573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610db49190611781565b610dc086866000610ee2565b6108a591906117c9565b6000610dd78160026117dc565b60ff16821015610de9575060006108cd565b82600083610df88260026117dc565b60ff1692610e08939291906117f5565b610e119161181f565b60f01c9392505050565b805160209091012090565b6000817f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663134fbb4f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e94573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eb89190611781565b1492915050565b6000610ecf602d602984866117f5565b610ed891611867565b60e01c9392505050565b6000610ef0600260206117dc565b60ff16831015610f01575080610f2c565b83600284610f108260206117dc565b60ff1692610f20939291906117f5565b610f29916118ad565b90505b9392505050565b6000610f7483838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610e1b92505050565b610f8086866000610ee2565b60405160248101929092526044820152606401604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167ff313ac8c00000000000000000000000000000000000000000000000000000000179052517faaccd23000000000000000000000000000000000000000000000000000000000815290915073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063086011b990829063aaccd2309061108a908a908a908a908a9060040161174f565b602060405180830381865afa1580156110a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110cb9190611781565b878787876040518663ffffffff1660e01b81526004016110ee949392919061174f565b6000604051808303818588803b15801561110757600080fd5b505af115801561111b573d6000803e3d6000fd5b505073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169250633dbb202b915061116b905087876000610ee2565b6111947f00000000000000000000000000000000000000000000000000000000000000006112db565b84620493e06040518563ffffffff1660e01b81526004016111b7939291906118e9565b6000604051808303818588803b1580156111d057600080fd5b505af11580156111e4573d6000803e3d6000fd5b50505050505050505050565b8015610bf957600061120e6112058585611384565b87908790611398565b905073ffffffffffffffffffffffffffffffffffffffff81166112b3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f4162737472616374506f73744469737061746368486f6f6b3a206e6f2072656660448201527f756e6420616464726573730000000000000000000000000000000000000000006064820152608401610548565b6112d373ffffffffffffffffffffffffffffffffffffffff8216836113ea565b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff821115611380576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f5479706543617374733a2062797465733332546f41646472657373206f76657260448201527f666c6f77000000000000000000000000000000000000000000000000000000006064820152608401610548565b5090565b60006108ca6113938484611549565b6112db565b60006113a6604260146117dc565b60ff168310156113b7575080610f2c565b836042846113c68260146117dc565b60ff16926113d6939291906117f5565b6113df9161192e565b60601c949350505050565b80471015611454576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606401610548565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d80600081146114ae576040519150601f19603f3d011682016040523d82523d6000602084013e6114b3565b606091505b5050905080611544576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608401610548565b505050565b60006115596029600984866117f5565b6108ca916118ad565b60008083601f84011261157457600080fd5b50813567ffffffffffffffff81111561158c57600080fd5b6020830191508360208285010111156115a457600080fd5b9250929050565b600080600080604085870312156115c157600080fd5b843567ffffffffffffffff808211156115d957600080fd5b6115e588838901611562565b909650945060208701359150808211156115fe57600080fd5b5061160b87828801611562565b95989497509550505050565b60006020828403121561162957600080fd5b813573ffffffffffffffffffffffffffffffffffffffff81168114610f2c57600080fd5b6000815180845260005b8181101561167357602081850181015186830182015201611657565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b6020815260006108ca602083018461164d565b600080602083850312156116d757600080fd5b823567ffffffffffffffff8111156116ee57600080fd5b6116fa85828601611562565b90969095509350505050565b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b604081526000611763604083018688611706565b8281036020840152611776818587611706565b979650505050505050565b60006020828403121561179357600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b808201808211156108cd576108cd61179a565b60ff81811683821601908111156108cd576108cd61179a565b6000808585111561180557600080fd5b8386111561181257600080fd5b5050820193919092039150565b7fffff000000000000000000000000000000000000000000000000000000000000813581811691600285101561185f5780818660020360031b1b83161692505b505092915050565b7fffffffff00000000000000000000000000000000000000000000000000000000813581811691600485101561185f5760049490940360031b84901b1690921692915050565b803560208310156108cd577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff602084900360031b1b1692915050565b73ffffffffffffffffffffffffffffffffffffffff84168152606060208201526000611918606083018561164d565b905063ffffffff83166040830152949350505050565b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000813581811691601485101561185f5760149490940360031b84901b169092169291505056fea2646970667358221220cb01fb3d00eec22ad64bce5210cc25bfff4f520769d8eeb2b8710a2c1febb0ec64736f6c6343000816003341627374726163744d657373616765496441757468486f6f6b3a20696e76616c';

type OPL2ToL1HookConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OPL2ToL1HookConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OPL2ToL1Hook__factory extends ContractFactory {
  constructor(...args: OPL2ToL1HookConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _mailbox: string,
    _destinationDomain: BigNumberish,
    _ism: BytesLike,
    _l2Messenger: string,
    _childHook: string,
    overrides?: Overrides & { from?: string },
  ): Promise<OPL2ToL1Hook> {
    return super.deploy(
      _mailbox,
      _destinationDomain,
      _ism,
      _l2Messenger,
      _childHook,
      overrides || {},
    ) as Promise<OPL2ToL1Hook>;
  }
  override getDeployTransaction(
    _mailbox: string,
    _destinationDomain: BigNumberish,
    _ism: BytesLike,
    _l2Messenger: string,
    _childHook: string,
    overrides?: Overrides & { from?: string },
  ): TransactionRequest {
    return super.getDeployTransaction(
      _mailbox,
      _destinationDomain,
      _ism,
      _l2Messenger,
      _childHook,
      overrides || {},
    );
  }
  override attach(address: string): OPL2ToL1Hook {
    return super.attach(address) as OPL2ToL1Hook;
  }
  override connect(signer: Signer): OPL2ToL1Hook__factory {
    return super.connect(signer) as OPL2ToL1Hook__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OPL2ToL1HookInterface {
    return new utils.Interface(_abi) as OPL2ToL1HookInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): OPL2ToL1Hook {
    return new Contract(address, _abi, signerOrProvider) as OPL2ToL1Hook;
  }
}
