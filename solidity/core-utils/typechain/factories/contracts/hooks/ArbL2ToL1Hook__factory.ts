/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import {
  BigNumberish,
  BytesLike,
  Contract,
  ContractFactory,
  Overrides,
  Signer,
  utils,
} from 'ethers';

import type {
  ArbL2ToL1Hook,
  ArbL2ToL1HookInterface,
} from '../../../contracts/hooks/ArbL2ToL1Hook.js';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_mailbox',
        type: 'address',
      },
      {
        internalType: 'uint32',
        name: '_destinationDomain',
        type: 'uint32',
      },
      {
        internalType: 'bytes32',
        name: '_ism',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: '_arbSys',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_childHook',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: '_hook',
        type: 'address',
      },
    ],
    name: 'HookSet',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint8',
        name: 'version',
        type: 'uint8',
      },
    ],
    name: 'Initialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: '_ism',
        type: 'address',
      },
    ],
    name: 'IsmSet',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    inputs: [],
    name: 'PACKAGE_VERSION',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'arbSys',
    outputs: [
      {
        internalType: 'contract ArbSys',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'childHook',
    outputs: [
      {
        internalType: 'contract IPostDispatchHook',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'destinationDomain',
    outputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'hook',
    outputs: [
      {
        internalType: 'contract IPostDispatchHook',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'hookType',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'interchainSecurityModule',
    outputs: [
      {
        internalType: 'contract IInterchainSecurityModule',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'ism',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'localDomain',
    outputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'mailbox',
    outputs: [
      {
        internalType: 'contract IMailbox',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'metadata',
        type: 'bytes',
      },
      {
        internalType: 'bytes',
        name: 'message',
        type: 'bytes',
      },
    ],
    name: 'postDispatch',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'metadata',
        type: 'bytes',
      },
      {
        internalType: 'bytes',
        name: 'message',
        type: 'bytes',
      },
    ],
    name: 'quoteDispatch',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_hook',
        type: 'address',
      },
    ],
    name: 'setHook',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_module',
        type: 'address',
      },
    ],
    name: 'setInterchainSecurityModule',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'metadata',
        type: 'bytes',
      },
    ],
    name: 'supportsMetadata',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x6101406040523480156200001257600080fd5b5060405162001d1d38038062001d1d833981016040819052620000359162000288565b84848482806001600160a01b0381163b620000975760405162461bcd60e51b815260206004820152601e60248201527f4d61696c626f78436c69656e743a20696e76616c6964206d61696c626f78000060448201526064015b60405180910390fd5b6001600160a01b03821660808190526040805163234d8e3d60e21b81529051638d3638f4916004808201926020929091908290030181865afa158015620000e2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001089190620002ef565b63ffffffff1660a0526200011c3362000204565b508190506200016c5760405162461bcd60e51b8152602060048201526026602482015260008051602062001cfd83398151915260448201526569642049534d60d01b60648201526084016200008e565b8163ffffffff16600003620001d95760405162461bcd60e51b8152602060048201526035602482015260008051602062001cfd83398151915260448201527f69642064657374696e6174696f6e20646f6d61696e000000000000000000000060648201526084016200008e565b60c05263ffffffff1660e052506001600160a01b039182166101005216610120525062000314915050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b03811681146200026e57600080fd5b919050565b805163ffffffff811681146200026e57600080fd5b600080600080600060a08688031215620002a157600080fd5b620002ac8662000256565b9450620002bc6020870162000273565b935060408601519250620002d36060870162000256565b9150620002e36080870162000256565b90509295509295909350565b6000602082840312156200030257600080fd5b6200030d8262000273565b9392505050565b60805160a05160c05160e051610100516101205161196f6200038e6000396000818161021c01528181610d06015261101501526000818161017501526111020152600081816101d30152610a32015260008181610270015261113e015260006102f40152600081816103c90152610df9015261196f6000f3fe6080604052600436106101295760003560e01c80638d3638f4116100a5578063d5438eae11610074578063e445e7dd11610059578063e445e7dd14610418578063e5320bb914610434578063f2fde38b1461046457600080fd5b8063d5438eae146103b7578063de523cf3146103eb57600080fd5b80638d3638f4146102e25780638da5cb5b1461031657806393c4484714610341578063aaccd2301461039757600080fd5b80632dd120b9116100fc5780634deefab2116100e15780634deefab21461025e578063715018a6146102a05780637f5a7c7b146102b557600080fd5b80632dd120b91461020a5780633dfd38731461023e57600080fd5b8063086011b91461012e5780630e72cc06146101435780631057d40f146101635780632858c55a146101c1575b600080fd5b61014161013c36600461157e565b610484565b005b34801561014f57600080fd5b5061014161015e3660046115ea565b610531565b34801561016f57600080fd5b506101977f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b3480156101cd57600080fd5b506101f57f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020016101b8565b34801561021657600080fd5b506101977f000000000000000000000000000000000000000000000000000000000000000081565b34801561024a57600080fd5b506101416102593660046115ea565b61067a565b34801561026a57600080fd5b506102927f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020016101b8565b3480156102ac57600080fd5b506101416107bb565b3480156102c157600080fd5b506065546101979073ffffffffffffffffffffffffffffffffffffffff1681565b3480156102ee57600080fd5b506101f57f000000000000000000000000000000000000000000000000000000000000000081565b34801561032257600080fd5b5060335473ffffffffffffffffffffffffffffffffffffffff16610197565b34801561034d57600080fd5b5061038a6040518060400160405280600581526020017f372e312e3400000000000000000000000000000000000000000000000000000081525081565b6040516101b89190611684565b3480156103a357600080fd5b506102926103b236600461157e565b6107cf565b3480156103c357600080fd5b506101977f000000000000000000000000000000000000000000000000000000000000000081565b3480156103f757600080fd5b506066546101979073ffffffffffffffffffffffffffffffffffffffff1681565b34801561042457600080fd5b50604051600b81526020016101b8565b34801561044057600080fd5b5061045461044f366004611697565b61087c565b60405190151581526020016101b8565b34801561047057600080fd5b5061014161047f3660046115ea565b6108a1565b61048e848461087c565b61051f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603260248201527f4162737472616374506f73744469737061746368486f6f6b3a20696e76616c6960448201527f64206d657461646174612076617269616e74000000000000000000000000000060648201526084015b60405180910390fd5b61052b84848484610958565b50505050565b8073ffffffffffffffffffffffffffffffffffffffff81163b15158061056b575073ffffffffffffffffffffffffffffffffffffffff8116155b6105f7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f4d61696c626f78436c69656e743a20696e76616c696420636f6e74726163742060448201527f73657474696e67000000000000000000000000000000000000000000000000006064820152608401610516565b6105ff610bce565b606680547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff84169081179091556040519081527fc47cbcc588c67679e52261c45cc315e56562f8d0ccaba16facb9093ff9498799906020015b60405180910390a15050565b8073ffffffffffffffffffffffffffffffffffffffff81163b1515806106b4575073ffffffffffffffffffffffffffffffffffffffff8116155b610740576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f4d61696c626f78436c69656e743a20696e76616c696420636f6e74726163742060448201527f73657474696e67000000000000000000000000000000000000000000000000006064820152608401610516565b610748610bce565b606580547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff84169081179091556040519081527f4eab7b127c764308788622363ad3e9532de3dfba7845bd4f84c125a22544255a9060200161066e565b6107c3610bce565b6107cd6000610c4f565b565b60006107db858561087c565b610867576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603260248201527f4162737472616374506f73744469737061746368486f6f6b3a20696e76616c6960448201527f64206d657461646174612076617269616e7400000000000000000000000000006064820152608401610516565b61087385858585610cc6565b95945050505050565b6000811580610898575060016108928484610d98565b61ffff16145b90505b92915050565b6108a9610bce565b73ffffffffffffffffffffffffffffffffffffffff811661094c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610516565b61095581610c4f565b50565b600061099983838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610de992505050565b90506109a481610df4565b610a30576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603860248201527f41627374726163744d657373616765496441757468486f6f6b3a206d6573736160448201527f6765206e6f74206c6174657374206469737061746368656400000000000000006064820152608401610516565b7f000000000000000000000000000000000000000000000000000000000000000063ffffffff16610a618484610e8d565b63ffffffff1614610af4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603560248201527f41627374726163744d657373616765496441757468486f6f6b3a20696e76616c60448201527f69642064657374696e6174696f6e20646f6d61696e00000000000000000000006064820152608401610516565b7f8000000000000000000000000000000000000000000000000000000000000000610b2186866000610eb0565b10610bae576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603e60248201527f41627374726163744d657373616765496441757468486f6f6b3a206d7367566160448201527f6c7565206d757374206265206c657373207468616e2032202a2a2032353500006064820152608401610516565b610bba85858585610f01565b610bc785858585476111cb565b5050505050565b60335473ffffffffffffffffffffffffffffffffffffffff1633146107cd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610516565b6033805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6040517faaccd23000000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063aaccd23090610d41908890889088908890600401611722565b602060405180830381865afa158015610d5e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d829190611754565b610d8e86866000610eb0565b610873919061179c565b6000610da58160026117af565b60ff16821015610db75750600061089b565b82600083610dc68260026117af565b60ff1692610dd6939291906117c8565b610ddf916117f2565b60f01c9392505050565b805160209091012090565b6000817f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663134fbb4f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e62573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e869190611754565b1492915050565b6000610e9d602d602984866117c8565b610ea69161183a565b60e01c9392505050565b6000610ebe600260206117af565b60ff16831015610ecf575080610efa565b83600284610ede8260206117af565b60ff1692610eee939291906117c8565b610ef791611880565b90505b9392505050565b6000610f4283838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610de992505050565b610f4e86866000610eb0565b60405160248101929092526044820152606401604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167ff313ac8c00000000000000000000000000000000000000000000000000000000179052517faaccd23000000000000000000000000000000000000000000000000000000000815290915073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063086011b990829063aaccd23090611058908a908a908a908a90600401611722565b602060405180830381865afa158015611075573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110999190611754565b878787876040518663ffffffff1660e01b81526004016110bc9493929190611722565b6000604051808303818588803b1580156110d557600080fd5b505af11580156110e9573d6000803e3d6000fd5b505073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016925063928c169a9150611139905087876000610eb0565b6111627f00000000000000000000000000000000000000000000000000000000000000006112ae565b846040518463ffffffff1660e01b81526004016111809291906118bc565b60206040518083038185885af115801561119e573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906111c39190611754565b505050505050565b8015610bc75760006111e96111e08585611357565b8790879061136b565b905073ffffffffffffffffffffffffffffffffffffffff811661128e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f4162737472616374506f73744469737061746368486f6f6b3a206e6f2072656660448201527f756e6420616464726573730000000000000000000000000000000000000000006064820152608401610516565b6111c373ffffffffffffffffffffffffffffffffffffffff8216836113bd565b600073ffffffffffffffffffffffffffffffffffffffff821115611353576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f5479706543617374733a2062797465733332546f41646472657373206f76657260448201527f666c6f77000000000000000000000000000000000000000000000000000000006064820152608401610516565b5090565b6000610898611366848461151c565b6112ae565b6000611379604260146117af565b60ff1683101561138a575080610efa565b836042846113998260146117af565b60ff16926113a9939291906117c8565b6113b2916118f3565b60601c949350505050565b80471015611427576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606401610516565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d8060008114611481576040519150601f19603f3d011682016040523d82523d6000602084013e611486565b606091505b5050905080611517576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608401610516565b505050565b600061152c6029600984866117c8565b61089891611880565b60008083601f84011261154757600080fd5b50813567ffffffffffffffff81111561155f57600080fd5b60208301915083602082850101111561157757600080fd5b9250929050565b6000806000806040858703121561159457600080fd5b843567ffffffffffffffff808211156115ac57600080fd5b6115b888838901611535565b909650945060208701359150808211156115d157600080fd5b506115de87828801611535565b95989497509550505050565b6000602082840312156115fc57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff81168114610efa57600080fd5b6000815180845260005b818110156116465760208185018101518683018201520161162a565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b6020815260006108986020830184611620565b600080602083850312156116aa57600080fd5b823567ffffffffffffffff8111156116c157600080fd5b6116cd85828601611535565b90969095509350505050565b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b6040815260006117366040830186886116d9565b82810360208401526117498185876116d9565b979650505050505050565b60006020828403121561176657600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8082018082111561089b5761089b61176d565b60ff818116838216019081111561089b5761089b61176d565b600080858511156117d857600080fd5b838611156117e557600080fd5b5050820193919092039150565b7fffff00000000000000000000000000000000000000000000000000000000000081358181169160028510156118325780818660020360031b1b83161692505b505092915050565b7fffffffff0000000000000000000000000000000000000000000000000000000081358181169160048510156118325760049490940360031b84901b1690921692915050565b8035602083101561089b577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff602084900360031b1b1692915050565b73ffffffffffffffffffffffffffffffffffffffff831681526040602082015260006118eb6040830184611620565b949350505050565b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000081358181169160148510156118325760149490940360031b84901b169092169291505056fea26469706673582212207f092f0a0fca0e3e637b09ed17844ee2a237a135b008aca64c37711fba7da33664736f6c6343000816003341627374726163744d657373616765496441757468486f6f6b3a20696e76616c';

type ArbL2ToL1HookConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ArbL2ToL1HookConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ArbL2ToL1Hook__factory extends ContractFactory {
  constructor(...args: ArbL2ToL1HookConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _mailbox: string,
    _destinationDomain: BigNumberish,
    _ism: BytesLike,
    _arbSys: string,
    _childHook: string,
    overrides?: Overrides & { from?: string },
  ): Promise<ArbL2ToL1Hook> {
    return super.deploy(
      _mailbox,
      _destinationDomain,
      _ism,
      _arbSys,
      _childHook,
      overrides || {},
    ) as Promise<ArbL2ToL1Hook>;
  }
  override getDeployTransaction(
    _mailbox: string,
    _destinationDomain: BigNumberish,
    _ism: BytesLike,
    _arbSys: string,
    _childHook: string,
    overrides?: Overrides & { from?: string },
  ): TransactionRequest {
    return super.getDeployTransaction(
      _mailbox,
      _destinationDomain,
      _ism,
      _arbSys,
      _childHook,
      overrides || {},
    );
  }
  override attach(address: string): ArbL2ToL1Hook {
    return super.attach(address) as ArbL2ToL1Hook;
  }
  override connect(signer: Signer): ArbL2ToL1Hook__factory {
    return super.connect(signer) as ArbL2ToL1Hook__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ArbL2ToL1HookInterface {
    return new utils.Interface(_abi) as ArbL2ToL1HookInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): ArbL2ToL1Hook {
    return new Contract(address, _abi, signerOrProvider) as ArbL2ToL1Hook;
  }
}
