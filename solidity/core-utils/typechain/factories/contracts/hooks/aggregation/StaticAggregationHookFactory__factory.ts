/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import { Contract, ContractFactory, Overrides, Signer, utils } from 'ethers';

import type {
  StaticAggregationHookFactory,
  StaticAggregationHookFactoryInterface,
} from '../../../../contracts/hooks/aggregation/StaticAggregationHookFactory.js';

const _abi = [
  {
    inputs: [],
    name: 'PACKAGE_VERSION',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: '_values',
        type: 'address[]',
      },
    ],
    name: 'deploy',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: '_values',
        type: 'address[]',
      },
      {
        internalType: 'uint8',
        name: '_threshold',
        type: 'uint8',
      },
    ],
    name: 'deploy',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: '_values',
        type: 'address[]',
      },
    ],
    name: 'getAddress',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: '_values',
        type: 'address[]',
      },
      {
        internalType: 'uint8',
        name: '_threshold',
        type: 'uint8',
      },
    ],
    name: 'getAddress',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'implementation',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x60a060405234801561001057600080fd5b5061001961002a565b6001600160a01b0316608052610067565b60006040516100389061005a565b604051809103906000f080158015610054573d6000803e3d6000fd5b50905090565b610eae8061083283390190565b6080516107aa6100886000396000818160b901526102c801526107aa6000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c8063ce82905811610050578063ce82905814610124578063d4277ebc14610137578063ed547bf71461014a57600080fd5b80630570b1fa146100775780635c60da1b146100b457806393c44847146100db575b600080fd5b61008a610085366004610574565b61015d565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b61008a7f000000000000000000000000000000000000000000000000000000000000000081565b6101176040518060400160405280600581526020017f372e312e3400000000000000000000000000000000000000000000000000000081525081565b6040516100ab91906105da565b61008a610132366004610574565b610171565b61008a61014536600461062b565b610197565b61008a61015836600461062b565b6101bf565b600061016a8383806101bf565b9392505050565b60008080610180858580610295565b9150915061018e8282610305565b95945050505050565b60008060006101a7868686610295565b915091506101b58282610305565b9695505050505050565b60008160ff1660001080156101d7575060ff82168310155b610242576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f496e76616c6964207468726573686f6c6400000000000000000000000000000060448201526064015b60405180910390fd5b600080610250868686610295565b9150915060006102608383610305565b905073ffffffffffffffffffffffffffffffffffffffff81163b6101b55761028a60008484610321565b979650505050505050565b6000606060008585856040516020016102b093929190610688565b604051602081830303815290604052905060006102ed7f000000000000000000000000000000000000000000000000000000000000000083610480565b82516020909301929092209791965090945050505050565b8051602082012060009061031984826104f6565b949350505050565b60008347101561038d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f437265617465323a20696e73756666696369656e742062616c616e63650000006044820152606401610239565b81516000036103f8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f437265617465323a2062797465636f6465206c656e677468206973207a65726f6044820152606401610239565b8282516020840186f5905073ffffffffffffffffffffffffffffffffffffffff811661016a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f437265617465323a204661696c6564206f6e206465706c6f79000000000000006044820152606401610239565b60607f600b380380600b3d393df3363d3d373d3d3d3d60368038038091363936013d738360601b7f5af43d3d93803e603457fd5bf3000000000000000000000000000000000000008485516040516020016104df9594939291906106f5565b604051602081830303815290604052905092915050565b600061016a8383306000604051836040820152846020820152828152600b8101905060ff815360559020949350505050565b60008083601f84011261053a57600080fd5b50813567ffffffffffffffff81111561055257600080fd5b6020830191508360208260051b850101111561056d57600080fd5b9250929050565b6000806020838503121561058757600080fd5b823567ffffffffffffffff81111561059e57600080fd5b6105aa85828601610528565b90969095509350505050565b60005b838110156105d15781810151838201526020016105b9565b50506000910152565b60208152600082518060208401526105f98160408501602087016105b6565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b60008060006040848603121561064057600080fd5b833567ffffffffffffffff81111561065757600080fd5b61066386828701610528565b909450925050602084013560ff8116811461067d57600080fd5b809150509250925092565b604080825281018390526000846060830182805b878110156106dd57833573ffffffffffffffffffffffffffffffffffffffff81168082146106c8578384fd5b8452506020938401939092019160010161069c565b5050809250505060ff83166020830152949350505050565b8581527fffffffffffffffffffffffffffffffffffffffff000000000000000000000000851660208201527fffffffffffffffffffffffffff00000000000000000000000000000000000000841660348201526000835161075d8160418501602088016105b6565b60419201918201929092526061019594505050505056fea26469706673582212205ffc3b417204996c6daa42a7a480ba892117ccda185aaf6210853db71a8f584364736f6c63430008160033608060405234801561001057600080fd5b50610e8e806100206000396000f3fe6080604052600436106100655760003560e01c8063aaccd23011610043578063aaccd2301461010b578063e445e7dd14610139578063e5320bb91461015557600080fd5b8063086011b91461006a57806337b02c281461007f57806393c44847146100b5575b600080fd5b61007d610078366004610983565b610185565b005b34801561008b57600080fd5b5061009f61009a3660046109ef565b610232565b6040516100ac9190610a31565b60405180910390f35b3480156100c157600080fd5b506100fe6040518060400160405280600581526020017f372e312e3400000000000000000000000000000000000000000000000000000081525081565b6040516100ac9190610a8b565b34801561011757600080fd5b5061012b610126366004610983565b610258565b6040519081526020016100ac565b34801561014557600080fd5b50604051600281526020016100ac565b34801561016157600080fd5b506101756101703660046109ef565b610305565b60405190151581526020016100ac565b61018f8484610305565b610220576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603260248201527f4162737472616374506f73744469737061746368486f6f6b3a20696e76616c6960448201527f64206d657461646174612076617269616e74000000000000000000000000000060648201526084015b60405180910390fd5b61022c84848484610327565b50505050565b606061023c610559565b80602001905181019061024f9190610b50565b90505b92915050565b60006102648585610305565b6102f0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603260248201527f4162737472616374506f73744469737061746368486f6f6b3a20696e76616c6960448201527f64206d657461646174612076617269616e7400000000000000000000000000006064820152608401610217565b6102fc85858585610589565b95945050505050565b600081158061024f5750600161031b8484610660565b61ffff16149392505050565b60006103338383610232565b80519091503460005b8281101561051357600084828151811061035857610358610c33565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1663aaccd2308a8a8a8a6040518563ffffffff1660e01b815260040161039e9493929190610cab565b602060405180830381865afa1580156103bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103df9190610cdd565b905080831015610471576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f5374617469634167677265676174696f6e486f6f6b3a20696e7375666669636960448201527f656e742076616c756500000000000000000000000000000000000000000000006064820152608401610217565b84828151811061048357610483610c33565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1663086011b9828b8b8b8b6040518663ffffffff1660e01b81526004016104ca9493929190610cab565b6000604051808303818588803b1580156104e357600080fd5b505af11580156104f7573d6000803e3d6000fd5b505050505080836105089190610d25565b92505060010161033c565b508015610550576105508161053461052b88886106b1565b8a908a906106c5565b73ffffffffffffffffffffffffffffffffffffffff1690610719565b50505050505050565b60608060203603803580820391506040519250602081018301604052808352602083018183823750919392505050565b6000806105968484610232565b80519091506000805b82811015610654578381815181106105b9576105b9610c33565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1663aaccd2308a8a8a8a6040518563ffffffff1660e01b81526004016105ff9493929190610cab565b602060405180830381865afa15801561061c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106409190610cdd565b61064a9083610d38565b915060010161059f565b50979650505050505050565b600061066d816002610d4b565b60ff1682101561067f57506000610252565b8260008361068e826002610d4b565b60ff169261069e93929190610d64565b6106a791610d8e565b60f01c9392505050565b600061024f6106c08484610878565b610891565b60006106d360426014610d4b565b60ff168310156106e4575080610712565b836042846106f3826014610d4b565b60ff169261070393929190610d64565b61070c91610dd6565b60601c90505b9392505050565b80471015610783576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606401610217565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d80600081146107dd576040519150601f19603f3d011682016040523d82523d6000602084013e6107e2565b606091505b5050905080610873576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608401610217565b505050565b6000610888602960098486610d64565b61024f91610e1c565b600073ffffffffffffffffffffffffffffffffffffffff821115610936576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f5479706543617374733a2062797465733332546f41646472657373206f76657260448201527f666c6f77000000000000000000000000000000000000000000000000000000006064820152608401610217565b5090565b60008083601f84011261094c57600080fd5b50813567ffffffffffffffff81111561096457600080fd5b60208301915083602082850101111561097c57600080fd5b9250929050565b6000806000806040858703121561099957600080fd5b843567ffffffffffffffff808211156109b157600080fd5b6109bd8883890161093a565b909650945060208701359150808211156109d657600080fd5b506109e38782880161093a565b95989497509550505050565b60008060208385031215610a0257600080fd5b823567ffffffffffffffff811115610a1957600080fd5b610a258582860161093a565b90969095509350505050565b6020808252825182820181905260009190848201906040850190845b81811015610a7f57835173ffffffffffffffffffffffffffffffffffffffff1683529284019291840191600101610a4d565b50909695505050505050565b60006020808352835180602085015260005b81811015610ab957858101830151858201604001528201610a9d565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b805173ffffffffffffffffffffffffffffffffffffffff81168114610b4b57600080fd5b919050565b60006020808385031215610b6357600080fd5b825167ffffffffffffffff80821115610b7b57600080fd5b818501915085601f830112610b8f57600080fd5b815181811115610ba157610ba1610af8565b8060051b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f83011681018181108582111715610be457610be4610af8565b604052918252848201925083810185019188831115610c0257600080fd5b938501935b82851015610c2757610c1885610b27565b84529385019392850192610c07565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b604081526000610cbf604083018688610c62565b8281036020840152610cd2818587610c62565b979650505050505050565b600060208284031215610cef57600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8181038181111561025257610252610cf6565b8082018082111561025257610252610cf6565b60ff818116838216019081111561025257610252610cf6565b60008085851115610d7457600080fd5b83861115610d8157600080fd5b5050820193919092039150565b7fffff0000000000000000000000000000000000000000000000000000000000008135818116916002851015610dce5780818660020360031b1b83161692505b505092915050565b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000008135818116916014851015610dce5760149490940360031b84901b1690921692915050565b80356020831015610252577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff602084900360031b1b169291505056fea26469706673582212204a7c665f05f4c8f5bd207adcb0465c014d091bc2e8f86ca1581d8c022629b99e64736f6c63430008160033';

type StaticAggregationHookFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StaticAggregationHookFactoryConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StaticAggregationHookFactory__factory extends ContractFactory {
  constructor(...args: StaticAggregationHookFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string },
  ): Promise<StaticAggregationHookFactory> {
    return super.deploy(
      overrides || {},
    ) as Promise<StaticAggregationHookFactory>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string },
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): StaticAggregationHookFactory {
    return super.attach(address) as StaticAggregationHookFactory;
  }
  override connect(signer: Signer): StaticAggregationHookFactory__factory {
    return super.connect(signer) as StaticAggregationHookFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StaticAggregationHookFactoryInterface {
    return new utils.Interface(_abi) as StaticAggregationHookFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): StaticAggregationHookFactory {
    return new Contract(
      address,
      _abi,
      signerOrProvider,
    ) as StaticAggregationHookFactory;
  }
}
