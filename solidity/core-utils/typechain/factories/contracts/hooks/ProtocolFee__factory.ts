/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import {
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
  Signer,
  utils,
} from 'ethers';

import type {
  ProtocolFee,
  ProtocolFeeInterface,
} from '../../../contracts/hooks/ProtocolFee.js';

const _abi = [
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_maxProtocolFee',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_protocolFee',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: '_beneficiary',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_owner',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'beneficiary',
        type: 'address',
      },
    ],
    name: 'BeneficiarySet',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'protocolFee',
        type: 'uint256',
      },
    ],
    name: 'ProtocolFeeSet',
    type: 'event',
  },
  {
    inputs: [],
    name: 'MAX_PROTOCOL_FEE',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'PACKAGE_VERSION',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'beneficiary',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'collectProtocolFees',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'hookType',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'metadata',
        type: 'bytes',
      },
      {
        internalType: 'bytes',
        name: 'message',
        type: 'bytes',
      },
    ],
    name: 'postDispatch',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'protocolFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'metadata',
        type: 'bytes',
      },
      {
        internalType: 'bytes',
        name: 'message',
        type: 'bytes',
      },
    ],
    name: 'quoteDispatch',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_beneficiary',
        type: 'address',
      },
    ],
    name: 'setBeneficiary',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_protocolFee',
        type: 'uint256',
      },
    ],
    name: 'setProtocolFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'metadata',
        type: 'bytes',
      },
    ],
    name: 'supportsMetadata',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x60a06040523480156200001157600080fd5b50604051620012b2380380620012b2833981016040819052620000349162000225565b6200003f336200006f565b60808490526200004f83620000bf565b6200005a8262000161565b62000065816200006f565b5050505062000270565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b608051811115620001255760405162461bcd60e51b815260206004820152602560248201527f50726f746f636f6c4665653a2065786365656473206d61782070726f746f636f6044820152646c2066656560d81b60648201526084015b60405180910390fd5b60018190556040518181527fdb5aafdb29539329e37d4e3ee869bc4031941fd55a5dfc92824fbe34b204e30d906020015b60405180910390a150565b6001600160a01b038116620001b95760405162461bcd60e51b815260206004820181905260248201527f50726f746f636f6c4665653a20696e76616c69642062656e656669636961727960448201526064016200011c565b600280546001600160a01b0319166001600160a01b0383169081179091556040519081527f04d55a8be181fb8d75b76f2d48aa0b2ee40f47e53d6e61763eeeec46feea8a249060200162000156565b80516001600160a01b03811681146200022057600080fd5b919050565b600080600080608085870312156200023c57600080fd5b8451935060208501519250620002556040860162000208565b9150620002656060860162000208565b905092959194509250565b60805161101f620002936000396000818161028f015261083e015261101f6000f3fe6080604052600436106100dd5760003560e01c8063a1af5b9a1161007f578063b8ca3b8311610059578063b8ca3b831461027d578063e445e7dd146102b1578063e5320bb9146102cd578063f2fde38b146102fd57600080fd5b8063a1af5b9a14610224578063aaccd23014610239578063b0e21e8a1461026757600080fd5b8063715018a6116100bb578063715018a61461016e578063787dce3d146101835780638da5cb5b146101a357806393c44847146101ce57600080fd5b8063086011b9146100e25780631c31f710146100f757806338af3eed14610117575b600080fd5b6100f56100f0366004610d30565b61031d565b005b34801561010357600080fd5b506100f5610112366004610d9c565b6103ca565b34801561012357600080fd5b506002546101449073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b34801561017a57600080fd5b506100f56103de565b34801561018f57600080fd5b506100f561019e366004610dd2565b6103f2565b3480156101af57600080fd5b5060005473ffffffffffffffffffffffffffffffffffffffff16610144565b3480156101da57600080fd5b506102176040518060400160405280600581526020017f372e312e3400000000000000000000000000000000000000000000000000000081525081565b6040516101659190610deb565b34801561023057600080fd5b506100f5610403565b34801561024557600080fd5b50610259610254366004610d30565b610426565b604051908152602001610165565b34801561027357600080fd5b5061025960015481565b34801561028957600080fd5b506102597f000000000000000000000000000000000000000000000000000000000000000081565b3480156102bd57600080fd5b5060405160088152602001610165565b3480156102d957600080fd5b506102ed6102e8366004610e58565b6104ca565b6040519015158152602001610165565b34801561030957600080fd5b506100f5610318366004610d9c565b6104ef565b61032784846104ca565b6103b8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603260248201527f4162737472616374506f73744469737061746368486f6f6b3a20696e76616c6960448201527f64206d657461646174612076617269616e74000000000000000000000000000060648201526084015b60405180910390fd5b6103c4848484846105a3565b50505050565b6103d261064f565b6103db816106d0565b50565b6103e661064f565b6103f060006107c7565b565b6103fa61064f565b6103db8161083c565b6002546103f09073ffffffffffffffffffffffffffffffffffffffff1647610921565b600061043285856104ca565b6104be576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603260248201527f4162737472616374506f73744469737061746368486f6f6b3a20696e76616c6960448201527f64206d657461646174612076617269616e74000000000000000000000000000060648201526084016103af565b60015495945050505050565b60008115806104e6575060016104e08484610a80565b61ffff16145b90505b92915050565b6104f761064f565b73ffffffffffffffffffffffffffffffffffffffff811661059a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016103af565b6103db816107c7565b600154341015610635576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f50726f746f636f6c4665653a20696e73756666696369656e742070726f746f6360448201527f6f6c20666565000000000000000000000000000000000000000000000000000060648201526084016103af565b6103c4848484846001543461064a9190610ec9565b610ad1565b60005473ffffffffffffffffffffffffffffffffffffffff1633146103f0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103af565b73ffffffffffffffffffffffffffffffffffffffff811661074d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f50726f746f636f6c4665653a20696e76616c69642062656e656669636961727960448201526064016103af565b600280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040519081527f04d55a8be181fb8d75b76f2d48aa0b2ee40f47e53d6e61763eeeec46feea8a24906020015b60405180910390a150565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b7f00000000000000000000000000000000000000000000000000000000000000008111156108ec576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f50726f746f636f6c4665653a2065786365656473206d61782070726f746f636f60448201527f6c2066656500000000000000000000000000000000000000000000000000000060648201526084016103af565b60018190556040518181527fdb5aafdb29539329e37d4e3ee869bc4031941fd55a5dfc92824fbe34b204e30d906020016107bc565b8047101561098b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064016103af565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d80600081146109e5576040519150601f19603f3d011682016040523d82523d6000602084013e6109ea565b606091505b5050905080610a7b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d6179206861766520726576657274656400000000000060648201526084016103af565b505050565b6000610a8d816002610edc565b60ff16821015610a9f575060006104e9565b82600083610aae826002610edc565b60ff1692610abe93929190610ef5565b610ac791610f1f565b60f01c9392505050565b8015610bb6576000610aef610ae68585610bbd565b87908790610bd1565b905073ffffffffffffffffffffffffffffffffffffffff8116610b94576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f4162737472616374506f73744469737061746368486f6f6b3a206e6f2072656660448201527f756e64206164647265737300000000000000000000000000000000000000000060648201526084016103af565b610bb473ffffffffffffffffffffffffffffffffffffffff821683610921565b505b5050505050565b60006104e6610bcc8484610c25565b610c3e565b6000610bdf60426014610edc565b60ff16831015610bf0575080610c1e565b83604284610bff826014610edc565b60ff1692610c0f93929190610ef5565b610c1891610f67565b60601c90505b9392505050565b6000610c35602960098486610ef5565b6104e691610fad565b600073ffffffffffffffffffffffffffffffffffffffff821115610ce3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f5479706543617374733a2062797465733332546f41646472657373206f76657260448201527f666c6f770000000000000000000000000000000000000000000000000000000060648201526084016103af565b5090565b60008083601f840112610cf957600080fd5b50813567ffffffffffffffff811115610d1157600080fd5b602083019150836020828501011115610d2957600080fd5b9250929050565b60008060008060408587031215610d4657600080fd5b843567ffffffffffffffff80821115610d5e57600080fd5b610d6a88838901610ce7565b90965094506020870135915080821115610d8357600080fd5b50610d9087828801610ce7565b95989497509550505050565b600060208284031215610dae57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff81168114610c1e57600080fd5b600060208284031215610de457600080fd5b5035919050565b60006020808352835180602085015260005b81811015610e1957858101830151858201604001528201610dfd565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b60008060208385031215610e6b57600080fd5b823567ffffffffffffffff811115610e8257600080fd5b610e8e85828601610ce7565b90969095509350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b818103818111156104e9576104e9610e9a565b60ff81811683821601908111156104e9576104e9610e9a565b60008085851115610f0557600080fd5b83861115610f1257600080fd5b5050820193919092039150565b7fffff0000000000000000000000000000000000000000000000000000000000008135818116916002851015610f5f5780818660020360031b1b83161692505b505092915050565b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000008135818116916014851015610f5f5760149490940360031b84901b1690921692915050565b803560208310156104e9577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff602084900360031b1b169291505056fea26469706673582212206fc7d13a7ae08e087501514ae36d3732f16a6663ee856546192d7d941a53aa5e64736f6c63430008160033';

type ProtocolFeeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProtocolFeeConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ProtocolFee__factory extends ContractFactory {
  constructor(...args: ProtocolFeeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _maxProtocolFee: BigNumberish,
    _protocolFee: BigNumberish,
    _beneficiary: string,
    _owner: string,
    overrides?: Overrides & { from?: string },
  ): Promise<ProtocolFee> {
    return super.deploy(
      _maxProtocolFee,
      _protocolFee,
      _beneficiary,
      _owner,
      overrides || {},
    ) as Promise<ProtocolFee>;
  }
  override getDeployTransaction(
    _maxProtocolFee: BigNumberish,
    _protocolFee: BigNumberish,
    _beneficiary: string,
    _owner: string,
    overrides?: Overrides & { from?: string },
  ): TransactionRequest {
    return super.getDeployTransaction(
      _maxProtocolFee,
      _protocolFee,
      _beneficiary,
      _owner,
      overrides || {},
    );
  }
  override attach(address: string): ProtocolFee {
    return super.attach(address) as ProtocolFee;
  }
  override connect(signer: Signer): ProtocolFee__factory {
    return super.connect(signer) as ProtocolFee__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProtocolFeeInterface {
    return new utils.Interface(_abi) as ProtocolFeeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): ProtocolFee {
    return new Contract(address, _abi, signerOrProvider) as ProtocolFee;
  }
}
