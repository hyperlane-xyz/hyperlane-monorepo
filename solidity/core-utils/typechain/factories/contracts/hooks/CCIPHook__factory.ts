/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import {
  BigNumberish,
  BytesLike,
  Contract,
  ContractFactory,
  Overrides,
  Signer,
  utils,
} from 'ethers';

import type {
  CCIPHook,
  CCIPHookInterface,
} from '../../../contracts/hooks/CCIPHook.js';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_ccipRouter',
        type: 'address',
      },
      {
        internalType: 'uint64',
        name: '_ccipDestination',
        type: 'uint64',
      },
      {
        internalType: 'address',
        name: '_mailbox',
        type: 'address',
      },
      {
        internalType: 'uint32',
        name: '_destination',
        type: 'uint32',
      },
      {
        internalType: 'bytes32',
        name: '_ism',
        type: 'bytes32',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: '_hook',
        type: 'address',
      },
    ],
    name: 'HookSet',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint8',
        name: 'version',
        type: 'uint8',
      },
    ],
    name: 'Initialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: '_ism',
        type: 'address',
      },
    ],
    name: 'IsmSet',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    inputs: [],
    name: 'PACKAGE_VERSION',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'ccipDestination',
    outputs: [
      {
        internalType: 'uint64',
        name: '',
        type: 'uint64',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'destinationDomain',
    outputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'hook',
    outputs: [
      {
        internalType: 'contract IPostDispatchHook',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'hookType',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'interchainSecurityModule',
    outputs: [
      {
        internalType: 'contract IInterchainSecurityModule',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'ism',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'localDomain',
    outputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'mailbox',
    outputs: [
      {
        internalType: 'contract IMailbox',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'metadata',
        type: 'bytes',
      },
      {
        internalType: 'bytes',
        name: 'message',
        type: 'bytes',
      },
    ],
    name: 'postDispatch',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'metadata',
        type: 'bytes',
      },
      {
        internalType: 'bytes',
        name: 'message',
        type: 'bytes',
      },
    ],
    name: 'quoteDispatch',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_hook',
        type: 'address',
      },
    ],
    name: 'setHook',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_module',
        type: 'address',
      },
    ],
    name: 'setInterchainSecurityModule',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'metadata',
        type: 'bytes',
      },
    ],
    name: 'supportsMetadata',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x6101406040523480156200001257600080fd5b5060405162001d8838038062001d8883398101604081905262000035916200028d565b82828282806001600160a01b0381163b620000975760405162461bcd60e51b815260206004820152601e60248201527f4d61696c626f78436c69656e743a20696e76616c6964206d61696c626f78000060448201526064015b60405180910390fd5b6001600160a01b03821660808190526040805163234d8e3d60e21b81529051638d3638f4916004808201926020929091908290030181865afa158015620000e2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000108919062000302565b63ffffffff1660a0526200011c3362000209565b508190506200016c5760405162461bcd60e51b8152602060048201526026602482015260008051602062001d6883398151915260448201526569642049534d60d01b60648201526084016200008e565b8163ffffffff16600003620001d95760405162461bcd60e51b8152602060048201526035602482015260008051602062001d6883398151915260448201527f69642064657374696e6174696f6e20646f6d61696e000000000000000000000060648201526084016200008e565b60c05263ffffffff1660e052505050506001600160401b0316610120526001600160a01b03166101005262000327565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b03811681146200027357600080fd5b919050565b805163ffffffff811681146200027357600080fd5b600080600080600060a08688031215620002a657600080fd5b620002b1866200025b565b60208701519095506001600160401b0381168114620002cf57600080fd5b9350620002df604087016200025b565b9250620002ef6060870162000278565b9150608086015190509295509295909350565b6000602082840312156200031557600080fd5b620003208262000278565b9392505050565b60805160a05160c05160e05161010051610120516119c7620003a1600039600081816103f301528181610d0a0152610f35015260008181610cdd0152610ef801526000818161015a01526109fc0152600081816101c801526110f5015260006102710152600081816103460152610de001526119c76000f3fe60806040526004361061010e5760003560e01c80638da5cb5b116100a5578063de523cf311610074578063e5320bb911610059578063e5320bb9146103b1578063e6b183b0146103e1578063f2fde38b1461042e57600080fd5b8063de523cf314610368578063e445e7dd1461039557600080fd5b80638da5cb5b1461029357806393c44847146102be578063aaccd23014610314578063d5438eae1461033457600080fd5b80634deefab2116100e15780634deefab2146101b6578063715018a6146101f85780637f5a7c7b1461020d5780638d3638f41461025f57600080fd5b8063086011b9146101135780630e72cc06146101285780632858c55a146101485780633dfd387314610196575b600080fd5b61012661012136600461158e565b61044e565b005b34801561013457600080fd5b506101266101433660046115fa565b6104fb565b34801561015457600080fd5b5061017c7f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020015b60405180910390f35b3480156101a257600080fd5b506101266101b13660046115fa565b610644565b3480156101c257600080fd5b506101ea7f000000000000000000000000000000000000000000000000000000000000000081565b60405190815260200161018d565b34801561020457600080fd5b50610126610785565b34801561021957600080fd5b5060655461023a9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161018d565b34801561026b57600080fd5b5061017c7f000000000000000000000000000000000000000000000000000000000000000081565b34801561029f57600080fd5b5060335473ffffffffffffffffffffffffffffffffffffffff1661023a565b3480156102ca57600080fd5b506103076040518060400160405280600581526020017f372e312e3400000000000000000000000000000000000000000000000000000081525081565b60405161018d9190611694565b34801561032057600080fd5b506101ea61032f36600461158e565b610799565b34801561034057600080fd5b5061023a7f000000000000000000000000000000000000000000000000000000000000000081565b34801561037457600080fd5b5060665461023a9073ffffffffffffffffffffffffffffffffffffffff1681565b3480156103a157600080fd5b506040516006815260200161018d565b3480156103bd57600080fd5b506103d16103cc3660046116a7565b610846565b604051901515815260200161018d565b3480156103ed57600080fd5b506104157f000000000000000000000000000000000000000000000000000000000000000081565b60405167ffffffffffffffff909116815260200161018d565b34801561043a57600080fd5b506101266104493660046115fa565b61086b565b6104588484610846565b6104e9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603260248201527f4162737472616374506f73744469737061746368486f6f6b3a20696e76616c6960448201527f64206d657461646174612076617269616e74000000000000000000000000000060648201526084015b60405180910390fd5b6104f584848484610922565b50505050565b8073ffffffffffffffffffffffffffffffffffffffff81163b151580610535575073ffffffffffffffffffffffffffffffffffffffff8116155b6105c1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f4d61696c626f78436c69656e743a20696e76616c696420636f6e74726163742060448201527f73657474696e670000000000000000000000000000000000000000000000000060648201526084016104e0565b6105c9610b98565b606680547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff84169081179091556040519081527fc47cbcc588c67679e52261c45cc315e56562f8d0ccaba16facb9093ff9498799906020015b60405180910390a15050565b8073ffffffffffffffffffffffffffffffffffffffff81163b15158061067e575073ffffffffffffffffffffffffffffffffffffffff8116155b61070a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f4d61696c626f78436c69656e743a20696e76616c696420636f6e74726163742060448201527f73657474696e670000000000000000000000000000000000000000000000000060648201526084016104e0565b610712610b98565b606580547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff84169081179091556040519081527f4eab7b127c764308788622363ad3e9532de3dfba7845bd4f84c125a22544255a90602001610638565b61078d610b98565b6107976000610c19565b565b60006107a58585610846565b610831576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603260248201527f4162737472616374506f73744469737061746368486f6f6b3a20696e76616c6960448201527f64206d657461646174612076617269616e74000000000000000000000000000060648201526084016104e0565b61083d85858585610c90565b95945050505050565b60008115806108625750600161085c8484610d7f565b61ffff16145b90505b92915050565b610873610b98565b73ffffffffffffffffffffffffffffffffffffffff8116610916576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016104e0565b61091f81610c19565b50565b600061096383838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610dd092505050565b905061096e81610ddb565b6109fa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603860248201527f41627374726163744d657373616765496441757468486f6f6b3a206d6573736160448201527f6765206e6f74206c61746573742064697370617463686564000000000000000060648201526084016104e0565b7f000000000000000000000000000000000000000000000000000000000000000063ffffffff16610a2b8484610e74565b63ffffffff1614610abe576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603560248201527f41627374726163744d657373616765496441757468486f6f6b3a20696e76616c60448201527f69642064657374696e6174696f6e20646f6d61696e000000000000000000000060648201526084016104e0565b7f8000000000000000000000000000000000000000000000000000000000000000610aeb86866000610e97565b10610b78576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603e60248201527f41627374726163744d657373616765496441757468486f6f6b3a206d7367566160448201527f6c7565206d757374206265206c657373207468616e2032202a2a20323535000060648201526084016104e0565b610b8485858585610ee8565b610b918585858547610fbd565b5050505050565b60335473ffffffffffffffffffffffffffffffffffffffff163314610797576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104e0565b6033805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600080610c9d84846110a0565b6040517f20487ded00000000000000000000000000000000000000000000000000000000815290915073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906320487ded90610d34907f00000000000000000000000000000000000000000000000000000000000000009085906004016116e9565b602060405180830381865afa158015610d51573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d7591906117fe565b9695505050505050565b6000610d8c816002611817565b60ff16821015610d9e57506000610865565b82600083610dad826002611817565b60ff1692610dbd93929190611857565b610dc691611881565b60f01c9392505050565b805160209091012090565b6000817f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663134fbb4f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e49573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e6d91906117fe565b1492915050565b6000610e84602d60298486611857565b610e8d916118c9565b60e01c9392505050565b6000610ea560026020611817565b60ff16831015610eb6575080610ee1565b83600284610ec5826020611817565b60ff1692610ed593929190611857565b610ede9161190f565b90505b9392505050565b6000610ef483836110a0565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166396f4e9f9347f0000000000000000000000000000000000000000000000000000000000000000846040518463ffffffff1660e01b8152600401610f729291906116e9565b60206040518083038185885af1158015610f90573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610fb591906117fe565b505050505050565b8015610b91576000610fdb610fd285856112be565b879087906112d2565b905073ffffffffffffffffffffffffffffffffffffffff8116611080576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f4162737472616374506f73744469737061746368486f6f6b3a206e6f2072656660448201527f756e64206164647265737300000000000000000000000000000000000000000060648201526084016104e0565b610fb573ffffffffffffffffffffffffffffffffffffffff821683611324565b6110e86040518060a00160405280606081526020016060815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001606081525090565b6040805160a081019091527f000000000000000000000000000000000000000000000000000000000000000060c08201528060e08101604051602081830303815290604052815260200161117185858080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610dd092505050565b60405160200161118391815260200190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152919052815260200160006040519080825280602002602001820160405280156111fd57816020015b60408051808201909152600080825260208201528152602001906001900390816111d65790505b508152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016112b5604051806040016040528061ea608152602001600115158152506040805182516024820152602092830151151560448083019190915282518083039091018152606490910190915290810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f181dcf100000000000000000000000000000000000000000000000000000000017905290565b90529392505050565b60006108626112cd8484611483565b61149c565b60006112e060426014611817565b60ff168310156112f1575080610ee1565b83604284611300826014611817565b60ff169261131093929190611857565b6113199161194b565b60601c949350505050565b8047101561138e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064016104e0565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d80600081146113e8576040519150601f19603f3d011682016040523d82523d6000602084013e6113ed565b606091505b505090508061147e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d6179206861766520726576657274656400000000000060648201526084016104e0565b505050565b6000611493602960098486611857565b6108629161190f565b600073ffffffffffffffffffffffffffffffffffffffff821115611541576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f5479706543617374733a2062797465733332546f41646472657373206f76657260448201527f666c6f770000000000000000000000000000000000000000000000000000000060648201526084016104e0565b5090565b60008083601f84011261155757600080fd5b50813567ffffffffffffffff81111561156f57600080fd5b60208301915083602082850101111561158757600080fd5b9250929050565b600080600080604085870312156115a457600080fd5b843567ffffffffffffffff808211156115bc57600080fd5b6115c888838901611545565b909650945060208701359150808211156115e157600080fd5b506115ee87828801611545565b95989497509550505050565b60006020828403121561160c57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff81168114610ee157600080fd5b6000815180845260005b818110156116565760208185018101518683018201520161163a565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b6020815260006108626020830184611630565b600080602083850312156116ba57600080fd5b823567ffffffffffffffff8111156116d157600080fd5b6116dd85828601611545565b90969095509350505050565b6000604067ffffffffffffffff851683526020604081850152845160a0604086015261171860e0860182611630565b9050818601517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0808784030160608801526117538383611630565b6040890151888203830160808a01528051808352908601945060009350908501905b808410156117b4578451805173ffffffffffffffffffffffffffffffffffffffff16835286015186830152938501936001939093019290860190611775565b50606089015173ffffffffffffffffffffffffffffffffffffffff1660a08901526080890151888203830160c08a015295506117f08187611630565b9a9950505050505050505050565b60006020828403121561181057600080fd5b5051919050565b60ff8181168382160190811115610865577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000808585111561186757600080fd5b8386111561187457600080fd5b5050820193919092039150565b7fffff00000000000000000000000000000000000000000000000000000000000081358181169160028510156118c15780818660020360031b1b83161692505b505092915050565b7fffffffff0000000000000000000000000000000000000000000000000000000081358181169160048510156118c15760049490940360031b84901b1690921692915050565b80356020831015610865577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff602084900360031b1b1692915050565b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000081358181169160148510156118c15760149490940360031b84901b169092169291505056fea2646970667358221220013ee09eccafdae89e41f70de6af60afa2db92cfdbb8c58784916e0b75fc67a464736f6c6343000816003341627374726163744d657373616765496441757468486f6f6b3a20696e76616c';

type CCIPHookConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CCIPHookConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CCIPHook__factory extends ContractFactory {
  constructor(...args: CCIPHookConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _ccipRouter: string,
    _ccipDestination: BigNumberish,
    _mailbox: string,
    _destination: BigNumberish,
    _ism: BytesLike,
    overrides?: Overrides & { from?: string },
  ): Promise<CCIPHook> {
    return super.deploy(
      _ccipRouter,
      _ccipDestination,
      _mailbox,
      _destination,
      _ism,
      overrides || {},
    ) as Promise<CCIPHook>;
  }
  override getDeployTransaction(
    _ccipRouter: string,
    _ccipDestination: BigNumberish,
    _mailbox: string,
    _destination: BigNumberish,
    _ism: BytesLike,
    overrides?: Overrides & { from?: string },
  ): TransactionRequest {
    return super.getDeployTransaction(
      _ccipRouter,
      _ccipDestination,
      _mailbox,
      _destination,
      _ism,
      overrides || {},
    );
  }
  override attach(address: string): CCIPHook {
    return super.attach(address) as CCIPHook;
  }
  override connect(signer: Signer): CCIPHook__factory {
    return super.connect(signer) as CCIPHook__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CCIPHookInterface {
    return new utils.Interface(_abi) as CCIPHookInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): CCIPHook {
    return new Contract(address, _abi, signerOrProvider) as CCIPHook;
  }
}
