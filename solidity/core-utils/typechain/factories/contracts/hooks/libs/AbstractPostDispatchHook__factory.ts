/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Provider } from '@ethersproject/providers';
import { Contract, Signer, utils } from 'ethers';

import type {
  AbstractPostDispatchHook,
  AbstractPostDispatchHookInterface,
} from '../../../../contracts/hooks/libs/AbstractPostDispatchHook.js';

const _abi = [
  {
    inputs: [],
    name: 'PACKAGE_VERSION',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'hookType',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'metadata',
        type: 'bytes',
      },
      {
        internalType: 'bytes',
        name: 'message',
        type: 'bytes',
      },
    ],
    name: 'postDispatch',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'metadata',
        type: 'bytes',
      },
      {
        internalType: 'bytes',
        name: 'message',
        type: 'bytes',
      },
    ],
    name: 'quoteDispatch',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'metadata',
        type: 'bytes',
      },
    ],
    name: 'supportsMetadata',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
] as const;

export class AbstractPostDispatchHook__factory {
  static readonly abi = _abi;
  static createInterface(): AbstractPostDispatchHookInterface {
    return new utils.Interface(_abi) as AbstractPostDispatchHookInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): AbstractPostDispatchHook {
    return new Contract(
      address,
      _abi,
      signerOrProvider,
    ) as AbstractPostDispatchHook;
  }
}
