/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import { Contract, ContractFactory, Overrides, Signer, utils } from 'ethers';

import type {
  DestinationRecipientRoutingHook,
  DestinationRecipientRoutingHookInterface,
} from '../../../../contracts/hooks/routing/DestinationRecipientRoutingHook.js';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: 'mailbox',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: '_hook',
        type: 'address',
      },
    ],
    name: 'HookSet',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint8',
        name: 'version',
        type: 'uint8',
      },
    ],
    name: 'Initialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: '_ism',
        type: 'address',
      },
    ],
    name: 'IsmSet',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    inputs: [],
    name: 'PACKAGE_VERSION',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'destinationDomain',
        type: 'uint32',
      },
      {
        internalType: 'bytes32',
        name: 'recipient',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: 'hook',
        type: 'address',
      },
    ],
    name: 'configCustomHook',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    name: 'customHooks',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'hook',
    outputs: [
      {
        internalType: 'contract IPostDispatchHook',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'hookType',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    name: 'hooks',
    outputs: [
      {
        internalType: 'contract IPostDispatchHook',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'interchainSecurityModule',
    outputs: [
      {
        internalType: 'contract IInterchainSecurityModule',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'localDomain',
    outputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'mailbox',
    outputs: [
      {
        internalType: 'contract IMailbox',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'metadata',
        type: 'bytes',
      },
      {
        internalType: 'bytes',
        name: 'message',
        type: 'bytes',
      },
    ],
    name: 'postDispatch',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'metadata',
        type: 'bytes',
      },
      {
        internalType: 'bytes',
        name: 'message',
        type: 'bytes',
      },
    ],
    name: 'quoteDispatch',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_hook',
        type: 'address',
      },
    ],
    name: 'setHook',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_destination',
        type: 'uint32',
      },
      {
        internalType: 'address',
        name: '_hook',
        type: 'address',
      },
    ],
    name: 'setHook',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint32',
            name: 'destination',
            type: 'uint32',
          },
          {
            internalType: 'address',
            name: 'hook',
            type: 'address',
          },
        ],
        internalType: 'struct DomainRoutingHook.HookConfig[]',
        name: 'configs',
        type: 'tuple[]',
      },
    ],
    name: 'setHooks',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_module',
        type: 'address',
      },
    ],
    name: 'setInterchainSecurityModule',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    name: 'supportsMetadata',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x60c06040523480156200001157600080fd5b50604051620017d2380380620017d28339810160408190526200003491620001a0565b818181806001600160a01b0381163b620000945760405162461bcd60e51b815260206004820152601e60248201527f4d61696c626f78436c69656e743a20696e76616c6964206d61696c626f780000604482015260640160405180910390fd5b6001600160a01b03821660808190526040805163234d8e3d60e21b81529051638d3638f4916004808201926020929091908290030181865afa158015620000df573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001059190620001d8565b63ffffffff1660a052620001193362000131565b506200012790508162000131565b5050505062000207565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b03811681146200019b57600080fd5b919050565b60008060408385031215620001b457600080fd5b620001bf8362000183565b9150620001cf6020840162000183565b90509250929050565b600060208284031215620001eb57600080fd5b815163ffffffff811681146200020057600080fd5b9392505050565b60805160a0516115a56200022d60003960006102aa0152600061040501526115a56000f3fe6080604052600436106101445760003560e01c80638da5cb5b116100c0578063d5438eae11610074578063e445e7dd11610059578063e445e7dd14610454578063e5320bb914610470578063f2fde38b146104a057600080fd5b8063d5438eae146103f3578063de523cf31461042757600080fd5b8063aaccd230116100a5578063aaccd23014610362578063b646f64c14610390578063b6add9b6146103d357600080fd5b80638da5cb5b146102e157806393c448471461030c57600080fd5b8063715018a6116101175780637f5a7c7b116100fc5780637f5a7c7b1461024b578063843cb363146102785780638d3638f41461029857600080fd5b8063715018a61461021657806376f9d6c71461022b57600080fd5b8063086011b9146101495780630e72cc061461015e5780631e42f41d1461017e5780633dfd3873146101f6575b600080fd5b61015c6101573660046110c0565b6104c0565b005b34801561016a57600080fd5b5061015c610179366004611155565b61056d565b34801561018a57600080fd5b506101cc610199366004611184565b609860209081526000928352604080842090915290825290205473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b34801561020257600080fd5b5061015c610211366004611155565b6106b6565b34801561022257600080fd5b5061015c6107f7565b34801561023757600080fd5b5061015c6102463660046111ae565b61080b565b34801561025757600080fd5b506065546101cc9073ffffffffffffffffffffffffffffffffffffffff1681565b34801561028457600080fd5b5061015c6102933660046111e1565b61086e565b3480156102a457600080fd5b506102cc7f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020016101ed565b3480156102ed57600080fd5b5060335473ffffffffffffffffffffffffffffffffffffffff166101cc565b34801561031857600080fd5b506103556040518060400160405280600581526020017f372e312e3400000000000000000000000000000000000000000000000000000081525081565b6040516101ed919061127a565b34801561036e57600080fd5b5061038261037d3660046110c0565b6108e3565b6040519081526020016101ed565b34801561039c57600080fd5b506101cc6103ab3660046112cb565b60976020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b3480156103df57600080fd5b5061015c6103ee3660046112e6565b610990565b3480156103ff57600080fd5b506101cc7f000000000000000000000000000000000000000000000000000000000000000081565b34801561043357600080fd5b506066546101cc9073ffffffffffffffffffffffffffffffffffffffff1681565b34801561046057600080fd5b50604051600181526020016101ed565b34801561047c57600080fd5b5061049061048b366004611322565b6109fd565b60405190151581526020016101ed565b3480156104ac57600080fd5b5061015c6104bb366004611155565b610a06565b6104ca84846109fd565b61055b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603260248201527f4162737472616374506f73744469737061746368486f6f6b3a20696e76616c6960448201527f64206d657461646174612076617269616e74000000000000000000000000000060648201526084015b60405180910390fd5b61056784848484610abd565b50505050565b8073ffffffffffffffffffffffffffffffffffffffff81163b1515806105a7575073ffffffffffffffffffffffffffffffffffffffff8116155b610633576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f4d61696c626f78436c69656e743a20696e76616c696420636f6e74726163742060448201527f73657474696e67000000000000000000000000000000000000000000000000006064820152608401610552565b61063b610bc6565b606680547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff84169081179091556040519081527fc47cbcc588c67679e52261c45cc315e56562f8d0ccaba16facb9093ff9498799906020015b60405180910390a15050565b8073ffffffffffffffffffffffffffffffffffffffff81163b1515806106f0575073ffffffffffffffffffffffffffffffffffffffff8116155b61077c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f4d61696c626f78436c69656e743a20696e76616c696420636f6e74726163742060448201527f73657474696e67000000000000000000000000000000000000000000000000006064820152608401610552565b610784610bc6565b606580547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff84169081179091556040519081527f4eab7b127c764308788622363ad3e9532de3dfba7845bd4f84c125a22544255a906020016106aa565b6107ff610bc6565b6108096000610c47565b565b610813610bc6565b63ffffffff91909116600090815260976020526040902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909216919091179055565b610876610bc6565b60005b818110156108de576108d683838381811061089657610896611364565b6108ac92602060409092020190810191506112cb565b8484848181106108be576108be611364565b90506040020160200160208101906102469190611155565b600101610879565b505050565b60006108ef85856109fd565b61097b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603260248201527f4162737472616374506f73744469737061746368486f6f6b3a20696e76616c6960448201527f64206d657461646174612076617269616e7400000000000000000000000000006064820152608401610552565b61098785858585610cbe565b95945050505050565b610998610bc6565b63ffffffff9290921660009081526098602090815260408083209383529290522080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909216919091179055565b60015b92915050565b610a0e610bc6565b73ffffffffffffffffffffffffffffffffffffffff8116610ab1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610552565b610aba81610c47565b50565b600060986000610acd8585610d49565b63ffffffff1663ffffffff1681526020019081526020016000206000610af38585610d6c565b815260208101919091526040016000205473ffffffffffffffffffffffffffffffffffffffff1690508015610bb3576040517f086011b900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82169063086011b9903490610b7c9089908990899089906004016113dc565b6000604051808303818588803b158015610b9557600080fd5b505af1158015610ba9573d6000803e3d6000fd5b5050505050610bbf565b610bbf85858585610d8c565b5050505050565b60335473ffffffffffffffffffffffffffffffffffffffff163314610809576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610552565b6033805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000610cca8383610e0d565b73ffffffffffffffffffffffffffffffffffffffff1663aaccd230868686866040518563ffffffff1660e01b8152600401610d0894939291906113dc565b602060405180830381865afa158015610d25573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610987919061140e565b6000610d59602d60298486611427565b610d6291611451565b60e01c9392505050565b6000610d7c604d602d8486611427565b610d8591611499565b9392505050565b610d968282610e0d565b73ffffffffffffffffffffffffffffffffffffffff1663086011b934868686866040518663ffffffff1660e01b8152600401610dd594939291906113dc565b6000604051808303818588803b158015610dee57600080fd5b505af1158015610e02573d6000803e3d6000fd5b505050505050505050565b600060976000610e1d8585610d49565b63ffffffff16815260208101919091526040016000205473ffffffffffffffffffffffffffffffffffffffff16905080610a0057610e69610e5e8484610d49565b63ffffffff16610ed7565b604051602001610e7991906114d5565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290527f08c379a00000000000000000000000000000000000000000000000000000000082526105529160040161127a565b60606000610ee483610f95565b600101905060008167ffffffffffffffff811115610f0457610f04611540565b6040519080825280601f01601f191660200182016040528015610f2e576020820181803683370190505b5090508181016020015b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8504945084610f3857509392505050565b6000807a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310610fde577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef8100000000831061100a576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061102857662386f26fc10000830492506010015b6305f5e1008310611040576305f5e100830492506008015b612710831061105457612710830492506004015b60648310611066576064830492506002015b600a8310610a005760010192915050565b60008083601f84011261108957600080fd5b50813567ffffffffffffffff8111156110a157600080fd5b6020830191508360208285010111156110b957600080fd5b9250929050565b600080600080604085870312156110d657600080fd5b843567ffffffffffffffff808211156110ee57600080fd5b6110fa88838901611077565b9096509450602087013591508082111561111357600080fd5b5061112087828801611077565b95989497509550505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461115057600080fd5b919050565b60006020828403121561116757600080fd5b610d858261112c565b803563ffffffff8116811461115057600080fd5b6000806040838503121561119757600080fd5b6111a083611170565b946020939093013593505050565b600080604083850312156111c157600080fd5b6111ca83611170565b91506111d86020840161112c565b90509250929050565b600080602083850312156111f457600080fd5b823567ffffffffffffffff8082111561120c57600080fd5b818501915085601f83011261122057600080fd5b81358181111561122f57600080fd5b8660208260061b850101111561124457600080fd5b60209290920196919550909350505050565b60005b83811015611271578181015183820152602001611259565b50506000910152565b6020815260008251806020840152611299816040850160208701611256565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b6000602082840312156112dd57600080fd5b610d8582611170565b6000806000606084860312156112fb57600080fd5b61130484611170565b9250602084013591506113196040850161112c565b90509250925092565b6000806020838503121561133557600080fd5b823567ffffffffffffffff81111561134c57600080fd5b61135885828601611077565b90969095509350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b6040815260006113f0604083018688611393565b8281036020840152611403818587611393565b979650505050505050565b60006020828403121561142057600080fd5b5051919050565b6000808585111561143757600080fd5b8386111561144457600080fd5b5050820193919092039150565b7fffffffff0000000000000000000000000000000000000000000000000000000081358181169160048510156114915780818660040360031b1b83161692505b505092915050565b80356020831015610a00577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff602084900360031b1b1692915050565b7f4e6f20686f6f6b20636f6e6669677572656420666f722064657374696e61746981527f6f6e3a2000000000000000000000000000000000000000000000000000000000602082015260008251611533816024850160208701611256565b9190910160240192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea2646970667358221220bd0314c451815a20e2f91c4eb55b827783a721e78a3ed704d5ef2e4af3d2448c64736f6c63430008160033';

type DestinationRecipientRoutingHookConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DestinationRecipientRoutingHookConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DestinationRecipientRoutingHook__factory extends ContractFactory {
  constructor(...args: DestinationRecipientRoutingHookConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    mailbox: string,
    owner: string,
    overrides?: Overrides & { from?: string },
  ): Promise<DestinationRecipientRoutingHook> {
    return super.deploy(
      mailbox,
      owner,
      overrides || {},
    ) as Promise<DestinationRecipientRoutingHook>;
  }
  override getDeployTransaction(
    mailbox: string,
    owner: string,
    overrides?: Overrides & { from?: string },
  ): TransactionRequest {
    return super.getDeployTransaction(mailbox, owner, overrides || {});
  }
  override attach(address: string): DestinationRecipientRoutingHook {
    return super.attach(address) as DestinationRecipientRoutingHook;
  }
  override connect(signer: Signer): DestinationRecipientRoutingHook__factory {
    return super.connect(signer) as DestinationRecipientRoutingHook__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DestinationRecipientRoutingHookInterface {
    return new utils.Interface(
      _abi,
    ) as DestinationRecipientRoutingHookInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): DestinationRecipientRoutingHook {
    return new Contract(
      address,
      _abi,
      signerOrProvider,
    ) as DestinationRecipientRoutingHook;
  }
}
