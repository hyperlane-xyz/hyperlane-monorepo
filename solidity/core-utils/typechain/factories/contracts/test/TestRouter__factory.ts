/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import { Contract, ContractFactory, Overrides, Signer, utils } from 'ethers';

import type {
  TestRouter,
  TestRouterInterface,
} from '../../../contracts/test/TestRouter.js';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_mailbox',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: '_hook',
        type: 'address',
      },
    ],
    name: 'HookSet',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [],
    name: 'InitializeOverload',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint8',
        name: 'version',
        type: 'uint8',
      },
    ],
    name: 'Initialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: '_ism',
        type: 'address',
      },
    ],
    name: 'IsmSet',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    inputs: [],
    name: 'PACKAGE_VERSION',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_destination',
        type: 'uint32',
      },
      {
        internalType: 'bytes',
        name: '_msg',
        type: 'bytes',
      },
    ],
    name: 'dispatch',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'domains',
    outputs: [
      {
        internalType: 'uint32[]',
        name: '',
        type: 'uint32[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_domain',
        type: 'uint32',
      },
      {
        internalType: 'bytes32',
        name: '_router',
        type: 'bytes32',
      },
    ],
    name: 'enrollRemoteRouter',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32[]',
        name: '_domains',
        type: 'uint32[]',
      },
      {
        internalType: 'bytes32[]',
        name: '_addresses',
        type: 'bytes32[]',
      },
    ],
    name: 'enrollRemoteRouters',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_origin',
        type: 'uint32',
      },
      {
        internalType: 'bytes32',
        name: '_sender',
        type: 'bytes32',
      },
      {
        internalType: 'bytes',
        name: '_message',
        type: 'bytes',
      },
    ],
    name: 'handle',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'hook',
    outputs: [
      {
        internalType: 'contract IPostDispatchHook',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_hook',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_interchainSecurityModule',
        type: 'address',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'interchainSecurityModule',
    outputs: [
      {
        internalType: 'contract IInterchainSecurityModule',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_domain',
        type: 'uint32',
      },
      {
        internalType: 'bytes32',
        name: '_potentialRemoteRouter',
        type: 'bytes32',
      },
    ],
    name: 'isRemoteRouter',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'localDomain',
    outputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'mailbox',
    outputs: [
      {
        internalType: 'contract IMailbox',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_domain',
        type: 'uint32',
      },
    ],
    name: 'mustHaveRemoteRouter',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_domain',
        type: 'uint32',
      },
    ],
    name: 'routers',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_hook',
        type: 'address',
      },
    ],
    name: 'setHook',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_module',
        type: 'address',
      },
    ],
    name: 'setInterchainSecurityModule',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_domain',
        type: 'uint32',
      },
    ],
    name: 'unenrollRemoteRouter',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32[]',
        name: '_domains',
        type: 'uint32[]',
      },
    ],
    name: 'unenrollRemoteRouters',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x60c06040523480156200001157600080fd5b5060405162001f0838038062001f08833981016040819052620000349162000174565b8080806001600160a01b0381163b620000935760405162461bcd60e51b815260206004820152601e60248201527f4d61696c626f78436c69656e743a20696e76616c6964206d61696c626f780000604482015260640160405180910390fd5b6001600160a01b03821660808190526040805163234d8e3d60e21b81529051638d3638f4916004808201926020929091908290030181865afa158015620000de573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001049190620001a6565b63ffffffff1660a052620001183362000122565b50505050620001ce565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000602082840312156200018757600080fd5b81516001600160a01b03811681146200019f57600080fd5b9392505050565b600060208284031215620001b957600080fd5b815163ffffffff811681146200019f57600080fd5b60805160a051611d0662000202600039600061033501526000818161041f01528181610960015261123f0152611d066000f3fe60806040526004361061016a5760003560e01c80637249609f116100cb578063b49c53a71161007f578063e9198bf911610059578063e9198bf91461046e578063efae508a1461048e578063f2fde38b146104ae57600080fd5b8063b49c53a7146103ed578063d5438eae1461040d578063de523cf31461044157600080fd5b80638d3638f4116100b05780638d3638f4146103235780638da5cb5b1461036c57806393c448471461039757600080fd5b80637249609f146102be5780637f5a7c7b146102d157600080fd5b8063440df4f41161012257806356d5d4751161010757806356d5d47514610276578063715018a61461028957806371a15b381461029e57600080fd5b8063440df4f414610234578063485cc9551461025657600080fd5b80632e6a9e4b116101535780632e6a9e4b146101c45780632ead72f6146101f45780633dfd38731461021457600080fd5b80630e72cc061461016f578063133b79a914610191575b600080fd5b34801561017b57600080fd5b5061018f61018a366004611764565b6104ce565b005b34801561019d57600080fd5b506101b16101ac366004611793565b61061c565b6040519081526020015b60405180910390f35b3480156101d057600080fd5b506101e46101df3660046117ae565b61062d565b60405190151581526020016101bb565b34801561020057600080fd5b506101b161020f366004611793565b610640565b34801561022057600080fd5b5061018f61022f366004611764565b61065f565b34801561024057600080fd5b506102496107a0565b6040516101bb91906117d8565b34801561026257600080fd5b5061018f610271366004611822565b6107b1565b61018f610284366004611855565b610948565b34801561029557600080fd5b5061018f610ab0565b3480156102aa57600080fd5b5061018f6102b9366004611921565b610ac4565b61018f6102cc366004611992565b610b1f565b3480156102dd57600080fd5b506065546102fe9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101bb565b34801561032f57600080fd5b506103577f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020016101bb565b34801561037857600080fd5b5060335473ffffffffffffffffffffffffffffffffffffffff166102fe565b3480156103a357600080fd5b506103e06040518060400160405280600581526020017f372e312e3400000000000000000000000000000000000000000000000000000081525081565b6040516101bb9190611ae0565b3480156103f957600080fd5b5061018f6104083660046117ae565b610b29565b34801561041957600080fd5b506102fe7f000000000000000000000000000000000000000000000000000000000000000081565b34801561044d57600080fd5b506066546102fe9073ffffffffffffffffffffffffffffffffffffffff1681565b34801561047a57600080fd5b5061018f610489366004611af3565b610b3f565b34801561049a57600080fd5b5061018f6104a9366004611793565b610c1e565b3480156104ba57600080fd5b5061018f6104c9366004611764565b610c32565b8073ffffffffffffffffffffffffffffffffffffffff81163b151580610508575073ffffffffffffffffffffffffffffffffffffffff8116155b610599576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f4d61696c626f78436c69656e743a20696e76616c696420636f6e74726163742060448201527f73657474696e670000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6105a1610ce6565b606680547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff84169081179091556040519081527fc47cbcc588c67679e52261c45cc315e56562f8d0ccaba16facb9093ff9498799906020015b60405180910390a15050565b600061062782610d67565b92915050565b60006106398383610dcc565b9392505050565b600080610657609763ffffffff80861690610de016565b949350505050565b8073ffffffffffffffffffffffffffffffffffffffff81163b151580610699575073ffffffffffffffffffffffffffffffffffffffff8116155b610725576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f4d61696c626f78436c69656e743a20696e76616c696420636f6e74726163742060448201527f73657474696e67000000000000000000000000000000000000000000000000006064820152608401610590565b61072d610ce6565b606580547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff84169081179091556040519081527f4eab7b127c764308788622363ad3e9532de3dfba7845bd4f84c125a22544255a90602001610610565b60606107ac6097610df9565b905090565b600054610100900460ff16158080156107d15750600054600160ff909116105b806107eb5750303b1580156107eb575060005460ff166001145b610877576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152608401610590565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600117905580156108d557600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b6108e0838333610eaa565b801561094357600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610a0d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f4d61696c626f78436c69656e743a2073656e646572206e6f74206d61696c626f60448201527f78000000000000000000000000000000000000000000000000000000000000006064820152608401610590565b6000610a1885610d67565b9050838114610aa9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f456e726f6c6c656420726f7574657220646f6573206e6f74206d61746368207360448201527f656e6465720000000000000000000000000000000000000000000000000000006064820152608401610590565b5050505050565b610ab8610ce6565b610ac26000610f60565b565b610acc610ce6565b8060005b81811015610b1957610b07848483818110610aed57610aed611b5f565b9050602002016020810190610b029190611793565b610fd7565b610b12600182611bbd565b9050610ad0565b50505050565b610943828261102c565b610b31610ce6565b610b3b828261106c565b5050565b610b47610ce6565b828114610bb0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600760248201527f216c656e677468000000000000000000000000000000000000000000000000006044820152606401610590565b8260005b81811015610c1657610c04868683818110610bd157610bd1611b5f565b9050602002016020810190610be69190611793565b858584818110610bf857610bf8611b5f565b9050602002013561106c565b610c0f600182611bbd565b9050610bb4565b505050505050565b610c26610ce6565b610c2f81610fd7565b50565b610c3a610ce6565b73ffffffffffffffffffffffffffffffffffffffff8116610cdd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610590565b610c2f81610f60565b60335473ffffffffffffffffffffffffffffffffffffffff163314610ac2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610590565b60008080610d7f609763ffffffff80871690610de016565b915091508115610d90579392505050565b610d9984611082565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105909190611ae0565b600081610dd884610640565b149392505050565b600080610ded84846110b9565b915091505b9250929050565b60606000610e06836110f3565b9050805167ffffffffffffffff811115610e2257610e22611963565b604051908082528060200260200182016040528015610e4b578160200160208202803683370190505b50915060005b8151811015610ea357818181518110610e6c57610e6c611b5f565b6020026020010151838281518110610e8657610e86611b5f565b63ffffffff90921660209283029190910190910152600101610e51565b5050919050565b600054610100900460ff16610f41576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610590565b610f49611184565b610f528361065f565b610f5b826104ce565b610943815b6033805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610feb609763ffffffff8084169061122316565b610ff482611082565b90610b3b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105909190611ae0565b600061063983348460405180602001604052806000815250606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661122f565b610b3b609763ffffffff8085169084906112ed16565b60606110938263ffffffff166112f8565b6040516020016110a39190611bd0565b6040516020818303038152906040529050919050565b60008181526002830160205260408120548190806110e8576110db85856113b6565b925060009150610df29050565b600192509050610df2565b60606000611100836113c2565b90508067ffffffffffffffff81111561111b5761111b611963565b604051908082528060200260200182016040528015611144578160200160208202803683370190505b50915060005b81811015610ea35761115c84826113cd565b60001c83828151811061117157611171611b5f565b602090810291909101015260010161114a565b600054610100900460ff1661121b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610590565b610ac26113d9565b60006106398383611479565b60008061123b87610d67565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166310b83dc08789848989896040518763ffffffff1660e01b815260040161129f959493929190611c15565b60206040518083038185885af11580156112bd573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906112e29190611c75565b979650505050505050565b610b19838383611496565b60606000611305836114b3565b600101905060008167ffffffffffffffff81111561132557611325611963565b6040519080825280601f01601f19166020018201604052801561134f576020820181803683370190505b5090508181016020015b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a850494508461135957509392505050565b60006106398383611595565b6000610627826115ad565b600061063983836115b7565b600054610100900460ff16611470576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610590565b610ac233610f60565b6000818152600283016020526040812081905561063983836115e1565b6000828152600284016020526040812082905561065784846115ed565b6000807a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106114fc577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef81000000008310611528576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061154657662386f26fc10000830492506010015b6305f5e100831061155e576305f5e100830492506008015b612710831061157257612710830492506004015b60648310611584576064830492506002015b600a83106106275760010192915050565b60008181526001830160205260408120541515610639565b6000610627825490565b60008260000182815481106115ce576115ce611b5f565b9060005260206000200154905092915050565b600061063983836115f9565b600061063983836116ec565b600081815260018301602052604081205480156116e257600061161d600183611c8e565b855490915060009061163190600190611c8e565b905081811461169657600086600001828154811061165157611651611b5f565b906000526020600020015490508087600001848154811061167457611674611b5f565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806116a7576116a7611ca1565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610627565b6000915050610627565b600081815260018301602052604081205461173357508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610627565b506000610627565b803573ffffffffffffffffffffffffffffffffffffffff8116811461175f57600080fd5b919050565b60006020828403121561177657600080fd5b6106398261173b565b803563ffffffff8116811461175f57600080fd5b6000602082840312156117a557600080fd5b6106398261177f565b600080604083850312156117c157600080fd5b6117ca8361177f565b946020939093013593505050565b6020808252825182820181905260009190848201906040850190845b8181101561181657835163ffffffff16835292840192918401916001016117f4565b50909695505050505050565b6000806040838503121561183557600080fd5b61183e8361173b565b915061184c6020840161173b565b90509250929050565b6000806000806060858703121561186b57600080fd5b6118748561177f565b935060208501359250604085013567ffffffffffffffff8082111561189857600080fd5b818701915087601f8301126118ac57600080fd5b8135818111156118bb57600080fd5b8860208285010111156118cd57600080fd5b95989497505060200194505050565b60008083601f8401126118ee57600080fd5b50813567ffffffffffffffff81111561190657600080fd5b6020830191508360208260051b8501011115610df257600080fd5b6000806020838503121561193457600080fd5b823567ffffffffffffffff81111561194b57600080fd5b611957858286016118dc565b90969095509350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080604083850312156119a557600080fd5b6119ae8361177f565b9150602083013567ffffffffffffffff808211156119cb57600080fd5b818501915085601f8301126119df57600080fd5b8135818111156119f1576119f1611963565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908382118183101715611a3757611a37611963565b81604052828152886020848701011115611a5057600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60005b83811015611a8d578181015183820152602001611a75565b50506000910152565b60008151808452611aae816020860160208601611a72565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006106396020830184611a96565b60008060008060408587031215611b0957600080fd5b843567ffffffffffffffff80821115611b2157600080fd5b611b2d888389016118dc565b90965094506020870135915080821115611b4657600080fd5b50611b53878288016118dc565b95989497509550505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8082018082111561062757610627611b8e565b7f4e6f20726f7574657220656e726f6c6c656420666f7220646f6d61696e3a2000815260008251611c0881601f850160208701611a72565b91909101601f0192915050565b63ffffffff8616815284602082015260a060408201526000611c3a60a0830186611a96565b8281036060840152611c4c8186611a96565b91505073ffffffffffffffffffffffffffffffffffffffff831660808301529695505050505050565b600060208284031215611c8757600080fd5b5051919050565b8181038181111561062757610627611b8e565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea264697066735822122082e2914f1a89f4477a9d9adf6c41b2f8607174f48c2e1573e64099922338589a64736f6c63430008160033';

type TestRouterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestRouterConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestRouter__factory extends ContractFactory {
  constructor(...args: TestRouterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _mailbox: string,
    overrides?: Overrides & { from?: string },
  ): Promise<TestRouter> {
    return super.deploy(_mailbox, overrides || {}) as Promise<TestRouter>;
  }
  override getDeployTransaction(
    _mailbox: string,
    overrides?: Overrides & { from?: string },
  ): TransactionRequest {
    return super.getDeployTransaction(_mailbox, overrides || {});
  }
  override attach(address: string): TestRouter {
    return super.attach(address) as TestRouter;
  }
  override connect(signer: Signer): TestRouter__factory {
    return super.connect(signer) as TestRouter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestRouterInterface {
    return new utils.Interface(_abi) as TestRouterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): TestRouter {
    return new Contract(address, _abi, signerOrProvider) as TestRouter;
  }
}
