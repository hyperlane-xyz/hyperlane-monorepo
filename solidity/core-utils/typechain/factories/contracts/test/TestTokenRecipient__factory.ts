/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import { Contract, ContractFactory, Overrides, Signer, utils } from 'ethers';

import type {
  TestTokenRecipient,
  TestTokenRecipientInterface,
} from '../../../contracts/test/TestTokenRecipient.js';

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'caller',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'message',
        type: 'string',
      },
    ],
    name: 'ReceivedCall',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint32',
        name: 'origin',
        type: 'uint32',
      },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'sender',
        type: 'bytes32',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'message',
        type: 'string',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'ReceivedMessage',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'string',
        name: 'message',
        type: 'string',
      },
    ],
    name: 'fooBar',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_origin',
        type: 'uint32',
      },
      {
        internalType: 'bytes32',
        name: '_sender',
        type: 'bytes32',
      },
      {
        internalType: 'bytes',
        name: '_data',
        type: 'bytes',
      },
      {
        internalType: 'address',
        name: '_token',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_amount',
        type: 'uint256',
      },
    ],
    name: 'handleWithTokens',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'lastAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'lastCallMessage',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'lastCaller',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'lastData',
    outputs: [
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'lastSender',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'lastToken',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x608060405234801561001057600080fd5b506107ae806100206000396000f3fe608060405234801561001057600080fd5b50600436106100875760003560e01c8063352e7eff1161005b578063352e7eff14610126578063829a86d91461013b578063a4982fde14610144578063f07c1f471461014c57600080fd5b80626e75ec1461008c5780632113522a146100aa578063256fec88146100ef5780632f796f5014610106575b600080fd5b61009461015f565b6040516100a19190610394565b60405180910390f35b6004546100ca9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100a1565b6100f860005481565b6040519081526020016100a1565b6002546100ca9073ffffffffffffffffffffffffffffffffffffffff1681565b6101396101343660046103f7565b6101ed565b005b6100f860035481565b610094610294565b61013961015a366004610495565b6102a1565b6001805461016c906104e1565b80601f0160208091040260200160405190810160405280929190818152602001828054610198906104e1565b80156101e55780601f106101ba576101008083540402835291602001916101e5565b820191906000526020600020905b8154815290600101906020018083116101c857829003601f168201915b505050505081565b848663ffffffff167fb2d1d3f10ca4f0ff536aa13affafdca6f4d95b031fa3b1856fb722a27e8ee0438686868660405161022a949392919061057d565b60405180910390a36000859055600161024484868361063a565b50600280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff939093169290921790915560035550505050565b6005805461016c906104e1565b3373ffffffffffffffffffffffffffffffffffffffff167f97d8367a1f39eb9e97f262fafbb05925c0bcfe120aaad7b9737cae34f749c2068484846040516102eb93929190610755565b60405180910390a2600480547fffffffffffffffffffffffff00000000000000000000000000000000000000001633179055600561032a82848361063a565b50505050565b6000815180845260005b818110156103565760208185018101518683018201520161033a565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b6020815260006103a76020830184610330565b9392505050565b60008083601f8401126103c057600080fd5b50813567ffffffffffffffff8111156103d857600080fd5b6020830191508360208285010111156103f057600080fd5b9250929050565b60008060008060008060a0878903121561041057600080fd5b863563ffffffff8116811461042457600080fd5b955060208701359450604087013567ffffffffffffffff81111561044757600080fd5b61045389828a016103ae565b909550935050606087013573ffffffffffffffffffffffffffffffffffffffff8116811461048057600080fd5b80925050608087013590509295509295509295565b6000806000604084860312156104aa57600080fd5b83359250602084013567ffffffffffffffff8111156104c857600080fd5b6104d4868287016103ae565b9497909650939450505050565b600181811c908216806104f557607f821691505b60208210810361052e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b606081526000610591606083018688610534565b73ffffffffffffffffffffffffffffffffffffffff949094166020830152506040015292915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b601f821115610635576000816000526020600020601f850160051c810160208610156106125750805b601f850160051c820191505b818110156106315782815560010161061e565b5050505b505050565b67ffffffffffffffff831115610652576106526105ba565b6106668361066083546104e1565b836105e9565b6000601f8411600181146106b857600085156106825750838201355b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600387901b1c1916600186901b17835561074e565b6000838152602090207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0861690835b8281101561070757868501358255602094850194600190920191016106e7565b5086821015610742577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b83815260406020820152600061076f604083018486610534565b9594505050505056fea264697066735822122085678bf1534360bcf2c103004ce37539e999e3673899f986e0129aac080c6ec164736f6c63430008160033';

type TestTokenRecipientConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestTokenRecipientConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestTokenRecipient__factory extends ContractFactory {
  constructor(...args: TestTokenRecipientConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string },
  ): Promise<TestTokenRecipient> {
    return super.deploy(overrides || {}) as Promise<TestTokenRecipient>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string },
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TestTokenRecipient {
    return super.attach(address) as TestTokenRecipient;
  }
  override connect(signer: Signer): TestTokenRecipient__factory {
    return super.connect(signer) as TestTokenRecipient__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestTokenRecipientInterface {
    return new utils.Interface(_abi) as TestTokenRecipientInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): TestTokenRecipient {
    return new Contract(address, _abi, signerOrProvider) as TestTokenRecipient;
  }
}
