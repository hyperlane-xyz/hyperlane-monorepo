/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import {
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
  Signer,
  utils,
} from 'ethers';

import type {
  TestMailbox,
  TestMailboxInterface,
} from '../../../contracts/test/TestMailbox.js';

const _abi = [
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_localDomain',
        type: 'uint32',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'hook',
        type: 'address',
      },
    ],
    name: 'DefaultHookSet',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'module',
        type: 'address',
      },
    ],
    name: 'DefaultIsmSet',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint32',
        name: 'destination',
        type: 'uint32',
      },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'recipient',
        type: 'bytes32',
      },
      {
        indexed: false,
        internalType: 'bytes',
        name: 'message',
        type: 'bytes',
      },
    ],
    name: 'Dispatch',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'messageId',
        type: 'bytes32',
      },
    ],
    name: 'DispatchId',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint8',
        name: 'version',
        type: 'uint8',
      },
    ],
    name: 'Initialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint32',
        name: 'origin',
        type: 'uint32',
      },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'sender',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'recipient',
        type: 'address',
      },
    ],
    name: 'Process',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'messageId',
        type: 'bytes32',
      },
    ],
    name: 'ProcessId',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'hook',
        type: 'address',
      },
    ],
    name: 'RequiredHookSet',
    type: 'event',
  },
  {
    inputs: [],
    name: 'PACKAGE_VERSION',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'VERSION',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'originDomain',
        type: 'uint32',
      },
      {
        internalType: 'bytes32',
        name: 'recipientAddress',
        type: 'bytes32',
      },
      {
        internalType: 'bytes32',
        name: 'senderAddress',
        type: 'bytes32',
      },
      {
        internalType: 'bytes',
        name: 'body',
        type: 'bytes',
      },
    ],
    name: 'buildInboundMessage',
    outputs: [
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'destinationDomain',
        type: 'uint32',
      },
      {
        internalType: 'bytes32',
        name: 'recipientAddress',
        type: 'bytes32',
      },
      {
        internalType: 'bytes',
        name: 'body',
        type: 'bytes',
      },
    ],
    name: 'buildOutboundMessage',
    outputs: [
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultHook',
    outputs: [
      {
        internalType: 'contract IPostDispatchHook',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultIsm',
    outputs: [
      {
        internalType: 'contract IInterchainSecurityModule',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: '_id',
        type: 'bytes32',
      },
    ],
    name: 'delivered',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'deployedBlock',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'destinationDomain',
        type: 'uint32',
      },
      {
        internalType: 'bytes32',
        name: 'recipientAddress',
        type: 'bytes32',
      },
      {
        internalType: 'bytes',
        name: 'messageBody',
        type: 'bytes',
      },
      {
        internalType: 'bytes',
        name: 'metadata',
        type: 'bytes',
      },
      {
        internalType: 'contract IPostDispatchHook',
        name: 'hook',
        type: 'address',
      },
    ],
    name: 'dispatch',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'destinationDomain',
        type: 'uint32',
      },
      {
        internalType: 'bytes32',
        name: 'recipientAddress',
        type: 'bytes32',
      },
      {
        internalType: 'bytes',
        name: 'messageBody',
        type: 'bytes',
      },
      {
        internalType: 'bytes',
        name: 'hookMetadata',
        type: 'bytes',
      },
    ],
    name: 'dispatch',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_destinationDomain',
        type: 'uint32',
      },
      {
        internalType: 'bytes32',
        name: '_recipientAddress',
        type: 'bytes32',
      },
      {
        internalType: 'bytes',
        name: '_messageBody',
        type: 'bytes',
      },
    ],
    name: 'dispatch',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_owner',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_defaultIsm',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_defaultHook',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_requiredHook',
        type: 'address',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'latestDispatchedId',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'localDomain',
    outputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'nonce',
    outputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: '_metadata',
        type: 'bytes',
      },
      {
        internalType: 'bytes',
        name: '_message',
        type: 'bytes',
      },
    ],
    name: 'process',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: '_id',
        type: 'bytes32',
      },
    ],
    name: 'processedAt',
    outputs: [
      {
        internalType: 'uint48',
        name: '',
        type: 'uint48',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: '_id',
        type: 'bytes32',
      },
    ],
    name: 'processor',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'destinationDomain',
        type: 'uint32',
      },
      {
        internalType: 'bytes32',
        name: 'recipientAddress',
        type: 'bytes32',
      },
      {
        internalType: 'bytes',
        name: 'messageBody',
        type: 'bytes',
      },
      {
        internalType: 'bytes',
        name: 'metadata',
        type: 'bytes',
      },
      {
        internalType: 'contract IPostDispatchHook',
        name: 'hook',
        type: 'address',
      },
    ],
    name: 'quoteDispatch',
    outputs: [
      {
        internalType: 'uint256',
        name: 'fee',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'destinationDomain',
        type: 'uint32',
      },
      {
        internalType: 'bytes32',
        name: 'recipientAddress',
        type: 'bytes32',
      },
      {
        internalType: 'bytes',
        name: 'messageBody',
        type: 'bytes',
      },
    ],
    name: 'quoteDispatch',
    outputs: [
      {
        internalType: 'uint256',
        name: 'fee',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'destinationDomain',
        type: 'uint32',
      },
      {
        internalType: 'bytes32',
        name: 'recipientAddress',
        type: 'bytes32',
      },
      {
        internalType: 'bytes',
        name: 'messageBody',
        type: 'bytes',
      },
      {
        internalType: 'bytes',
        name: 'defaultHookMetadata',
        type: 'bytes',
      },
    ],
    name: 'quoteDispatch',
    outputs: [
      {
        internalType: 'uint256',
        name: 'fee',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_recipient',
        type: 'address',
      },
    ],
    name: 'recipientIsm',
    outputs: [
      {
        internalType: 'contract IInterchainSecurityModule',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'requiredHook',
    outputs: [
      {
        internalType: 'contract IPostDispatchHook',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_hook',
        type: 'address',
      },
    ],
    name: 'setDefaultHook',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_module',
        type: 'address',
      },
    ],
    name: 'setDefaultIsm',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_hook',
        type: 'address',
      },
    ],
    name: 'setRequiredHook',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_origin',
        type: 'uint32',
      },
      {
        internalType: 'bytes32',
        name: '_sender',
        type: 'bytes32',
      },
      {
        internalType: 'bytes32',
        name: '_recipient',
        type: 'bytes32',
      },
      {
        internalType: 'bytes',
        name: '_body',
        type: 'bytes',
      },
    ],
    name: 'testHandle',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: '_id',
        type: 'bytes32',
      },
    ],
    name: 'updateLatestDispatchedId',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x60c06040523480156200001157600080fd5b506040516200253f3803806200253f8339810160408190526200003491620000a6565b4360805263ffffffff811660a0526200004d3362000054565b50620000d5565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600060208284031215620000b957600080fd5b815163ffffffff81168114620000ce57600080fd5b9392505050565b60805160a05161242f620001106000396000818161046f01528181610bc601528181610c83015261198c0152600061043b015261242f6000f3fe6080604052600436106101d85760003560e01c80638d3638f411610102578063e495f1d411610095578063f7ccd32111610064578063f7ccd32114610683578063f8c8765e146106a3578063fa31de01146106c3578063ffa1ad74146106d657600080fd5b8063e495f1d4146105c4578063e70f48ac14610623578063f2fde38b14610643578063f794687a1461066357600080fd5b80639c42bd18116100d15780639c42bd181461053a578063affed0e01461055a578063d0639c1014610577578063d6d08a091461059757600080fd5b80638d3638f41461045d5780638da5cb5b146104a657806393c44847146104d157806399b048091461051a57600080fd5b80635d1fe5a91161017a578063715018a611610149578063715018a6146103e15780637c39d130146103f657806381d2ea951461040957806382ea7bfe1461042957600080fd5b80635d1fe5a9146103245780636093bbff146103675780636781759b146103875780636e5f516e146103b457600080fd5b8063134fbb4f116101b6578063134fbb4f146102895780631426b7f41461029f5780633d1250b7146102bf57806348aee8d41461031157600080fd5b806307a2fda1146101dd578063082548ec1461024657806310b83dc014610268575b600080fd5b3480156101e957600080fd5b5061022a6101f8366004611cec565b6000908152606a602052604090205474010000000000000000000000000000000000000000900465ffffffffffff1690565b60405165ffffffffffff90911681526020015b60405180910390f35b34801561025257600080fd5b50610266610261366004611d60565b6106fd565b005b61027b610276366004611dea565b61077d565b60405190815260200161023d565b34801561029557600080fd5b5061027b60665481565b3480156102ab57600080fd5b506102666102ba366004611e88565b610a51565b3480156102cb57600080fd5b506068546102ec9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161023d565b61027b61031f366004611ea5565b610b71565b34801561033057600080fd5b506102ec61033f366004611cec565b6000908152606a602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b34801561037357600080fd5b50610266610382366004611cec565b606655565b34801561039357600080fd5b506103a76103a2366004611d60565b610baf565b60405161023d9190611f9d565b3480156103c057600080fd5b506067546102ec9073ffffffffffffffffffffffffffffffffffffffff1681565b3480156103ed57600080fd5b50610266610bf7565b610266610404366004611fb0565b610c0b565b34801561041557600080fd5b5061027b610424366004611dea565b6110ad565b34801561043557600080fd5b5061027b7f000000000000000000000000000000000000000000000000000000000000000081565b34801561046957600080fd5b506104917f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff909116815260200161023d565b3480156104b257600080fd5b5060335473ffffffffffffffffffffffffffffffffffffffff166102ec565b3480156104dd57600080fd5b506103a76040518060400160405280600581526020017f372e312e3400000000000000000000000000000000000000000000000000000081525081565b34801561052657600080fd5b50610266610535366004611e88565b611240565b34801561054657600080fd5b5061027b61055536600461201c565b61135b565b34801561056657600080fd5b506065546104919063ffffffff1681565b34801561058357600080fd5b506103a761059236600461201c565b611397565b3480156105a357600080fd5b506069546102ec9073ffffffffffffffffffffffffffffffffffffffff1681565b3480156105d057600080fd5b506106136105df366004611cec565b6000908152606a602052604090205474010000000000000000000000000000000000000000900465ffffffffffff16151590565b604051901515815260200161023d565b34801561062f57600080fd5b506102ec61063e366004611e88565b6113a5565b34801561064f57600080fd5b5061026661065e366004611e88565b6114dc565b34801561066f57600080fd5b5061026661067e366004611e88565b611593565b34801561068f57600080fd5b5061027b61069e366004611ea5565b6116ae565b3480156106af57600080fd5b506102666106be36600461206a565b6116e1565b61027b6106d136600461201c565b61189b565b3480156106e257600080fd5b506106eb600381565b60405160ff909116815260200161023d565b610706836118ce565b73ffffffffffffffffffffffffffffffffffffffff166356d5d475868685856040518563ffffffff1660e01b8152600401610744949392919061210f565b600060405180830381600087803b15801561075e57600080fd5b505af1158015610772573d6000803e3d6000fd5b505050505050505050565b600073ffffffffffffffffffffffffffffffffffffffff82166107b65760685473ffffffffffffffffffffffffffffffffffffffff1691505b60006107c489898989611977565b805160208201206066819055606580549293509091600191906000906107f190849063ffffffff16612164565b92506101000a81548163ffffffff021916908363ffffffff160217905550888a63ffffffff163373ffffffffffffffffffffffffffffffffffffffff167f769f711d20c679153d382254f59892613b58a97cc876b249134ac25c80f9c8148560405161085d9190611f9d565b60405180910390a460405181907f788dbc1b7152732178210e7f4d9d010ef016f9eafbe66786bd7169f56e0c353a90600090a26069546040517faaccd23000000000000000000000000000000000000000000000000000000000815260009173ffffffffffffffffffffffffffffffffffffffff169063aaccd230906108eb908a908a908890600401612188565b602060405180830381865afa158015610908573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092c91906121ae565b9050803410156109395750345b6069546040517f086011b900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063086011b9908390610995908b908b908990600401612188565b6000604051808303818588803b1580156109ae57600080fd5b505af11580156109c2573d6000803e3d6000fd5b50505050508473ffffffffffffffffffffffffffffffffffffffff1663086011b982346109ef91906121c7565b8989876040518563ffffffff1660e01b8152600401610a1093929190612188565b6000604051808303818588803b158015610a2957600080fd5b505af1158015610a3d573d6000803e3d6000fd5b50949e9d5050505050505050505050505050565b610a596119c0565b73ffffffffffffffffffffffffffffffffffffffff81163b610b02576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f4d61696c626f783a20726571756972656420686f6f6b206e6f7420636f6e747260448201527f616374000000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b606980547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040517f329ec8e2438a73828ecf31a6568d7a91d7b1d79e342b0692914fd053d1a002b190600090a250565b6000610ba4878787878787606860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661077d565b979650505050505050565b606554606090610bed9060039063ffffffff1688877f00000000000000000000000000000000000000000000000000000000000000008a8989611a41565b9695505050505050565b610bff6119c0565b610c096000611a7f565b565b6003610c178383611af6565b60ff1614610c81576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f4d61696c626f783a206261642076657273696f6e0000000000000000000000006044820152606401610af9565b7f000000000000000000000000000000000000000000000000000000000000000063ffffffff16610cb28383611b1a565b63ffffffff1614610d1f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f4d61696c626f783a20756e65787065637465642064657374696e6174696f6e006044820152606401610af9565b6000610d6083838080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506119b592505050565b6000818152606a602052604090205490915074010000000000000000000000000000000000000000900465ffffffffffff1615610df9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f4d61696c626f783a20616c72656164792064656c6976657265640000000000006044820152606401610af9565b6000610e058484611b3d565b90506000610e12826113a5565b60408051808201825233815265ffffffffffff43811660208084019182526000898152606a9091529390932091518254935190911674010000000000000000000000000000000000000000027fffffffffffff000000000000000000000000000000000000000000000000000090931673ffffffffffffffffffffffffffffffffffffffff918216179290921790559091508216610eb08686611b58565b610eba8787611b71565b63ffffffff167f0d381c2a574ae8f04e213db7cfb4df8df712cdbd427d9868ffef380660ca657460405160405180910390a460405183907f1cae38cdd3d3919489272725a5ae62a4f48b2989b0dae843d3c279fee18073a990600090a26040517ff7e83aee00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82169063f7e83aee90610f6f908a908a908a908a906004016121da565b6020604051808303816000875af1158015610f8e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fb29190612201565b611018576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4d61696c626f783a2049534d20766572696669636174696f6e206661696c65646044820152606401610af9565b8173ffffffffffffffffffffffffffffffffffffffff166356d5d4753461103f8888611b71565b6110498989611b58565b6110538a8a611b81565b6040518663ffffffff1660e01b8152600401611072949392919061210f565b6000604051808303818588803b15801561108b57600080fd5b505af115801561109f573d6000803e3d6000fd5b505050505050505050505050565b600073ffffffffffffffffffffffffffffffffffffffff82166110e65760685473ffffffffffffffffffffffffffffffffffffffff1691505b60006110f489898989611977565b6040517faaccd23000000000000000000000000000000000000000000000000000000000815290915073ffffffffffffffffffffffffffffffffffffffff84169063aaccd2309061114d90889088908690600401612188565b602060405180830381865afa15801561116a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061118e91906121ae565b6069546040517faaccd23000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063aaccd230906111e890899089908790600401612188565b602060405180830381865afa158015611205573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061122991906121ae565b6112339190612223565b9998505050505050505050565b6112486119c0565b73ffffffffffffffffffffffffffffffffffffffff81163b6112ec576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f4d61696c626f783a2064656661756c7420686f6f6b206e6f7420636f6e74726160448201527f63740000000000000000000000000000000000000000000000000000000000006064820152608401610af9565b606880547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040517f65a63e5066ee2fcdf9d32a7f1bf7ce71c76066f19d0609dddccd334ab87237d790600090a250565b600061138e8585858561137086808385612236565b60685473ffffffffffffffffffffffffffffffffffffffff166110ad565b95945050505050565b606061138e85858585611977565b60408051600481526024810182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fde523cf30000000000000000000000000000000000000000000000000000000017905290516000918291829173ffffffffffffffffffffffffffffffffffffffff8616916114269190612260565b600060405180830381855afa9150503d8060008114611461576040519150601f19603f3d011682016040523d82523d6000602084013e611466565b606091505b50915091508180156114785750805115155b156114bb57600081806020019051810190611493919061227c565b905073ffffffffffffffffffffffffffffffffffffffff8116156114b957949350505050565b505b505060675473ffffffffffffffffffffffffffffffffffffffff1692915050565b6114e46119c0565b73ffffffffffffffffffffffffffffffffffffffff8116611587576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610af9565b61159081611a7f565b50565b61159b6119c0565b73ffffffffffffffffffffffffffffffffffffffff81163b61163f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f4d61696c626f783a2064656661756c742049534d206e6f7420636f6e7472616360448201527f74000000000000000000000000000000000000000000000000000000000000006064820152608401610af9565b606780547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040517fa76ad0adbf45318f8633aa0210f711273d50fbb6fef76ed95bbae97082c75daa90600090a250565b6000610ba4878787878787606860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166110ad565b600054610100900460ff16158080156117015750600054600160ff909116105b8061171b5750303b15801561171b575060005460ff166001145b6117a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152608401610af9565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055801561180557600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b61180d611b9d565b61181684611593565b61181f83611240565b61182882610a51565b611831856114dc565b801561189457600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050565b600061138e858585856118b086808385612236565b60685473ffffffffffffffffffffffffffffffffffffffff1661077d565b600073ffffffffffffffffffffffffffffffffffffffff821115611973576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f5479706543617374733a2062797465733332546f41646472657373206f76657260448201527f666c6f77000000000000000000000000000000000000000000000000000000006064820152608401610af9565b5090565b60655460609061138e9060039063ffffffff167f00000000000000000000000000000000000000000000000000000000000000003389898989611a41565b805160209091012090565b60335473ffffffffffffffffffffffffffffffffffffffff163314610c09576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610af9565b60608888888888888888604051602001611a62989796959493929190612299565b604051602081830303815290604052905098975050505050505050565b6033805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000611b056001828486612236565b611b0e9161232f565b60f81c90505b92915050565b6000611b2a602d60298486612236565b611b3391612377565b60e01c9392505050565b6000611b51611b4c8484611c3c565b6118ce565b9392505050565b6000611b68602960098486612236565b611b51916123bd565b6000611b2a600960058486612236565b366000611b9183604d8187612236565b915091505b9250929050565b600054610100900460ff16611c34576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610af9565b610c09611c4c565b6000611b68604d602d8486612236565b600054610100900460ff16611ce3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610af9565b610c0933611a7f565b600060208284031215611cfe57600080fd5b5035919050565b803563ffffffff81168114611d1957600080fd5b919050565b60008083601f840112611d3057600080fd5b50813567ffffffffffffffff811115611d4857600080fd5b602083019150836020828501011115611b9657600080fd5b600080600080600060808688031215611d7857600080fd5b611d8186611d05565b94506020860135935060408601359250606086013567ffffffffffffffff811115611dab57600080fd5b611db788828901611d1e565b969995985093965092949392505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461159057600080fd5b600080600080600080600060a0888a031215611e0557600080fd5b611e0e88611d05565b965060208801359550604088013567ffffffffffffffff80821115611e3257600080fd5b611e3e8b838c01611d1e565b909750955060608a0135915080821115611e5757600080fd5b50611e648a828b01611d1e565b9094509250506080880135611e7881611dc8565b8091505092959891949750929550565b600060208284031215611e9a57600080fd5b8135611b5181611dc8565b60008060008060008060808789031215611ebe57600080fd5b611ec787611d05565b955060208701359450604087013567ffffffffffffffff80821115611eeb57600080fd5b611ef78a838b01611d1e565b90965094506060890135915080821115611f1057600080fd5b50611f1d89828a01611d1e565b979a9699509497509295939492505050565b60005b83811015611f4a578181015183820152602001611f32565b50506000910152565b60008151808452611f6b816020860160208601611f2f565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602081526000611b516020830184611f53565b60008060008060408587031215611fc657600080fd5b843567ffffffffffffffff80821115611fde57600080fd5b611fea88838901611d1e565b9096509450602087013591508082111561200357600080fd5b5061201087828801611d1e565b95989497509550505050565b6000806000806060858703121561203257600080fd5b61203b85611d05565b935060208501359250604085013567ffffffffffffffff81111561205e57600080fd5b61201087828801611d1e565b6000806000806080858703121561208057600080fd5b843561208b81611dc8565b9350602085013561209b81611dc8565b925060408501356120ab81611dc8565b915060608501356120bb81611dc8565b939692955090935050565b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b63ffffffff85168152836020820152606060408201526000610bed6060830184866120c6565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b63ffffffff81811683821601908082111561218157612181612135565b5092915050565b60408152600061219c6040830185876120c6565b8281036020840152610bed8185611f53565b6000602082840312156121c057600080fd5b5051919050565b81810381811115611b1457611b14612135565b6040815260006121ee6040830186886120c6565b8281036020840152610ba48185876120c6565b60006020828403121561221357600080fd5b81518015158114611b5157600080fd5b80820180821115611b1457611b14612135565b6000808585111561224657600080fd5b8386111561225357600080fd5b5050820193919092039150565b60008251612272818460208701611f2f565b9190910192915050565b60006020828403121561228e57600080fd5b8151611b5181611dc8565b7fff000000000000000000000000000000000000000000000000000000000000008960f81b16815260007fffffffff00000000000000000000000000000000000000000000000000000000808a60e01b166001840152808960e01b166005840152876009840152808760e01b1660298401525084602d8301528284604d8401375060009101604d01908152979650505050505050565b7fff00000000000000000000000000000000000000000000000000000000000000813581811691600185101561236f5780818660010360031b1b83161692505b505092915050565b7fffffffff00000000000000000000000000000000000000000000000000000000813581811691600485101561236f5760049490940360031b84901b1690921692915050565b80356020831015611b14577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff602084900360031b1b169291505056fea2646970667358221220c5d6cb7406efdaebd91a66b31f9ac0c43440f38169076f28b101c060a85f4f2a64736f6c63430008160033';

type TestMailboxConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestMailboxConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestMailbox__factory extends ContractFactory {
  constructor(...args: TestMailboxConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _localDomain: BigNumberish,
    overrides?: Overrides & { from?: string },
  ): Promise<TestMailbox> {
    return super.deploy(_localDomain, overrides || {}) as Promise<TestMailbox>;
  }
  override getDeployTransaction(
    _localDomain: BigNumberish,
    overrides?: Overrides & { from?: string },
  ): TransactionRequest {
    return super.getDeployTransaction(_localDomain, overrides || {});
  }
  override attach(address: string): TestMailbox {
    return super.attach(address) as TestMailbox;
  }
  override connect(signer: Signer): TestMailbox__factory {
    return super.connect(signer) as TestMailbox__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestMailboxInterface {
    return new utils.Interface(_abi) as TestMailboxInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): TestMailbox {
    return new Contract(address, _abi, signerOrProvider) as TestMailbox;
  }
}
