/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import { Contract, ContractFactory, Overrides, Signer, utils } from 'ethers';

import type {
  TestDelegationManager,
  TestDelegationManagerInterface,
} from '../../../../contracts/test/avs/TestDelegationManager.js';

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'metadataURI',
        type: 'string',
      },
    ],
    name: 'OperatorMetadataURIUpdated',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
      {
        internalType: 'contract IStrategy[]',
        name: 'strategies',
        type: 'address[]',
      },
    ],
    name: 'getOperatorShares',
    outputs: [
      {
        internalType: 'uint256[]',
        name: '',
        type: 'uint256[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'isOperator',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'contract IStrategy',
        name: '',
        type: 'address',
      },
    ],
    name: 'operatorShares',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'earningsReceiver',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'delegationApprover',
            type: 'address',
          },
          {
            internalType: 'uint32',
            name: 'stakerOptOutWindowBlocks',
            type: 'uint32',
          },
        ],
        internalType: 'struct IDelegationManager.OperatorDetails',
        name: 'registeringOperatorDetails',
        type: 'tuple',
      },
      {
        internalType: 'string',
        name: 'metadataURI',
        type: 'string',
      },
    ],
    name: 'registerAsOperator',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: '_isOperatorReturnValue',
        type: 'bool',
      },
    ],
    name: 'setIsOperator',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x608060405234801561001057600080fd5b50610598806100206000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c8063778e55f311610050578063778e55f3146100b957806390041347146100f2578063cbb5d4db1461011257600080fd5b80630f589e591461006c5780636d70f7ae14610081575b600080fd5b61007f61007a366004610278565b505050565b005b6100a461008f366004610328565b60006020819052908152604090205460ff1681565b60405190151581526020015b60405180910390f35b6100e46100c736600461035c565b600160209081526000928352604080842090915290825290205481565b6040519081526020016100b0565b6101056101003660046103c4565b610176565b6040516100b091906104bc565b61007f610120366004610500565b73ffffffffffffffffffffffffffffffffffffffff91909116600090815260208190526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055565b60606000825167ffffffffffffffff81111561019457610194610395565b6040519080825280602002602001820160405280156101bd578160200160208202803683370190505b50905060005b83518110156102705773ffffffffffffffffffffffffffffffffffffffff85166000908152600160205260408120855190919086908490811061020857610208610533565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482828151811061025d5761025d610533565b60209081029190910101526001016101c3565b509392505050565b6000806000838503608081121561028e57600080fd5b606081121561029c57600080fd5b50839250606084013567ffffffffffffffff808211156102bb57600080fd5b818601915086601f8301126102cf57600080fd5b8135818111156102de57600080fd5b8760208285010111156102f057600080fd5b6020830194508093505050509250925092565b73ffffffffffffffffffffffffffffffffffffffff8116811461032557600080fd5b50565b60006020828403121561033a57600080fd5b813561034581610303565b9392505050565b803561035781610303565b919050565b6000806040838503121561036f57600080fd5b823561037a81610303565b9150602083013561038a81610303565b809150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080604083850312156103d757600080fd5b82356103e281610303565b915060208381013567ffffffffffffffff8082111561040057600080fd5b818601915086601f83011261041457600080fd5b81358181111561042657610426610395565b8060051b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f8301168101818110858211171561046957610469610395565b60405291825284820192508381018501918983111561048757600080fd5b938501935b828510156104ac5761049d8561034c565b8452938501939285019261048c565b8096505050505050509250929050565b6020808252825182820181905260009190848201906040850190845b818110156104f4578351835292840192918401916001016104d8565b50909695505050505050565b6000806040838503121561051357600080fd5b823561051e81610303565b91506020830135801515811461038a57600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea2646970667358221220be55be9a0cd3214ae36deadf63e1e13ffe957d37fc4e64548b6c45103432a68a64736f6c63430008160033';

type TestDelegationManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestDelegationManagerConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestDelegationManager__factory extends ContractFactory {
  constructor(...args: TestDelegationManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string },
  ): Promise<TestDelegationManager> {
    return super.deploy(overrides || {}) as Promise<TestDelegationManager>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string },
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TestDelegationManager {
    return super.attach(address) as TestDelegationManager;
  }
  override connect(signer: Signer): TestDelegationManager__factory {
    return super.connect(signer) as TestDelegationManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestDelegationManagerInterface {
    return new utils.Interface(_abi) as TestDelegationManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): TestDelegationManager {
    return new Contract(
      address,
      _abi,
      signerOrProvider,
    ) as TestDelegationManager;
  }
}
