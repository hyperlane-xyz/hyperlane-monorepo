/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import { Contract, ContractFactory, Overrides, Signer, utils } from 'ethers';

import type {
  TestHyperlaneServiceManager,
  TestHyperlaneServiceManagerInterface,
} from '../../../../contracts/test/avs/TestHyperlaneServiceManager.js';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_avsDirectory',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_stakeRegistry',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_paymentCoordinator',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_delegationManager',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint8',
        name: 'version',
        type: 'uint8',
      },
    ],
    name: 'Initialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
    ],
    name: 'OperatorDeregisteredFromAVS',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'contract IRemoteChallenger',
        name: 'challenger',
        type: 'address',
      },
    ],
    name: 'OperatorEnrolledToChallenger',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'contract IRemoteChallenger',
        name: 'challenger',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'unenrollmentStartBlock',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'challengeDelayBlocks',
        type: 'uint256',
      },
    ],
    name: 'OperatorQueuedUnenrollmentFromChallenger',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
    ],
    name: 'OperatorRegisteredToAVS',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'contract IRemoteChallenger',
        name: 'challenger',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'unenrollmentEndBlock',
        type: 'uint256',
      },
    ],
    name: 'OperatorUnenrolledFromChallenger',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    inputs: [],
    name: 'PACKAGE_VERSION',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'avsDirectory',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'challenger',
        type: 'address',
      },
    ],
    name: 'completeUnenrollment',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: '_challengers',
        type: 'address[]',
      },
    ],
    name: 'completeUnenrollment',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
    ],
    name: 'deregisterOperatorFromAVS',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IRemoteChallenger',
        name: 'challenger',
        type: 'address',
      },
    ],
    name: 'enrollIntoChallenger',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IRemoteChallenger[]',
        name: '_challengers',
        type: 'address[]',
      },
    ],
    name: 'enrollIntoChallengers',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
    ],
    name: 'freezeOperator',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_operator',
        type: 'address',
      },
      {
        internalType: 'contract IRemoteChallenger',
        name: '_challenger',
        type: 'address',
      },
    ],
    name: 'getChallengerEnrollment',
    outputs: [
      {
        components: [
          {
            internalType: 'enum EnrollmentStatus',
            name: 'status',
            type: 'uint8',
          },
          {
            internalType: 'uint248',
            name: 'unenrollmentStartBlock',
            type: 'uint248',
          },
        ],
        internalType: 'struct Enrollment',
        name: 'enrollment',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_operator',
        type: 'address',
      },
    ],
    name: 'getOperatorChallengers',
    outputs: [
      {
        internalType: 'address[]',
        name: '',
        type: 'address[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_operator',
        type: 'address',
      },
    ],
    name: 'getOperatorRestakedStrategies',
    outputs: [
      {
        internalType: 'address[]',
        name: '',
        type: 'address[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getRestakeableStrategies',
    outputs: [
      {
        internalType: 'address[]',
        name: '',
        type: 'address[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_owner',
        type: 'address',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'challenger',
        type: 'address',
      },
    ],
    name: 'mockSetUnenrolled',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'contract IStrategy',
                name: 'strategy',
                type: 'address',
              },
              {
                internalType: 'uint96',
                name: 'multiplier',
                type: 'uint96',
              },
            ],
            internalType: 'struct IPaymentCoordinator.StrategyAndMultiplier[]',
            name: 'strategiesAndMultipliers',
            type: 'tuple[]',
          },
          {
            internalType: 'contract IERC20',
            name: 'token',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint64',
            name: 'startTimestamp',
            type: 'uint64',
          },
          {
            internalType: 'uint64',
            name: 'duration',
            type: 'uint64',
          },
        ],
        internalType: 'struct IPaymentCoordinator.RangePayment[]',
        name: 'rangePayments',
        type: 'tuple[]',
      },
    ],
    name: 'payForRange',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'bytes',
            name: 'signature',
            type: 'bytes',
          },
          {
            internalType: 'bytes32',
            name: 'salt',
            type: 'bytes32',
          },
          {
            internalType: 'uint256',
            name: 'expiry',
            type: 'uint256',
          },
        ],
        internalType: 'struct ISignatureUtils.SignatureWithSaltAndExpiry',
        name: 'operatorSignature',
        type: 'tuple',
      },
    ],
    name: 'registerOperatorToAVS',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_paymentCoordinator',
        type: 'address',
      },
    ],
    name: 'setPaymentCoordinator',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract ISlasher',
        name: '_slasher',
        type: 'address',
      },
    ],
    name: 'setSlasher',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'stakeRegistry',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IRemoteChallenger',
        name: 'challenger',
        type: 'address',
      },
    ],
    name: 'startUnenrollment',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IRemoteChallenger[]',
        name: '_challengers',
        type: 'address[]',
      },
    ],
    name: 'startUnenrollment',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: '_metadataURI',
        type: 'string',
      },
    ],
    name: 'updateAVSMetadataURI',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const;

const _bytecode =
  '';

type TestHyperlaneServiceManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestHyperlaneServiceManagerConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestHyperlaneServiceManager__factory extends ContractFactory {
  constructor(...args: TestHyperlaneServiceManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _avsDirectory: string,
    _stakeRegistry: string,
    _paymentCoordinator: string,
    _delegationManager: string,
    overrides?: Overrides & { from?: string },
  ): Promise<TestHyperlaneServiceManager> {
    return super.deploy(
      _avsDirectory,
      _stakeRegistry,
      _paymentCoordinator,
      _delegationManager,
      overrides || {},
    ) as Promise<TestHyperlaneServiceManager>;
  }
  override getDeployTransaction(
    _avsDirectory: string,
    _stakeRegistry: string,
    _paymentCoordinator: string,
    _delegationManager: string,
    overrides?: Overrides & { from?: string },
  ): TransactionRequest {
    return super.getDeployTransaction(
      _avsDirectory,
      _stakeRegistry,
      _paymentCoordinator,
      _delegationManager,
      overrides || {},
    );
  }
  override attach(address: string): TestHyperlaneServiceManager {
    return super.attach(address) as TestHyperlaneServiceManager;
  }
  override connect(signer: Signer): TestHyperlaneServiceManager__factory {
    return super.connect(signer) as TestHyperlaneServiceManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestHyperlaneServiceManagerInterface {
    return new utils.Interface(_abi) as TestHyperlaneServiceManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): TestHyperlaneServiceManager {
    return new Contract(
      address,
      _abi,
      signerOrProvider,
    ) as TestHyperlaneServiceManager;
  }
}
