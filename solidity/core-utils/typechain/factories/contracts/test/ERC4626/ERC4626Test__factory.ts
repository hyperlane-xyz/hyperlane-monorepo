/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import { Contract, ContractFactory, Overrides, Signer, utils } from 'ethers';

import type {
  ERC4626Test,
  ERC4626TestInterface,
} from '../../../../contracts/test/ERC4626/ERC4626Test.js';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_asset',
        type: 'address',
      },
      {
        internalType: 'string',
        name: '_name',
        type: 'string',
      },
      {
        internalType: 'string',
        name: '_symbol',
        type: 'string',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Approval',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'assets',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
    ],
    name: 'Deposit',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Transfer',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'assets',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
    ],
    name: 'Withdraw',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
    ],
    name: 'allowance',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'approve',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'asset',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
    ],
    name: 'convertToAssets',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'assets',
        type: 'uint256',
      },
    ],
    name: 'convertToShares',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'decimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'subtractedValue',
        type: 'uint256',
      },
    ],
    name: 'decreaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'assets',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
    ],
    name: 'deposit',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'addedValue',
        type: 'uint256',
      },
    ],
    name: 'increaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'maxDeposit',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'maxMint',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
    ],
    name: 'maxRedeem',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
    ],
    name: 'maxWithdraw',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
    ],
    name: 'mint',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'assets',
        type: 'uint256',
      },
    ],
    name: 'previewDeposit',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
    ],
    name: 'previewMint',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
    ],
    name: 'previewRedeem',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'assets',
        type: 'uint256',
      },
    ],
    name: 'previewWithdraw',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
    ],
    name: 'redeem',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'symbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalAssets',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'transfer',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'transferFrom',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'assets',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
    ],
    name: 'withdraw',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x60c06040523480156200001157600080fd5b506040516200216c3803806200216c83398101604081905262000034916200024f565b82828260036200004583826200036a565b5060046200005482826200036a565b5050506000806200006b836200009d60201b60201c565b91509150816200007d5760126200007f565b805b60ff1660a05250506001600160a01b0316608052506200046e915050565b60408051600481526024810182526020810180516001600160e01b031663313ce56760e01b17905290516000918291829182916001600160a01b03871691620000e69162000436565b600060405180830381855afa9150503d806000811462000123576040519150601f19603f3d011682016040523d82523d6000602084013e62000128565b606091505b50915091508180156200013d57506020815110155b1562000175576000818060200190518101906200015b919062000454565b905060ff811162000173576001969095509350505050565b505b5060009485945092505050565b634e487b7160e01b600052604160045260246000fd5b60005b83811015620001b55781810151838201526020016200019b565b50506000910152565b600082601f830112620001d057600080fd5b81516001600160401b0380821115620001ed57620001ed62000182565b604051601f8301601f19908116603f0116810190828211818310171562000218576200021862000182565b816040528381528660208588010111156200023257600080fd5b6200024584602083016020890162000198565b9695505050505050565b6000806000606084860312156200026557600080fd5b83516001600160a01b03811681146200027d57600080fd5b60208501519093506001600160401b03808211156200029b57600080fd5b620002a987838801620001be565b93506040860151915080821115620002c057600080fd5b50620002cf86828701620001be565b9150509250925092565b600181811c90821680620002ee57607f821691505b6020821081036200030f57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111562000365576000816000526020600020601f850160051c81016020861015620003405750805b601f850160051c820191505b8181101562000361578281556001016200034c565b5050505b505050565b81516001600160401b0381111562000386576200038662000182565b6200039e81620003978454620002d9565b8462000315565b602080601f831160018114620003d65760008415620003bd5750858301515b600019600386901b1c1916600185901b17855562000361565b600085815260208120601f198616915b828110156200040757888601518255948401946001909101908401620003e6565b5085821015620004265787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600082516200044a81846020870162000198565b9190910192915050565b6000602082840312156200046757600080fd5b5051919050565b60805160a051611cc3620004a960003960006105e60152600081816102860152818161046901528181610e940152610f880152611cc36000f3fe608060405234801561001057600080fd5b50600436106101b95760003560e01c806370a08231116100f9578063ba08765211610097578063ce96cb7711610071578063ce96cb77146103cc578063d905777e146103df578063dd62ed3e146103f2578063ef8b30f7146103b957600080fd5b8063ba087652146103a6578063c63d75b6146102c3578063c6e6f592146103b957600080fd5b8063a457c2d7116100d3578063a457c2d71461035a578063a9059cbb1461036d578063b3d7f6b914610380578063b460af941461039357600080fd5b806370a082311461030957806394bf804d1461033f57806395d89b411461035257600080fd5b806323b872dd11610166578063395093511161014057806339509351146102b0578063402d267d146102c35780634cdad506146101ee5780636e553f65146102f657600080fd5b806323b872dd1461023f578063313ce5671461025257806338d52e0f1461026c57600080fd5b8063095ea7b311610197578063095ea7b3146102015780630a28a4771461022457806318160ddd1461023757600080fd5b806301e1d114146101be57806306fdde03146101d957806307a2d13a146101ee575b600080fd5b6101c6610438565b6040519081526020015b60405180910390f35b6101e16104ee565b6040516101d09190611855565b6101c66101fc3660046118a6565b610580565b61021461020f3660046118e8565b610593565b60405190151581526020016101d0565b6101c66102323660046118a6565b6105ab565b6002546101c6565b61021461024d366004611912565b6105b8565b61025a6105de565b60405160ff90911681526020016101d0565b60405173ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001681526020016101d0565b6102146102be3660046118e8565b61060a565b6101c66102d136600461194e565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90565b6101c6610304366004611969565b610656565b6101c661031736600461194e565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b6101c661034d366004611969565b61067f565b6101e1610699565b6102146103683660046118e8565b6106a8565b61021461037b3660046118e8565b610784565b6101c661038e3660046118a6565b610792565b6101c66103a1366004611995565b61079f565b6101c66103b4366004611995565b610835565b6101c66103c73660046118a6565b6108c3565b6101c66103da36600461194e565b6108d0565b6101c66103ed36600461194e565b610901565b6101c66104003660046119d1565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906370a0823190602401602060405180830381865afa1580156104c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e991906119fb565b905090565b6060600380546104fd90611a14565b80601f016020809104026020016040519081016040528092919081815260200182805461052990611a14565b80156105765780601f1061054b57610100808354040283529160200191610576565b820191906000526020600020905b81548152906001019060200180831161055957829003601f168201915b5050505050905090565b600061058d82600061092c565b92915050565b6000336105a1818585610966565b5060019392505050565b600061058d826001610b19565b6000336105c6858285610b49565b6105d1858585610c20565b60019150505b9392505050565b60006104e9817f0000000000000000000000000000000000000000000000000000000000000000611a96565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff871684529091528120549091906105a19082908690610651908790611aaf565b610966565b6000610666565b60405180910390fd5b6000610671846108c3565b90506105d733848684610e8f565b60008061068b84610792565b90506105d733848387610e8f565b6060600480546104fd90611a14565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff871684529091528120549091908381101561076c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f000000000000000000000000000000000000000000000000000000606482015260840161065d565b6107798286868403610966565b506001949350505050565b6000336105a1818585610c20565b600061058d82600161092c565b60006107aa826108d0565b841115610813576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f455243343632363a207769746864726177206d6f7265207468616e206d617800604482015260640161065d565b600061081e856105ab565b905061082d3385858885610f3b565b949350505050565b600061084082610901565b8411156108a9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f455243343632363a2072656465656d206d6f7265207468616e206d6178000000604482015260640161065d565b60006108b485610580565b905061082d3385858489610f3b565b600061058d826000610b19565b73ffffffffffffffffffffffffffffffffffffffff811660009081526020819052604081205461058d90600061092c565b73ffffffffffffffffffffffffffffffffffffffff811660009081526020819052604081205461058d565b60006105d7610939610438565b610944906001611aaf565b6109506000600a611be2565b60025461095d9190611aaf565b8591908561103c565b73ffffffffffffffffffffffffffffffffffffffff8316610a08576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f7265737300000000000000000000000000000000000000000000000000000000606482015260840161065d565b73ffffffffffffffffffffffffffffffffffffffff8216610aab576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f7373000000000000000000000000000000000000000000000000000000000000606482015260840161065d565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006105d7610b2982600a611be2565b600254610b369190611aaf565b610b3e610438565b61095d906001611aaf565b73ffffffffffffffffffffffffffffffffffffffff8381166000908152600160209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610c1a5781811015610c0d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161065d565b610c1a8484848403610966565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8316610cc3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f6472657373000000000000000000000000000000000000000000000000000000606482015260840161065d565b73ffffffffffffffffffffffffffffffffffffffff8216610d66576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f6573730000000000000000000000000000000000000000000000000000000000606482015260840161065d565b73ffffffffffffffffffffffffffffffffffffffff831660009081526020819052604090205481811015610e1c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e63650000000000000000000000000000000000000000000000000000606482015260840161065d565b73ffffffffffffffffffffffffffffffffffffffff848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610c1a565b610ebb7f000000000000000000000000000000000000000000000000000000000000000085308561109e565b610ec5838261117a565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d78484604051610f2d929190918252602082015260400190565b60405180910390a350505050565b8273ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610f7957610f79838683610b49565b610f83838261126d565b610fae7f00000000000000000000000000000000000000000000000000000000000000008584611431565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167ffbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db858560405161102d929190918252602082015260400190565b60405180910390a45050505050565b60008061104a868686611487565b9050600183600281111561106057611060611bf1565b14801561107d57506000848061107857611078611c20565b868809115b156110905761108d600182611aaf565b90505b95945050505050565b505050565b60405173ffffffffffffffffffffffffffffffffffffffff80851660248301528316604482015260648101829052610c1a9085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909316929092179091526115b1565b73ffffffffffffffffffffffffffffffffffffffff82166111f7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161065d565b80600260008282546112099190611aaf565b909155505073ffffffffffffffffffffffffffffffffffffffff8216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b73ffffffffffffffffffffffffffffffffffffffff8216611310576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f7300000000000000000000000000000000000000000000000000000000000000606482015260840161065d565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260208190526040902054818110156113c6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60448201527f6365000000000000000000000000000000000000000000000000000000000000606482015260840161065d565b73ffffffffffffffffffffffffffffffffffffffff83166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526110999084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064016110f8565b600080807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff858709858702925082811083820303915050806000036114df578382816114d5576114d5611c20565b04925050506105d7565b808411611548576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f4d6174683a206d756c446976206f766572666c6f770000000000000000000000604482015260640161065d565b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b6000611613826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166116c09092919063ffffffff16565b90508051600014806116345750808060200190518101906116349190611c4f565b611099576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161065d565b606061082d8484600085856000808673ffffffffffffffffffffffffffffffffffffffff1685876040516116f49190611c71565b60006040518083038185875af1925050503d8060008114611731576040519150601f19603f3d011682016040523d82523d6000602084013e611736565b606091505b509150915061174787838387611752565b979650505050505050565b606083156117e85782516000036117e15773ffffffffffffffffffffffffffffffffffffffff85163b6117e1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161065d565b508161082d565b61082d83838151156117fd5781518083602001fd5b806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065d9190611855565b60005b8381101561184c578181015183820152602001611834565b50506000910152565b6020815260008251806020840152611874816040850160208701611831565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b6000602082840312156118b857600080fd5b5035919050565b803573ffffffffffffffffffffffffffffffffffffffff811681146118e357600080fd5b919050565b600080604083850312156118fb57600080fd5b611904836118bf565b946020939093013593505050565b60008060006060848603121561192757600080fd5b611930846118bf565b925061193e602085016118bf565b9150604084013590509250925092565b60006020828403121561196057600080fd5b6105d7826118bf565b6000806040838503121561197c57600080fd5b8235915061198c602084016118bf565b90509250929050565b6000806000606084860312156119aa57600080fd5b833592506119ba602085016118bf565b91506119c8604085016118bf565b90509250925092565b600080604083850312156119e457600080fd5b6119ed836118bf565b915061198c602084016118bf565b600060208284031215611a0d57600080fd5b5051919050565b600181811c90821680611a2857607f821691505b602082108103611a61577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60ff818116838216019081111561058d5761058d611a67565b8082018082111561058d5761058d611a67565b600181815b80851115611b1b57817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821115611b0157611b01611a67565b80851615611b0e57918102915b93841c9390800290611ac7565b509250929050565b600082611b325750600161058d565b81611b3f5750600061058d565b8160018114611b555760028114611b5f57611b7b565b600191505061058d565b60ff841115611b7057611b70611a67565b50506001821b61058d565b5060208310610133831016604e8410600b8410161715611b9e575081810a61058d565b611ba88383611ac2565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821115611bda57611bda611a67565b029392505050565b60006105d760ff841683611b23565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600060208284031215611c6157600080fd5b815180151581146105d757600080fd5b60008251611c83818460208701611831565b919091019291505056fea264697066735822122098e0823290b0abf5a770ba0a507264a923fbeb16b753b234bb39621c34721e4e64736f6c63430008160033';

type ERC4626TestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC4626TestConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC4626Test__factory extends ContractFactory {
  constructor(...args: ERC4626TestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _asset: string,
    _name: string,
    _symbol: string,
    overrides?: Overrides & { from?: string },
  ): Promise<ERC4626Test> {
    return super.deploy(
      _asset,
      _name,
      _symbol,
      overrides || {},
    ) as Promise<ERC4626Test>;
  }
  override getDeployTransaction(
    _asset: string,
    _name: string,
    _symbol: string,
    overrides?: Overrides & { from?: string },
  ): TransactionRequest {
    return super.getDeployTransaction(_asset, _name, _symbol, overrides || {});
  }
  override attach(address: string): ERC4626Test {
    return super.attach(address) as ERC4626Test;
  }
  override connect(signer: Signer): ERC4626Test__factory {
    return super.connect(signer) as ERC4626Test__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC4626TestInterface {
    return new utils.Interface(_abi) as ERC4626TestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): ERC4626Test {
    return new Contract(address, _abi, signerOrProvider) as ERC4626Test;
  }
}
