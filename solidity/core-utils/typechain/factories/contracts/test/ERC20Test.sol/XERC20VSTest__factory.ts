/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import {
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
  Signer,
  utils,
} from 'ethers';

import type {
  XERC20VSTest,
  XERC20VSTestInterface,
} from '../../../../contracts/test/ERC20Test.sol/XERC20VSTest.js';

const _abi = [
  {
    inputs: [
      {
        internalType: 'string',
        name: 'name',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'symbol',
        type: 'string',
      },
      {
        internalType: 'uint256',
        name: 'totalSupply',
        type: 'uint256',
      },
      {
        internalType: 'uint8',
        name: '__decimals',
        type: 'uint8',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Approval',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: '_bridge',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: '_bufferCap',
        type: 'uint256',
      },
    ],
    name: 'BridgeLimitsSet',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'bridge',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint112',
        name: 'bufferCap',
        type: 'uint112',
      },
      {
        indexed: false,
        internalType: 'uint128',
        name: 'rateLimitPerSecond',
        type: 'uint128',
      },
    ],
    name: 'ConfigurationChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Transfer',
    type: 'event',
  },
  {
    inputs: [],
    name: '_decimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint112',
            name: 'bufferCap',
            type: 'uint112',
          },
          {
            internalType: 'uint128',
            name: 'rateLimitPerSecond',
            type: 'uint128',
          },
          {
            internalType: 'address',
            name: 'bridge',
            type: 'address',
          },
        ],
        internalType: 'struct IXERC20VS.RateLimitMidPointInfo',
        name: 'rateLimit',
        type: 'tuple',
      },
    ],
    name: 'addBridge',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
    ],
    name: 'allowance',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'approve',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
    ],
    name: 'bufferCap',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'burn',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'burnFrom',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_bridge',
        type: 'address',
      },
    ],
    name: 'burningCurrentLimitOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_bridge',
        type: 'address',
      },
    ],
    name: 'burningMaxLimitOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'decimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'subtractedValue',
        type: 'uint256',
      },
    ],
    name: 'decreaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'addedValue',
        type: 'uint256',
      },
    ],
    name: 'increaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'lockbox',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'mint',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'mint',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'mintTo',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_bridge',
        type: 'address',
      },
    ],
    name: 'mintingCurrentLimitOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_bridge',
        type: 'address',
      },
    ],
    name: 'mintingMaxLimitOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
    ],
    name: 'rateLimitPerSecond',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_bridge',
        type: 'address',
      },
    ],
    name: 'rateLimits',
    outputs: [
      {
        components: [
          {
            internalType: 'uint128',
            name: 'rateLimitPerSecond',
            type: 'uint128',
          },
          {
            internalType: 'uint112',
            name: 'bufferCap',
            type: 'uint112',
          },
          {
            internalType: 'uint32',
            name: 'lastBufferUsedTime',
            type: 'uint32',
          },
          {
            internalType: 'uint112',
            name: 'bufferStored',
            type: 'uint112',
          },
          {
            internalType: 'uint112',
            name: 'midPoint',
            type: 'uint112',
          },
        ],
        internalType: 'struct RateLimitMidPoint',
        name: '_rateLimit',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_bridge',
        type: 'address',
      },
    ],
    name: 'removeBridge',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_bridge',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_newBufferCap',
        type: 'uint256',
      },
    ],
    name: 'setBufferCap',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_bridge',
        type: 'address',
      },
      {
        internalType: 'uint128',
        name: '_newRateLimitPerSecond',
        type: 'uint128',
      },
    ],
    name: 'setRateLimitPerSecond',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'symbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'transfer',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'transferFrom',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x60a06040523480156200001157600080fd5b5060405162001fee38038062001fee833981016040819052620000349162000289565b8383838383836003620000488382620003a6565b506004620000578282620003a6565b50505060ff81166080526200006d3383620000a0565b505050506200008b620000856200016660201b60201c565b6200016a565b62000096336200016a565b505050506200049a565b6001600160a01b038216620000fb5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b80600260008282546200010f919062000472565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001e957600080fd5b81516001600160401b0380821115620002065762000206620001c1565b604051601f8301601f19908116603f01168101908282118183101715620002315762000231620001c1565b81604052838152602092508660208588010111156200024f57600080fd5b600091505b8382101562000273578582018301518183018401529082019062000254565b6000602085830101528094505050505092915050565b60008060008060808587031215620002a057600080fd5b84516001600160401b0380821115620002b857600080fd5b620002c688838901620001d7565b95506020870151915080821115620002dd57600080fd5b50620002ec87828801620001d7565b93505060408501519150606085015160ff811681146200030b57600080fd5b939692955090935050565b600181811c908216806200032b57607f821691505b6020821081036200034c57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001bc576000816000526020600020601f850160051c810160208610156200037d5750805b601f850160051c820191505b818110156200039e5782815560010162000389565b505050505050565b81516001600160401b03811115620003c257620003c2620001c1565b620003da81620003d3845462000316565b8462000352565b602080601f831160018114620004125760008415620003f95750858301515b600019600386901b1c1916600185901b1785556200039e565b600085815260208120601f198616915b82811015620004435788860151825594840194600190910190840162000422565b5085821015620004625787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b808201808211156200049457634e487b7160e01b600052601160045260246000fd5b92915050565b608051611b31620004bd60003960008181610336015261036d0152611b316000f3fe608060405234801561001057600080fd5b506004361061020b5760003560e01c806370a082311161012a5780639dc29fac116100bd578063bae2c8491161008c578063dd62ed3e11610071578063dd62ed3e14610683578063f2fde38b146106c9578063f6b87b72146102b157600080fd5b8063bae2c84914610675578063c1eb7137146102b157600080fd5b80639dc29fac1461049b578063a0712d681461063c578063a457c2d71461064f578063a9059cbb1461066257600080fd5b80638129fc1c116100f95780638129fc1c146106115780638da5cb5b1461061957806395d89b4114610621578063998955d31461062957600080fd5b806370a082311461045d578063715018a61461049357806379cc67901461049b5780637a14c7d2146104ae57600080fd5b806339509351116101a25780635a69558d116101715780635a69558d146103c757806363dbf73b146103da578063651fd2681461042257806366cc57021461043557600080fd5b8063395093511461038f57806340c10f19146103a25780634499eb15146103b5578063449a52f8146103a257600080fd5b806318160ddd116101de57806318160ddd1461031957806323b872dd14610321578063313ce5671461033457806332424aa31461036857600080fd5b806304df017d1461021057806306fdde0314610270578063095ea7b31461028e5780630c05f82c146102b1575b600080fd5b61026e61021e3660046117bc565b73ffffffffffffffffffffffffffffffffffffffff16600090815260066020526040812080547fffff00000000000000000000000000000000000000000000000000000000000016815560010155565b005b6102786106dc565b60405161028591906117d7565b60405180910390f35b6102a161029c366004611844565b61076e565b6040519015158152602001610285565b61030b6102bf3660046117bc565b73ffffffffffffffffffffffffffffffffffffffff1660009081526006602052604090205470010000000000000000000000000000000090046dffffffffffffffffffffffffffff1690565b604051908152602001610285565b60025461030b565b6102a161032f36600461186e565b610788565b7f00000000000000000000000000000000000000000000000000000000000000005b60405160ff9091168152602001610285565b6103567f000000000000000000000000000000000000000000000000000000000000000081565b6102a161039d366004611844565b6107ac565b61026e6103b0366004611844565b6107f8565b61026e6103c3366004611844565b5050565b61026e6103d53660046118ca565b610802565b61030b6103e83660046117bc565b73ffffffffffffffffffffffffffffffffffffffff166000908152600660205260409020546fffffffffffffffffffffffffffffffff1690565b61030b6104303660046117bc565b610a29565b60005b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610285565b61030b61046b3660046117bc565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b61026e610a57565b61026e6104a9366004611844565b610a6b565b61059f6104bc3660046117bc565b6040805160a0810182526000808252602082018190529181018290526060810182905260808101919091525073ffffffffffffffffffffffffffffffffffffffff16600090815260066020908152604091829020825160a08101845281546fffffffffffffffffffffffffffffffff811682526dffffffffffffffffffffffffffff70010000000000000000000000000000000090910481169382019390935260019091015463ffffffff811693820193909352640100000000830482166060820152720100000000000000000000000000000000000090920416608082015290565b6040516102859190600060a0820190506fffffffffffffffffffffffffffffffff835116825260208301516dffffffffffffffffffffffffffff808216602085015263ffffffff6040860151166040850152806060860151166060850152806080860151166080850152505092915050565b61026e610a75565b610438610a7e565b610278610aa4565b61030b6106373660046117bc565b610ab3565b61026e61064a366004611972565b610b35565b6102a161065d366004611844565b610b42565b6102a1610670366004611844565b610c18565b61026e6103c336600461198b565b61030b6106913660046119be565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b61026e6106d73660046117bc565b610c26565b6060600380546106eb906119e8565b80601f0160208091040260200160405190810160405280929190818152602001828054610717906119e8565b80156107645780601f1061073957610100808354040283529160200191610764565b820191906000526020600020905b81548152906001019060200180831161074757829003601f168201915b5050505050905090565b60003361077c818585610cda565b60019150505b92915050565b600033610796858285610e8e565b6107a1858585610f65565b506001949350505050565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490919061077c90829086906107f3908790611a6a565b610cda565b6103c382826111d4565b61080a6112c7565b6040518060a0016040528082602001516fffffffffffffffffffffffffffffffff16815260200182600001516dffffffffffffffffffffffffffff1681526020014263ffffffff168152602001600283600001516108689190611a7d565b6dffffffffffffffffffffffffffff1681526020016002836000015161088e9190611a7d565b6dffffffffffffffffffffffffffff9081169091526040808401805173ffffffffffffffffffffffffffffffffffffffff9081166000908152600660209081529084902086518154888401518816700100000000000000000000000000000000027fffff0000000000000000000000000000000000000000000000000000000000009091166fffffffffffffffffffffffffffffffff9092169190911717815586850151600190910180546060890151608090990151881672010000000000000000000000000000000000000271ffffffffffffffffffffffffffffffffffff99909816640100000000027fffffffffffffffffffffffffffff00000000000000000000000000000000000090911663ffffffff909316929092179190911796909616949094179094555184519285015191519316927fb4ff6a860e04455b1ce16833b74cde19765c95e55c5e7e4f5a69e9707d8cc96d92610a1e9290916dffffffffffffffffffffffffffff9290921682526fffffffffffffffffffffffffffffffff16602082015260400190565b60405180910390a250565b73ffffffffffffffffffffffffffffffffffffffff811660009081526006602052604081206107829061134d565b610a5f6112c7565b610a696000611548565b565b6103c382826115bf565b610a6933611548565b6000610a9f60055473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b6060600480546106eb906119e8565b73ffffffffffffffffffffffffffffffffffffffff81166000908152600660205260408120610ae19061134d565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260066020526040902054610782919070010000000000000000000000000000000090046dffffffffffffffffffffffffffff16611ad1565b610b3f33826111d4565b50565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490919083811015610c0b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6107a18286868403610cda565b60003361077c818585610f65565b610c2e6112c7565b73ffffffffffffffffffffffffffffffffffffffff8116610cd1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610c02565b610b3f81611548565b73ffffffffffffffffffffffffffffffffffffffff8316610d7c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610c02565b73ffffffffffffffffffffffffffffffffffffffff8216610e1f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152608401610c02565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff8381166000908152600160209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610f5f5781811015610f52576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610c02565b610f5f8484848403610cda565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8316611008576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610c02565b73ffffffffffffffffffffffffffffffffffffffff82166110ab576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152608401610c02565b73ffffffffffffffffffffffffffffffffffffffff831660009081526020819052604090205481811015611161576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152608401610c02565b73ffffffffffffffffffffffffffffffffffffffff848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610f5f565b73ffffffffffffffffffffffffffffffffffffffff8216611251576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610c02565b80600260008282546112639190611a6a565b909155505073ffffffffffffffffffffffffffffffffffffffff8216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b336112d0610a7e565b73ffffffffffffffffffffffffffffffffffffffff1614610a69576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610c02565b6001810154815460009163ffffffff9081164203169082906113829083906fffffffffffffffffffffffffffffffff16611ae4565b60018501549091506dffffffffffffffffffffffffffff72010000000000000000000000000000000000008204811664010000000090920416101561142557600184015461141d906113ed90839064010000000090046dffffffffffffffffffffffffffff16611a6a565b6001860154720100000000000000000000000000000000000090046dffffffffffffffffffffffffffff1661177b565b949350505050565b60018401546dffffffffffffffffffffffffffff72010000000000000000000000000000000000008204811664010000000090920416111561152657600184015464010000000090046dffffffffffffffffffffffffffff168111806114c9575060018401546dffffffffffffffffffffffffffff720100000000000000000000000000000000000082048116916114c7918491640100000000900416611ad1565b105b156114fe5750505060010154720100000000000000000000000000000000000090046dffffffffffffffffffffffffffff1690565b600184015461141d90829064010000000090046dffffffffffffffffffffffffffff16611ad1565b5050506001015464010000000090046dffffffffffffffffffffffffffff1690565b6005805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b73ffffffffffffffffffffffffffffffffffffffff8216611662576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f73000000000000000000000000000000000000000000000000000000000000006064820152608401610c02565b73ffffffffffffffffffffffffffffffffffffffff821660009081526020819052604090205481811015611718576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60448201527f63650000000000000000000000000000000000000000000000000000000000006064820152608401610c02565b73ffffffffffffffffffffffffffffffffffffffff83166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9101610e81565b600081831061178a578161178c565b825b9392505050565b803573ffffffffffffffffffffffffffffffffffffffff811681146117b757600080fd5b919050565b6000602082840312156117ce57600080fd5b61178c82611793565b60006020808352835180602085015260005b81811015611805578581018301518582016040015282016117e9565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b6000806040838503121561185757600080fd5b61186083611793565b946020939093013593505050565b60008060006060848603121561188357600080fd5b61188c84611793565b925061189a60208501611793565b9150604084013590509250925092565b80356fffffffffffffffffffffffffffffffff811681146117b757600080fd5b6000606082840312156118dc57600080fd5b6040516060810181811067ffffffffffffffff82111715611926577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405282356dffffffffffffffffffffffffffff8116811461194757600080fd5b8152611955602084016118aa565b602082015261196660408401611793565b60408201529392505050565b60006020828403121561198457600080fd5b5035919050565b6000806040838503121561199e57600080fd5b6119a783611793565b91506119b5602084016118aa565b90509250929050565b600080604083850312156119d157600080fd5b6119da83611793565b91506119b560208401611793565b600181811c908216806119fc57607f821691505b602082108103611a35577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8082018082111561078257610782611a3b565b60006dffffffffffffffffffffffffffff80841680611ac5577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b92169190910492915050565b8181038181111561078257610782611a3b565b808202811582820484141761078257610782611a3b56fea264697066735822122034ca99043a3db801b1b636558167e1ea2ec9ce8e7c03c6c9d0f43c9ffde0f55764736f6c63430008160033';

type XERC20VSTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: XERC20VSTestConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class XERC20VSTest__factory extends ContractFactory {
  constructor(...args: XERC20VSTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name: string,
    symbol: string,
    totalSupply: BigNumberish,
    __decimals: BigNumberish,
    overrides?: Overrides & { from?: string },
  ): Promise<XERC20VSTest> {
    return super.deploy(
      name,
      symbol,
      totalSupply,
      __decimals,
      overrides || {},
    ) as Promise<XERC20VSTest>;
  }
  override getDeployTransaction(
    name: string,
    symbol: string,
    totalSupply: BigNumberish,
    __decimals: BigNumberish,
    overrides?: Overrides & { from?: string },
  ): TransactionRequest {
    return super.getDeployTransaction(
      name,
      symbol,
      totalSupply,
      __decimals,
      overrides || {},
    );
  }
  override attach(address: string): XERC20VSTest {
    return super.attach(address) as XERC20VSTest;
  }
  override connect(signer: Signer): XERC20VSTest__factory {
    return super.connect(signer) as XERC20VSTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): XERC20VSTestInterface {
    return new utils.Interface(_abi) as XERC20VSTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): XERC20VSTest {
    return new Contract(address, _abi, signerOrProvider) as XERC20VSTest;
  }
}
