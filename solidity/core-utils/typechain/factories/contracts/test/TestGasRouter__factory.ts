/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import { Contract, ContractFactory, Overrides, Signer, utils } from 'ethers';

import type {
  TestGasRouter,
  TestGasRouterInterface,
} from '../../../contracts/test/TestGasRouter.js';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_mailbox',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint32',
        name: 'domain',
        type: 'uint32',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'gas',
        type: 'uint256',
      },
    ],
    name: 'GasSet',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: '_hook',
        type: 'address',
      },
    ],
    name: 'HookSet',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint8',
        name: 'version',
        type: 'uint8',
      },
    ],
    name: 'Initialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: '_ism',
        type: 'address',
      },
    ],
    name: 'IsmSet',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    inputs: [],
    name: 'PACKAGE_VERSION',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    name: 'destinationGas',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_destination',
        type: 'uint32',
      },
      {
        internalType: 'bytes',
        name: '_msg',
        type: 'bytes',
      },
    ],
    name: 'dispatch',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'domains',
    outputs: [
      {
        internalType: 'uint32[]',
        name: '',
        type: 'uint32[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_domain',
        type: 'uint32',
      },
      {
        internalType: 'bytes32',
        name: '_router',
        type: 'bytes32',
      },
    ],
    name: 'enrollRemoteRouter',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32[]',
        name: '_domains',
        type: 'uint32[]',
      },
      {
        internalType: 'bytes32[]',
        name: '_addresses',
        type: 'bytes32[]',
      },
    ],
    name: 'enrollRemoteRouters',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_origin',
        type: 'uint32',
      },
      {
        internalType: 'bytes32',
        name: '_sender',
        type: 'bytes32',
      },
      {
        internalType: 'bytes',
        name: '_message',
        type: 'bytes',
      },
    ],
    name: 'handle',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'hook',
    outputs: [
      {
        internalType: 'contract IPostDispatchHook',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'interchainSecurityModule',
    outputs: [
      {
        internalType: 'contract IInterchainSecurityModule',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'localDomain',
    outputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'mailbox',
    outputs: [
      {
        internalType: 'contract IMailbox',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_destinationDomain',
        type: 'uint32',
      },
    ],
    name: 'quoteGasPayment',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_domain',
        type: 'uint32',
      },
    ],
    name: 'routers',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'domain',
        type: 'uint32',
      },
      {
        internalType: 'uint256',
        name: 'gas',
        type: 'uint256',
      },
    ],
    name: 'setDestinationGas',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint32',
            name: 'domain',
            type: 'uint32',
          },
          {
            internalType: 'uint256',
            name: 'gas',
            type: 'uint256',
          },
        ],
        internalType: 'struct GasRouter.GasRouterConfig[]',
        name: 'gasConfigs',
        type: 'tuple[]',
      },
    ],
    name: 'setDestinationGas',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_hook',
        type: 'address',
      },
    ],
    name: 'setHook',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_module',
        type: 'address',
      },
    ],
    name: 'setInterchainSecurityModule',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_domain',
        type: 'uint32',
      },
    ],
    name: 'unenrollRemoteRouter',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32[]',
        name: '_domains',
        type: 'uint32[]',
      },
    ],
    name: 'unenrollRemoteRouters',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x60c06040523480156200001157600080fd5b5060405162001eaa38038062001eaa833981016040819052620000349162000176565b808080806001600160a01b0381163b620000945760405162461bcd60e51b815260206004820152601e60248201527f4d61696c626f78436c69656e743a20696e76616c6964206d61696c626f780000604482015260640160405180910390fd5b6001600160a01b03821660808190526040805163234d8e3d60e21b81529051638d3638f4916004808201926020929091908290030181865afa158015620000df573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001059190620001a8565b63ffffffff1660a052620001193362000124565b5050505050620001d0565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000602082840312156200018957600080fd5b81516001600160a01b0381168114620001a157600080fd5b9392505050565b600060208284031215620001bb57600080fd5b815163ffffffff81168114620001a157600080fd5b60805160a051611c9f6200020b600039600061031d015260008181610427015281816107e30152818161109301526111980152611c9f6000f3fe6080604052600436106101755760003560e01c80638d3638f4116100cb578063d5438eae1161007f578063efae508a11610059578063efae508a14610496578063f2ed8c53146104b6578063f2fde38b146104d657600080fd5b8063d5438eae14610415578063de523cf314610449578063e9198bf91461047657600080fd5b806393c44847116100b057806393c448471461037f578063b1bd6436146103d5578063b49c53a7146103f557600080fd5b80638d3638f41461030b5780638da5cb5b1461035457600080fd5b806356d5d4751161012d5780637249609f116101075780637249609f14610279578063775313a11461028c5780637f5a7c7b146102b957600080fd5b806356d5d47514610231578063715018a61461024457806371a15b381461025957600080fd5b80633dfd38731161015e5780633dfd3873146101cf578063440df4f4146101ef57806349d462ef1461021157600080fd5b80630e72cc061461017a5780632ead72f61461019c575b600080fd5b34801561018657600080fd5b5061019a610195366004611616565b6104f6565b005b3480156101a857600080fd5b506101bc6101b7366004611665565b610644565b6040519081526020015b60405180910390f35b3480156101db57600080fd5b5061019a6101ea366004611616565b610663565b3480156101fb57600080fd5b506102046107a4565b6040516101c69190611680565b34801561021d57600080fd5b5061019a61022c3660046116ca565b6107b5565b61019a61023f3660046116f4565b6107cb565b34801561025057600080fd5b5061019a610933565b34801561026557600080fd5b5061019a6102743660046117c0565b610947565b61019a610287366004611831565b6109a2565b34801561029857600080fd5b506101bc6102a7366004611665565b60ca6020526000908152604090205481565b3480156102c557600080fd5b506065546102e69073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101c6565b34801561031757600080fd5b5061033f7f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020016101c6565b34801561036057600080fd5b5060335473ffffffffffffffffffffffffffffffffffffffff166102e6565b34801561038b57600080fd5b506103c86040518060400160405280600581526020017f372e312e3400000000000000000000000000000000000000000000000000000081525081565b6040516101c6919061197f565b3480156103e157600080fd5b5061019a6103f0366004611992565b6109cf565b34801561040157600080fd5b5061019a6104103660046116ca565b610a40565b34801561042157600080fd5b506102e67f000000000000000000000000000000000000000000000000000000000000000081565b34801561045557600080fd5b506066546102e69073ffffffffffffffffffffffffffffffffffffffff1681565b34801561048257600080fd5b5061019a610491366004611a07565b610a52565b3480156104a257600080fd5b5061019a6104b1366004611665565b610b31565b3480156104c257600080fd5b506101bc6104d1366004611665565b610b45565b3480156104e257600080fd5b5061019a6104f1366004611616565b610b82565b8073ffffffffffffffffffffffffffffffffffffffff81163b151580610530575073ffffffffffffffffffffffffffffffffffffffff8116155b6105c1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f4d61696c626f78436c69656e743a20696e76616c696420636f6e74726163742060448201527f73657474696e670000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6105c9610c36565b606680547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff84169081179091556040519081527fc47cbcc588c67679e52261c45cc315e56562f8d0ccaba16facb9093ff9498799906020015b60405180910390a15050565b60008061065b609763ffffffff80861690610cb716565b949350505050565b8073ffffffffffffffffffffffffffffffffffffffff81163b15158061069d575073ffffffffffffffffffffffffffffffffffffffff8116155b610729576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f4d61696c626f78436c69656e743a20696e76616c696420636f6e74726163742060448201527f73657474696e670000000000000000000000000000000000000000000000000060648201526084016105b8565b610731610c36565b606580547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff84169081179091556040519081527f4eab7b127c764308788622363ad3e9532de3dfba7845bd4f84c125a22544255a90602001610638565b60606107b06097610cd0565b905090565b6107bd610c36565b6107c78282610d81565b5050565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610890576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f4d61696c626f78436c69656e743a2073656e646572206e6f74206d61696c626f60448201527f780000000000000000000000000000000000000000000000000000000000000060648201526084016105b8565b600061089b85610dcf565b905083811461092c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f456e726f6c6c656420726f7574657220646f6573206e6f74206d61746368207360448201527f656e64657200000000000000000000000000000000000000000000000000000060648201526084016105b8565b5050505050565b61093b610c36565b6109456000610e34565b565b61094f610c36565b8060005b8181101561099c5761098a84848381811061097057610970611a73565b90506020020160208101906109859190611665565b610eab565b610995600182611ad1565b9050610953565b50505050565b6065546109ca9083903490849073ffffffffffffffffffffffffffffffffffffffff16610f00565b505050565b6109d7610c36565b60005b818110156109ca57610a2e8383838181106109f7576109f7611a73565b610a0d9260206040909202019081019150611665565b848484818110610a1f57610a1f611a73565b90506040020160200135610d81565b610a39600182611ad1565b90506109da565b610a48610c36565b6107c78282610f20565b610a5a610c36565b828114610ac3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600760248201527f216c656e6774680000000000000000000000000000000000000000000000000060448201526064016105b8565b8260005b81811015610b2957610b17868683818110610ae457610ae4611a73565b9050602002016020810190610af99190611665565b858584818110610b0b57610b0b611a73565b90506020020135610f20565b610b22600182611ad1565b9050610ac7565b505050505050565b610b39610c36565b610b4281610eab565b50565b604080516020810190915260008082526065549091610b7c9184919073ffffffffffffffffffffffffffffffffffffffff16610f36565b92915050565b610b8a610c36565b73ffffffffffffffffffffffffffffffffffffffff8116610c2d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016105b8565b610b4281610e34565b60335473ffffffffffffffffffffffffffffffffffffffff163314610945576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105b8565b600080610cc48484610f4c565b915091505b9250929050565b60606000610cdd83610f86565b9050805167ffffffffffffffff811115610cf957610cf9611802565b604051908082528060200260200182016040528015610d22578160200160208202803683370190505b50915060005b8151811015610d7a57818181518110610d4357610d43611a73565b6020026020010151838281518110610d5d57610d5d611a73565b63ffffffff90921660209283029190910190910152600101610d28565b5050919050565b63ffffffff8216600081815260ca6020908152604091829020849055815192835282018390527fc3de732a98b24a2b5c6f67e8a7fb057ffc14046b83968a2c73e4148d2fba978b9101610638565b60008080610de7609763ffffffff80871690610cb716565b915091508115610df8579392505050565b610e0184611017565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b8919061197f565b6033805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610ebf609763ffffffff8084169061104e16565b610ec882611017565b906107c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b8919061197f565b6000610f17858585610f1189611061565b86611083565b95945050505050565b6107c7609763ffffffff80851690849061114116565b600061065b8484610f4687611061565b8561114c565b6000818152600283016020526040812054819080610f7b57610f6e8585611220565b925060009150610cc99050565b600192509050610cc9565b60606000610f938361122c565b90508067ffffffffffffffff811115610fae57610fae611802565b604051908082528060200260200182016040528015610fd7578160200160208202803683370190505b50915060005b81811015610d7a57610fef8482611237565b60001c83828151811061100457611004611a73565b6020908102919091010152600101610fdd565b60606110288263ffffffff16611243565b6040516020016110389190611ae4565b6040516020818303038152906040529050919050565b600061105a8383611301565b9392505050565b63ffffffff8116600090815260ca6020526040902054606090610b7c9061131e565b60008061108f87610dcf565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166310b83dc08789848989896040518763ffffffff1660e01b81526004016110f3959493929190611b29565b60206040518083038185885af1158015611111573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906111369190611b89565b979650505050505050565b61099c83838361133c565b60008061115886610dcf565b6040517f81d2ea9500000000000000000000000000000000000000000000000000000000815290915073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906381d2ea95906111d590899085908a908a908a90600401611b29565b602060405180830381865afa1580156111f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112169190611b89565b9695505050505050565b600061105a8383611359565b6000610b7c82611371565b600061105a838361137b565b60606000611250836113a5565b600101905060008167ffffffffffffffff81111561127057611270611802565b6040519080825280601f01601f19166020018201604052801561129a576020820181803683370190505b5090508181016020015b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85049450846112a457509392505050565b6000818152600283016020526040812081905561105a8383611487565b6060610b7c6000833360405180602001604052806000815250611493565b6000828152600284016020526040812082905561065b84846114c8565b6000818152600183016020526040812054151561105a565b6000610b7c825490565b600082600001828154811061139257611392611a73565b9060005260206000200154905092915050565b6000807a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106113ee577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef8100000000831061141a576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061143857662386f26fc10000830492506010015b6305f5e1008310611450576305f5e100830492506008015b612710831061146457612710830492506004015b60648310611476576064830492506002015b600a8310610b7c5760010192915050565b600061105a83836114d4565b60606001858585856040516020016114af959493929190611ba2565b6040516020818303038152906040529050949350505050565b600061105a83836115c7565b600081815260018301602052604081205480156115bd5760006114f8600183611c27565b855490915060009061150c90600190611c27565b905081811461157157600086600001828154811061152c5761152c611a73565b906000526020600020015490508087600001848154811061154f5761154f611a73565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061158257611582611c3a565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610b7c565b6000915050610b7c565b600081815260018301602052604081205461160e57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610b7c565b506000610b7c565b60006020828403121561162857600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461105a57600080fd5b803563ffffffff8116811461166057600080fd5b919050565b60006020828403121561167757600080fd5b61105a8261164c565b6020808252825182820181905260009190848201906040850190845b818110156116be57835163ffffffff168352928401929184019160010161169c565b50909695505050505050565b600080604083850312156116dd57600080fd5b6116e68361164c565b946020939093013593505050565b6000806000806060858703121561170a57600080fd5b6117138561164c565b935060208501359250604085013567ffffffffffffffff8082111561173757600080fd5b818701915087601f83011261174b57600080fd5b81358181111561175a57600080fd5b88602082850101111561176c57600080fd5b95989497505060200194505050565b60008083601f84011261178d57600080fd5b50813567ffffffffffffffff8111156117a557600080fd5b6020830191508360208260051b8501011115610cc957600080fd5b600080602083850312156117d357600080fd5b823567ffffffffffffffff8111156117ea57600080fd5b6117f68582860161177b565b90969095509350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000806040838503121561184457600080fd5b61184d8361164c565b9150602083013567ffffffffffffffff8082111561186a57600080fd5b818501915085601f83011261187e57600080fd5b81358181111561189057611890611802565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019083821181831017156118d6576118d6611802565b816040528281528860208487010111156118ef57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60005b8381101561192c578181015183820152602001611914565b50506000910152565b6000815180845261194d816020860160208601611911565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60208152600061105a6020830184611935565b600080602083850312156119a557600080fd5b823567ffffffffffffffff808211156119bd57600080fd5b818501915085601f8301126119d157600080fd5b8135818111156119e057600080fd5b8660208260061b85010111156119f557600080fd5b60209290920196919550909350505050565b60008060008060408587031215611a1d57600080fd5b843567ffffffffffffffff80821115611a3557600080fd5b611a418883890161177b565b90965094506020870135915080821115611a5a57600080fd5b50611a678782880161177b565b95989497509550505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b80820180821115610b7c57610b7c611aa2565b7f4e6f20726f7574657220656e726f6c6c656420666f7220646f6d61696e3a2000815260008251611b1c81601f850160208701611911565b91909101601f0192915050565b63ffffffff8616815284602082015260a060408201526000611b4e60a0830186611935565b8281036060840152611b608186611935565b91505073ffffffffffffffffffffffffffffffffffffffff831660808301529695505050505050565b600060208284031215611b9b57600080fd5b5051919050565b7fffff0000000000000000000000000000000000000000000000000000000000008660f01b1681528460028201528360228201527fffffffffffffffffffffffffffffffffffffffff0000000000000000000000008360601b16604282015260008251611c16816056850160208701611911565b919091016056019695505050505050565b81810381811115610b7c57610b7c611aa2565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea26469706673582212208a29a098e8b56e266fcabb1276ec1fc17cf8cf135a2ed7cec51d7fb28efb093f64736f6c63430008160033';

type TestGasRouterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestGasRouterConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestGasRouter__factory extends ContractFactory {
  constructor(...args: TestGasRouterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _mailbox: string,
    overrides?: Overrides & { from?: string },
  ): Promise<TestGasRouter> {
    return super.deploy(_mailbox, overrides || {}) as Promise<TestGasRouter>;
  }
  override getDeployTransaction(
    _mailbox: string,
    overrides?: Overrides & { from?: string },
  ): TransactionRequest {
    return super.getDeployTransaction(_mailbox, overrides || {});
  }
  override attach(address: string): TestGasRouter {
    return super.attach(address) as TestGasRouter;
  }
  override connect(signer: Signer): TestGasRouter__factory {
    return super.connect(signer) as TestGasRouter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestGasRouterInterface {
    return new utils.Interface(_abi) as TestGasRouterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): TestGasRouter {
    return new Contract(address, _abi, signerOrProvider) as TestGasRouter;
  }
}
