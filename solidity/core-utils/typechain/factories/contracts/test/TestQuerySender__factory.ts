/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import { Contract, ContractFactory, Overrides, Signer, utils } from 'ethers';

import type {
  TestQuerySender,
  TestQuerySenderInterface,
} from '../../../contracts/test/TestQuerySender.js';

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'result',
        type: 'address',
      },
    ],
    name: 'ReceivedAddressResult',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bytes32',
        name: 'result',
        type: 'bytes32',
      },
    ],
    name: 'ReceivedBytes32Result',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'result',
        type: 'uint256',
      },
    ],
    name: 'ReceivedUint256Result',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_result',
        type: 'address',
      },
    ],
    name: 'handleQueryAddressResult',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: '_result',
        type: 'bytes32',
      },
    ],
    name: 'handleQueryBytes32Result',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_result',
        type: 'uint256',
      },
    ],
    name: 'handleQueryUint256Result',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_queryRouterAddress',
        type: 'address',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'lastAddressResult',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'lastBytes32Result',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'lastUint256Result',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_destinationDomain',
        type: 'uint32',
      },
      {
        internalType: 'address',
        name: '_target',
        type: 'address',
      },
      {
        internalType: 'bytes',
        name: '_targetData',
        type: 'bytes',
      },
      {
        internalType: 'uint256',
        name: '_gasAmount',
        type: 'uint256',
      },
    ],
    name: 'queryAddress',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_destinationDomain',
        type: 'uint32',
      },
      {
        internalType: 'address',
        name: '_target',
        type: 'address',
      },
      {
        internalType: 'bytes',
        name: '_targetData',
        type: 'bytes',
      },
      {
        internalType: 'uint256',
        name: '_gasAmount',
        type: 'uint256',
      },
    ],
    name: 'queryBytes32',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_destinationDomain',
        type: 'uint32',
      },
      {
        internalType: 'address',
        name: '_target',
        type: 'address',
      },
      {
        internalType: 'bytes',
        name: '_targetData',
        type: 'bytes',
      },
      {
        internalType: 'uint256',
        name: '_gasAmount',
        type: 'uint256',
      },
    ],
    name: 'queryUint256',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x608060405234801561001057600080fd5b506106cf806100206000396000f3fe6080604052600436106100b15760003560e01c80639a69b64611610069578063c4d66de81161004e578063c4d66de8146101af578063d696618714610211578063ec2c076b1461023157600080fd5b80639a69b6461461013d5780639bc2fc6c1461015d57600080fd5b806334ef642c1161009a57806334ef642c146100f45780635520f36f1461010a5780635956d6101461012a57600080fd5b8063150db4a8146100b65780632c5307cf146100df575b600080fd5b3480156100c257600080fd5b506100cc60035481565b6040519081526020015b60405180910390f35b6100f26100ed3660046104de565b610244565b005b34801561010057600080fd5b506100cc60025481565b34801561011657600080fd5b506100f261012536600461057f565b610279565b6100f26101383660046104de565b6102b1565b34801561014957600080fd5b506100f2610158366004610598565b6102df565b34801561016957600080fd5b5060015461018a9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100d6565b3480156101bb57600080fd5b506100f26101ca366004610598565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b34801561021d57600080fd5b506100f261022c36600461057f565b61036f565b6100f261023f3660046104de565b6103a7565b610272858585857fd696618700000000000000000000000000000000000000000000000000000000866103d1565b5050505050565b6040518181527ff2ef554b977530c721a8d510ec8ac455ae8cb0e35625475d0f8732e8a5a2cb0e9060200160405180910390a1600255565b610272858585857f9a69b64600000000000000000000000000000000000000000000000000000000866103d1565b60405173ffffffffffffffffffffffffffffffffffffffff821681527f36de86782a8492c9a38d307c59ec9159da79f889af8cd357925017867e895d8f9060200160405180910390a1600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6040518181527f01ee73d9a638efac5779e3690ad8edd267393c69a4903391cc34bce642ede6799060200160405180910390a1600355565b610272858585857f5520f36f00000000000000000000000000000000000000000000000000000000865b600054604080517fffffffff00000000000000000000000000000000000000000000000000000000851660208201528151600481830301815260248201928390527f2222b4520000000000000000000000000000000000000000000000000000000090925273ffffffffffffffffffffffffffffffffffffffff90921691632222b45291610469918a918a918a918a916028016105ba565b6020604051808303816000875af1158015610488573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ac9190610680565b50505050505050565b803573ffffffffffffffffffffffffffffffffffffffff811681146104d957600080fd5b919050565b6000806000806000608086880312156104f657600080fd5b853563ffffffff8116811461050a57600080fd5b9450610518602087016104b5565b9350604086013567ffffffffffffffff8082111561053557600080fd5b818801915088601f83011261054957600080fd5b81358181111561055857600080fd5b89602082850101111561056a57600080fd5b96999598505060200195606001359392505050565b60006020828403121561059157600080fd5b5035919050565b6000602082840312156105aa57600080fd5b6105b3826104b5565b9392505050565b63ffffffff861681526000602073ffffffffffffffffffffffffffffffffffffffff8716602084015260806040840152846080840152848660a0850137600060a086850101527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe080601f870116840160a085820301606086015285518060a083015260005b8181101561065b5787810185015183820160c00152840161063f565b50600060c0828401015260c083601f8301168301019450505050509695505050505050565b60006020828403121561069257600080fd5b505191905056fea264697066735822122045ecf1fca78377620b4ad9448e30bf761efed4b10522f95abaa8d63a6232a1d364736f6c63430008160033';

type TestQuerySenderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestQuerySenderConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestQuerySender__factory extends ContractFactory {
  constructor(...args: TestQuerySenderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string },
  ): Promise<TestQuerySender> {
    return super.deploy(overrides || {}) as Promise<TestQuerySender>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string },
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TestQuerySender {
    return super.attach(address) as TestQuerySender;
  }
  override connect(signer: Signer): TestQuerySender__factory {
    return super.connect(signer) as TestQuerySender__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestQuerySenderInterface {
    return new utils.Interface(_abi) as TestQuerySenderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): TestQuerySender {
    return new Contract(address, _abi, signerOrProvider) as TestQuerySender;
  }
}
