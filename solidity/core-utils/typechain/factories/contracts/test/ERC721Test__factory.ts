/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import {
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
  Signer,
  utils,
} from 'ethers';

import type {
  ERC721Test,
  ERC721TestInterface,
} from '../../../contracts/test/ERC721Test.js';

const _abi = [
  {
    inputs: [
      {
        internalType: 'string',
        name: 'name',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'symbol',
        type: 'string',
      },
      {
        internalType: 'uint256',
        name: '_mintAmount',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'approved',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'Approval',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'bool',
        name: 'approved',
        type: 'bool',
      },
    ],
    name: 'ApprovalForAll',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'Transfer',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'approve',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'getApproved',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
    ],
    name: 'isApprovedForAll',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'ownerOf',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'safeTransferFrom',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: 'data',
        type: 'bytes',
      },
    ],
    name: 'safeTransferFrom',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'approved',
        type: 'bool',
      },
    ],
    name: 'setApprovalForAll',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: 'interfaceId',
        type: 'bytes4',
      },
    ],
    name: 'supportsInterface',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'symbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'index',
        type: 'uint256',
      },
    ],
    name: 'tokenByIndex',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'index',
        type: 'uint256',
      },
    ],
    name: 'tokenOfOwnerByIndex',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'tokenURI',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'transferFrom',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x60806040523480156200001157600080fd5b506040516200265d3803806200265d833981016040819052620000349162000663565b8282600062000044838262000767565b50600162000053828262000767565b50505060005b8181101562000077576200006e338262000081565b60010162000059565b5050505062000887565b6001600160a01b038216620000dd5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064015b60405180910390fd5b6000818152600260205260409020546001600160a01b031615620001445760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401620000d4565b6200015460008383600162000226565b6000818152600260205260409020546001600160a01b031615620001bb5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401620000d4565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60018111156200029f5760405162461bcd60e51b815260206004820152603560248201527f455243373231456e756d657261626c653a20636f6e736563757469766520747260448201527f616e7366657273206e6f7420737570706f7274656400000000000000000000006064820152608401620000d4565b816001600160a01b038516620002fe57620002f881600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b62000324565b836001600160a01b0316856001600160a01b031614620003245762000324858262000371565b6001600160a01b03841662000344576200033e8162000413565b6200036a565b846001600160a01b0316846001600160a01b0316146200036a576200036a8482620004cd565b5050505050565b60006001620003808462000513565b6200038c919062000833565b600083815260076020526040902054909150808214620003e0576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b600854600090620004279060019062000833565b600083815260096020526040812054600880549394509092849081106200045257620004526200085b565b9060005260206000200154905080600883815481106200047657620004766200085b565b6000918252602080832090910192909255828152600990915260408082208490558582528120556008805480620004b157620004b162000871565b6001900381819060005260206000200160009055905550505050565b6000620004da8362000513565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b60006001600160a01b0382166200057f5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401620000d4565b506001600160a01b031660009081526003602052604090205490565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620005c357600080fd5b81516001600160401b0380821115620005e057620005e06200059b565b604051601f8301601f19908116603f011681019082821181831017156200060b576200060b6200059b565b81604052838152602092508660208588010111156200062957600080fd5b600091505b838210156200064d57858201830151818301840152908201906200062e565b6000602085830101528094505050505092915050565b6000806000606084860312156200067957600080fd5b83516001600160401b03808211156200069157600080fd5b6200069f87838801620005b1565b94506020860151915080821115620006b657600080fd5b50620006c586828701620005b1565b925050604084015190509250925092565b600181811c90821680620006eb57607f821691505b6020821081036200070c57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111562000762576000816000526020600020601f850160051c810160208610156200073d5750805b601f850160051c820191505b818110156200075e5782815560010162000749565b5050505b505050565b81516001600160401b038111156200078357620007836200059b565b6200079b81620007948454620006d6565b8462000712565b602080601f831160018114620007d35760008415620007ba5750858301515b600019600386901b1c1916600185901b1785556200075e565b600085815260208120601f198616915b828110156200080457888601518255948401946001909101908401620007e3565b5085821015620008235787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b818103818111156200085557634e487b7160e01b600052601160045260246000fd5b92915050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b611dc680620008976000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80634f6ccce711610097578063a22cb46511610066578063a22cb4651461021b578063b88d4fde1461022e578063c87b56dd14610241578063e985e9c51461025457600080fd5b80634f6ccce7146101da5780636352211e146101ed57806370a082311461020057806395d89b411461021357600080fd5b806318160ddd116100d357806318160ddd1461018f57806323b872dd146101a15780632f745c59146101b457806342842e0e146101c757600080fd5b806301ffc9a71461010557806306fdde031461012d578063081812fc14610142578063095ea7b31461017a575b600080fd5b610118610113366004611917565b61029d565b60405190151581526020015b60405180910390f35b6101356102f9565b60405161012491906119a2565b6101556101503660046119b5565b61038b565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610124565b61018d6101883660046119f7565b6103bf565b005b6008545b604051908152602001610124565b61018d6101af366004611a21565b610550565b6101936101c23660046119f7565b6105f1565b61018d6101d5366004611a21565b6106c0565b6101936101e83660046119b5565b6106db565b6101556101fb3660046119b5565b610799565b61019361020e366004611a5d565b610825565b6101356108f3565b61018d610229366004611a78565b610902565b61018d61023c366004611ae3565b610911565b61013561024f3660046119b5565b6109b9565b610118610262366004611bdd565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260056020908152604080832093909416825291909152205460ff1690565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f780e9d630000000000000000000000000000000000000000000000000000000014806102f357506102f382610a52565b92915050565b60606000805461030890611c10565b80601f016020809104026020016040519081016040528092919081815260200182805461033490611c10565b80156103815780601f1061035657610100808354040283529160200191610381565b820191906000526020600020905b81548152906001019060200180831161036457829003601f168201915b5050505050905090565b600061039682610b35565b5060009081526004602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b60006103ca82610799565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361048c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560448201527f720000000000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff821614806104b557506104b58133610262565b610541576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152608401610483565b61054b8383610bc3565b505050565b61055a3382610c63565b6105e6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201527f72206f7220617070726f766564000000000000000000000000000000000000006064820152608401610483565b61054b838383610d23565b60006105fc83610825565b821061068a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201527f74206f6620626f756e64730000000000000000000000000000000000000000006064820152608401610483565b5073ffffffffffffffffffffffffffffffffffffffff919091166000908152600660209081526040808320938352929052205490565b61054b83838360405180602001604052806000815250610911565b60006106e660085490565b8210610774576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201527f7574206f6620626f756e647300000000000000000000000000000000000000006064820152608401610483565b6008828154811061078757610787611c63565b90600052602060002001549050919050565b60008181526002602052604081205473ffffffffffffffffffffffffffffffffffffffff16806102f3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e20494400000000000000006044820152606401610483565b600073ffffffffffffffffffffffffffffffffffffffff82166108ca576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f74206120766160448201527f6c6964206f776e657200000000000000000000000000000000000000000000006064820152608401610483565b5073ffffffffffffffffffffffffffffffffffffffff1660009081526003602052604090205490565b60606001805461030890611c10565b61090d33838361102b565b5050565b61091b3383610c63565b6109a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201527f72206f7220617070726f766564000000000000000000000000000000000000006064820152608401610483565b6109b384848484611158565b50505050565b60606109c482610b35565b6000610a0060408051808201909152600d81527f544553542d424153452d55524900000000000000000000000000000000000000602082015290565b90506000815111610a205760405180602001604052806000815250610a4b565b80610a2a846111fb565b604051602001610a3b929190611c92565b6040516020818303038152906040525b9392505050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f80ac58cd000000000000000000000000000000000000000000000000000000001480610ae557507fffffffff0000000000000000000000000000000000000000000000000000000082167f5b5e139f00000000000000000000000000000000000000000000000000000000145b806102f357507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316146102f3565b60008181526002602052604090205473ffffffffffffffffffffffffffffffffffffffff16610bc0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e20494400000000000000006044820152606401610483565b50565b600081815260046020526040902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff84169081179091558190610c1d82610799565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610c6f83610799565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610cdd575073ffffffffffffffffffffffffffffffffffffffff80821660009081526005602090815260408083209388168352929052205460ff165b80610d1b57508373ffffffffffffffffffffffffffffffffffffffff16610d038461038b565b73ffffffffffffffffffffffffffffffffffffffff16145b949350505050565b8273ffffffffffffffffffffffffffffffffffffffff16610d4382610799565b73ffffffffffffffffffffffffffffffffffffffff1614610de6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201527f6f776e65720000000000000000000000000000000000000000000000000000006064820152608401610483565b73ffffffffffffffffffffffffffffffffffffffff8216610e88576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610483565b610e9583838360016112b9565b8273ffffffffffffffffffffffffffffffffffffffff16610eb582610799565b73ffffffffffffffffffffffffffffffffffffffff1614610f58576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201527f6f776e65720000000000000000000000000000000000000000000000000000006064820152608401610483565b600081815260046020908152604080832080547fffffffffffffffffffffffff000000000000000000000000000000000000000090811690915573ffffffffffffffffffffffffffffffffffffffff8781168086526003855283862080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036110c0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610483565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526005602090815260408083209487168084529482529182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611163848484610d23565b61116f8484848461145d565b6109b3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e74657200000000000000000000000000006064820152608401610483565b6060600061120883611650565b600101905060008167ffffffffffffffff81111561122857611228611ab4565b6040519080825280601f01601f191660200182016040528015611252576020820181803683370190505b5090508181016020015b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a850494508461125c57509392505050565b600181111561134a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603560248201527f455243373231456e756d657261626c653a20636f6e736563757469766520747260448201527f616e7366657273206e6f7420737570706f7274656400000000000000000000006064820152608401610483565b8173ffffffffffffffffffffffffffffffffffffffff85166113b3576113ae81600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b6113f0565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16146113f0576113f08582611732565b73ffffffffffffffffffffffffffffffffffffffff841661141957611414816117e9565b611456565b8473ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614611456576114568482611898565b5050505050565b600073ffffffffffffffffffffffffffffffffffffffff84163b15611645576040517f150b7a0200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85169063150b7a02906114d4903390899088908890600401611cc1565b6020604051808303816000875af192505050801561152d575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820190925261152a91810190611d0a565b60015b6115fa573d80801561155b576040519150601f19603f3d011682016040523d82523d6000602084013e611560565b606091505b5080516000036115f2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e74657200000000000000000000000000006064820152608401610483565b805181602001fd5b7fffffffff00000000000000000000000000000000000000000000000000000000167f150b7a0200000000000000000000000000000000000000000000000000000000149050610d1b565b506001949350505050565b6000807a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611699577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef810000000083106116c5576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106116e357662386f26fc10000830492506010015b6305f5e10083106116fb576305f5e100830492506008015b612710831061170f57612710830492506004015b60648310611721576064830492506002015b600a83106102f35760010192915050565b6000600161173f84610825565b6117499190611d27565b6000838152600760205260409020549091508082146117a95773ffffffffffffffffffffffffffffffffffffffff841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b50600091825260076020908152604080842084905573ffffffffffffffffffffffffffffffffffffffff9094168352600681528383209183525290812055565b6008546000906117fb90600190611d27565b6000838152600960205260408120546008805493945090928490811061182357611823611c63565b90600052602060002001549050806008838154811061184457611844611c63565b600091825260208083209091019290925582815260099091526040808220849055858252812055600880548061187c5761187c611d61565b6001900381819060005260206000200160009055905550505050565b60006118a383610825565b73ffffffffffffffffffffffffffffffffffffffff9093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b7fffffffff0000000000000000000000000000000000000000000000000000000081168114610bc057600080fd5b60006020828403121561192957600080fd5b8135610a4b816118e9565b60005b8381101561194f578181015183820152602001611937565b50506000910152565b60008151808452611970816020860160208601611934565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602081526000610a4b6020830184611958565b6000602082840312156119c757600080fd5b5035919050565b803573ffffffffffffffffffffffffffffffffffffffff811681146119f257600080fd5b919050565b60008060408385031215611a0a57600080fd5b611a13836119ce565b946020939093013593505050565b600080600060608486031215611a3657600080fd5b611a3f846119ce565b9250611a4d602085016119ce565b9150604084013590509250925092565b600060208284031215611a6f57600080fd5b610a4b826119ce565b60008060408385031215611a8b57600080fd5b611a94836119ce565b915060208301358015158114611aa957600080fd5b809150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60008060008060808587031215611af957600080fd5b611b02856119ce565b9350611b10602086016119ce565b925060408501359150606085013567ffffffffffffffff80821115611b3457600080fd5b818701915087601f830112611b4857600080fd5b813581811115611b5a57611b5a611ab4565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908382118183101715611ba057611ba0611ab4565b816040528281528a6020848701011115611bb957600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215611bf057600080fd5b611bf9836119ce565b9150611c07602084016119ce565b90509250929050565b600181811c90821680611c2457607f821691505b602082108103611c5d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008351611ca4818460208801611934565b835190830190611cb8818360208801611934565b01949350505050565b600073ffffffffffffffffffffffffffffffffffffffff808716835280861660208401525083604083015260806060830152611d006080830184611958565b9695505050505050565b600060208284031215611d1c57600080fd5b8151610a4b816118e9565b818103818111156102f3577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea264697066735822122006c1e0fd5547911ee8ebac365150b286c2b78a897582da6b7c5539aee6e6252e64736f6c63430008160033';

type ERC721TestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721TestConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721Test__factory extends ContractFactory {
  constructor(...args: ERC721TestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name: string,
    symbol: string,
    _mintAmount: BigNumberish,
    overrides?: Overrides & { from?: string },
  ): Promise<ERC721Test> {
    return super.deploy(
      name,
      symbol,
      _mintAmount,
      overrides || {},
    ) as Promise<ERC721Test>;
  }
  override getDeployTransaction(
    name: string,
    symbol: string,
    _mintAmount: BigNumberish,
    overrides?: Overrides & { from?: string },
  ): TransactionRequest {
    return super.getDeployTransaction(
      name,
      symbol,
      _mintAmount,
      overrides || {},
    );
  }
  override attach(address: string): ERC721Test {
    return super.attach(address) as ERC721Test;
  }
  override connect(signer: Signer): ERC721Test__factory {
    return super.connect(signer) as ERC721Test__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721TestInterface {
    return new utils.Interface(_abi) as ERC721TestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): ERC721Test {
    return new Contract(address, _abi, signerOrProvider) as ERC721Test;
  }
}
