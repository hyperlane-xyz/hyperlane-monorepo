/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import { Contract, ContractFactory, Overrides, Signer, utils } from 'ethers';

import type {
  TestSendReceiver,
  TestSendReceiverInterface,
} from '../../../contracts/test/TestSendReceiver.js';

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bytes32',
        name: 'blockHash',
        type: 'bytes32',
      },
    ],
    name: 'Handled',
    type: 'event',
  },
  {
    inputs: [],
    name: 'HANDLE_GAS_AMOUNT',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IMailbox',
        name: '_mailbox',
        type: 'address',
      },
      {
        internalType: 'uint32',
        name: '_destinationDomain',
        type: 'uint32',
      },
      {
        internalType: 'bytes',
        name: '_messageBody',
        type: 'bytes',
      },
    ],
    name: 'dispatchToSelf',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IMailbox',
        name: '_mailbox',
        type: 'address',
      },
      {
        internalType: 'uint32',
        name: '_destinationDomain',
        type: 'uint32',
      },
      {
        internalType: 'bytes',
        name: '_messageBody',
        type: 'bytes',
      },
      {
        internalType: 'contract IPostDispatchHook',
        name: 'hook',
        type: 'address',
      },
    ],
    name: 'dispatchToSelf',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
      {
        internalType: 'bytes',
        name: '_messageBody',
        type: 'bytes',
      },
    ],
    name: 'handle',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x608060405234801561001057600080fd5b50610755806100206000396000f3fe60806040526004361061003f5760003560e01c806312f762221461004457806356d5d4751461006c578063c23ea0d714610081578063d5dda2bd14610094575b600080fd5b34801561005057600080fd5b5061005a61c35081565b60405190815260200160405180910390f35b61007f61007a36600461040c565b6100a7565b005b61007f61008f36600461048b565b61023f565b61007f6100a23660046104d6565b6102e3565b604080518082018252600f81527f6661696c4d657373616765426f64790000000000000000000000000000000000602082015290517f4469c327e99b06b91b7e0cd3655ddeaf744db0dbcdd9d6a3ef637edea1c82d459061010b9085908590610551565b60405180910390200361017f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f6661696c4d657373616765426f6479000000000000000000000000000000000060448201526064015b60405180910390fd5b6000610189610397565b90506000610198601083610561565b1590508015610203576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f626c6f636b206861736820656e647320696e20300000000000000000000000006044820152606401610176565b6040518281527f1e8284519093f867c8c8de794693d723718c98d6ad442f387dfd50dd1e3d93ba9060200160405180910390a150505050505050565b6040517ffa31de0100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85169063fa31de019034906102999087903090889088906004016105e5565b60206040518083038185885af11580156102b7573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906102dc9190610615565b5050505050565b604080516020810182526000815290517f10b83dc000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8716916310b83dc091349161034c91899130918a918a918a9060040161062e565b60206040518083038185885af115801561036a573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061038f9190610615565b505050505050565b60006103a46001436106df565b40905090565b803563ffffffff811681146103be57600080fd5b919050565b60008083601f8401126103d557600080fd5b50813567ffffffffffffffff8111156103ed57600080fd5b60208301915083602082850101111561040557600080fd5b9250929050565b6000806000806060858703121561042257600080fd5b61042b856103aa565b935060208501359250604085013567ffffffffffffffff81111561044e57600080fd5b61045a878288016103c3565b95989497509550505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461048857600080fd5b50565b600080600080606085870312156104a157600080fd5b84356104ac81610466565b93506104ba602086016103aa565b9250604085013567ffffffffffffffff81111561044e57600080fd5b6000806000806000608086880312156104ee57600080fd5b85356104f981610466565b9450610507602087016103aa565b9350604086013567ffffffffffffffff81111561052357600080fd5b61052f888289016103c3565b909450925050606086013561054381610466565b809150509295509295909350565b8183823760009101908152919050565b600082610597577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500690565b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b63ffffffff8516815283602082015260606040820152600061060b60608301848661059c565b9695505050505050565b60006020828403121561062757600080fd5b5051919050565b63ffffffff8716815260006020878184015260a0604084015261065560a08401878961059c565b8381036060850152855180825260005b81811015610680578781018401518382018501528301610665565b506000828201840152601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016010190506106d4608083018473ffffffffffffffffffffffffffffffffffffffff169052565b979650505050505050565b81810381811115610719577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b9291505056fea2646970667358221220e304fb12b24e82a00d83588d847522ffce16f7577a37e1614252f27d3339f85964736f6c63430008160033';

type TestSendReceiverConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestSendReceiverConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestSendReceiver__factory extends ContractFactory {
  constructor(...args: TestSendReceiverConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string },
  ): Promise<TestSendReceiver> {
    return super.deploy(overrides || {}) as Promise<TestSendReceiver>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string },
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TestSendReceiver {
    return super.attach(address) as TestSendReceiver;
  }
  override connect(signer: Signer): TestSendReceiver__factory {
    return super.connect(signer) as TestSendReceiver__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestSendReceiverInterface {
    return new utils.Interface(_abi) as TestSendReceiverInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): TestSendReceiver {
    return new Contract(address, _abi, signerOrProvider) as TestSendReceiver;
  }
}
