/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import { Contract, ContractFactory, Overrides, Signer, utils } from 'ethers';

import type {
  AttributeCheckpointFraud,
  AttributeCheckpointFraudInterface,
} from '../../contracts/AttributeCheckpointFraud.js';

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    inputs: [],
    name: 'PACKAGE_VERSION',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint32',
            name: 'origin',
            type: 'uint32',
          },
          {
            internalType: 'bytes32',
            name: 'merkleTree',
            type: 'bytes32',
          },
          {
            internalType: 'bytes32',
            name: 'root',
            type: 'bytes32',
          },
          {
            internalType: 'uint32',
            name: 'index',
            type: 'uint32',
          },
          {
            internalType: 'bytes32',
            name: 'messageId',
            type: 'bytes32',
          },
        ],
        internalType: 'struct Checkpoint',
        name: 'checkpoint',
        type: 'tuple',
      },
      {
        internalType: 'bytes32[32]',
        name: 'proof',
        type: 'bytes32[32]',
      },
      {
        internalType: 'bytes32',
        name: 'actualMessageId',
        type: 'bytes32',
      },
      {
        internalType: 'bytes',
        name: 'signature',
        type: 'bytes',
      },
    ],
    name: 'attributeMessageId',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint32',
            name: 'origin',
            type: 'uint32',
          },
          {
            internalType: 'bytes32',
            name: 'merkleTree',
            type: 'bytes32',
          },
          {
            internalType: 'bytes32',
            name: 'root',
            type: 'bytes32',
          },
          {
            internalType: 'uint32',
            name: 'index',
            type: 'uint32',
          },
          {
            internalType: 'bytes32',
            name: 'messageId',
            type: 'bytes32',
          },
        ],
        internalType: 'struct Checkpoint',
        name: 'checkpoint',
        type: 'tuple',
      },
      {
        internalType: 'bytes',
        name: 'signature',
        type: 'bytes',
      },
    ],
    name: 'attributePremature',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint32',
            name: 'origin',
            type: 'uint32',
          },
          {
            internalType: 'bytes32',
            name: 'merkleTree',
            type: 'bytes32',
          },
          {
            internalType: 'bytes32',
            name: 'root',
            type: 'bytes32',
          },
          {
            internalType: 'uint32',
            name: 'index',
            type: 'uint32',
          },
          {
            internalType: 'bytes32',
            name: 'messageId',
            type: 'bytes32',
          },
        ],
        internalType: 'struct Checkpoint',
        name: 'checkpoint',
        type: 'tuple',
      },
      {
        internalType: 'bytes32[32]',
        name: 'proof',
        type: 'bytes32[32]',
      },
      {
        internalType: 'bytes',
        name: 'signature',
        type: 'bytes',
      },
    ],
    name: 'attributeRoot',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint32',
            name: 'origin',
            type: 'uint32',
          },
          {
            internalType: 'bytes32',
            name: 'merkleTree',
            type: 'bytes32',
          },
          {
            internalType: 'bytes32',
            name: 'root',
            type: 'bytes32',
          },
          {
            internalType: 'uint32',
            name: 'index',
            type: 'uint32',
          },
          {
            internalType: 'bytes32',
            name: 'messageId',
            type: 'bytes32',
          },
        ],
        internalType: 'struct Checkpoint',
        name: 'checkpoint',
        type: 'tuple',
      },
      {
        internalType: 'bytes',
        name: 'signature',
        type: 'bytes',
      },
    ],
    name: 'attributeWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint32',
            name: 'origin',
            type: 'uint32',
          },
          {
            internalType: 'bytes32',
            name: 'merkleTree',
            type: 'bytes32',
          },
          {
            internalType: 'bytes32',
            name: 'root',
            type: 'bytes32',
          },
          {
            internalType: 'uint32',
            name: 'index',
            type: 'uint32',
          },
          {
            internalType: 'bytes32',
            name: 'messageId',
            type: 'bytes32',
          },
        ],
        internalType: 'struct Checkpoint',
        name: 'checkpoint',
        type: 'tuple',
      },
      {
        internalType: 'bytes',
        name: 'signature',
        type: 'bytes',
      },
    ],
    name: 'attributions',
    outputs: [
      {
        components: [
          {
            internalType: 'enum FraudType',
            name: 'fraudType',
            type: 'uint8',
          },
          {
            internalType: 'uint48',
            name: 'timestamp',
            type: 'uint48',
          },
        ],
        internalType: 'struct Attribution',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'checkpointFraudProofs',
    outputs: [
      {
        internalType: 'contract CheckpointFraudProofs',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'merkleTreeWhitelist',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'merkleTree',
        type: 'address',
      },
    ],
    name: 'whitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x60a0604052604051610010906100a4565b604051809103906000f08015801561002c573d6000803e3d6000fd5b506001600160a01b031660805234801561004557600080fd5b5061004f33610054565b6100b1565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6111f0806117a983390190565b6080516116c16100e8600039600081816101ce015281816102ad01528181610502015281816106da01526108e801526116c16000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c8063cd8ef6e811610081578063dc41877e1161005b578063dc41877e14610203578063f2fde38b14610236578063f427b08c1461024957600080fd5b8063cd8ef6e8146101a9578063ce74b587146101c9578063dc248729146101f057600080fd5b806393c44847116100b257806393c448471461013a5780639b19251a14610183578063cb12979d1461019657600080fd5b8063715018a6146100d957806381247022146100e35780638da5cb5b146100f6575b600080fd5b6100e161025c565b005b6100e16100f13660046112b4565b610270565b60005473ffffffffffffffffffffffffffffffffffffffff165b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6101766040518060400160405280600581526020017f372e312e3400000000000000000000000000000000000000000000000000000081525081565b6040516101319190611319565b6100e1610191366004611386565b6103c8565b6100e16101a43660046113c3565b6104c5565b6101bc6101b73660046113c3565b6105f0565b6040516101319190611446565b6101107f000000000000000000000000000000000000000000000000000000000000000081565b6100e16101fe3660046114a0565b61069d565b610226610211366004611386565b60016020526000908152604090205460ff1681565b6040519015158152602001610131565b6100e1610244366004611386565b6107f4565b6100e16102573660046113c3565b6108ab565b610264610a6f565b61026e6000610af0565b565b6040517f9b92ac4a00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690639b92ac4a906102e49087908790600401611572565b602060405180830381865afa158015610301573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103259190611591565b6103b5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f636865636b706f696e74206d7573742068617665206672617564756c656e742060448201527f726f6f740000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6103c28282866003610b65565b50505050565b6103d0610a6f565b73ffffffffffffffffffffffffffffffffffffffff81163b610473576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f6d65726b6c652074726565206d75737420626520612076616c696420636f6e7460448201527f726163740000000000000000000000000000000000000000000000000000000060648201526084016103ac565b73ffffffffffffffffffffffffffffffffffffffff16600090815260016020819052604090912080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169091179055565b6040517fa295224f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063a295224f906105379086906004016115b3565b602060405180830381865afa158015610554573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105789190611591565b6105de576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f636865636b706f696e74206d757374206265207072656d61747572650000000060448201526064016103ac565b6105eb8282856001610b65565b505050565b6040805180820190915260008082526020820152600080610612868686610d24565b73ffffffffffffffffffffffffffffffffffffffff82166000908152600260209081526040808320848452909152908190208151808301909252805493955091935091829060ff16600381111561066b5761066b611417565b600381111561067c5761067c611417565b81529054610100900465ffffffffffff166020909101529695505050505050565b6040517f1b78348e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690631b78348e90610713908890889088906004016115c1565b602060405180830381865afa158015610730573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107549190611591565b6107e0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f636865636b706f696e74206d7573742068617665206672617564756c656e742060448201527f6d6573736167652049440000000000000000000000000000000000000000000060648201526084016103ac565b6107ed8282876002610b65565b5050505050565b6107fc610a6f565b73ffffffffffffffffffffffffffffffffffffffff811661089f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016103ac565b6108a881610af0565b50565b6040517ff4f4edaf00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063f4f4edaf9061091d9086906004016115b3565b602060405180830381865afa15801561093a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095e9190611591565b6109c4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f636865636b706f696e74206d757374206265206c6f63616c000000000000000060448201526064016103ac565b600160006109d185610d8a565b73ffffffffffffffffffffffffffffffffffffffff16815260208101919091526040016000205460ff1615610a62576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f6d65726b6c6520747265652069732077686974656c697374656400000000000060448201526064016103ac565b6105eb8282856000610b65565b60005473ffffffffffffffffffffffffffffffffffffffff16331461026e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103ac565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080610b73848787610d24565b73ffffffffffffffffffffffffffffffffffffffff821660009081526002602090815260408083208484529091529020549193509150610100900465ffffffffffff1615610c43576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f667261756420616c7265616479206174747269627574656420746f207369676e60448201527f657220666f72206469676573740000000000000000000000000000000000000060648201526084016103ac565b6040518060400160405280846003811115610c6057610c60611417565b815265ffffffffffff421660209182015273ffffffffffffffffffffffffffffffffffffffff84166000908152600282526040808220858352909252208151815482907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001836003811115610cd957610cd9611417565b021790555060209190910151815465ffffffffffff909116610100027fffffffffffffffffffffffffffffffffffffffffffffffffff000000000000ff909116179055505050505050565b600080610d3e610d39368790038701876115e8565b610d9f565b9050610d808185858080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610e9492505050565b9150935093915050565b6000610d998260200135610eb8565b92915050565b80516020808301516040808501516060860151608087015183517fffffffff0000000000000000000000000000000000000000000000000000000060e098891b81168289015260248201969096527f48595045524c414e45000000000000000000000000000000000000000000000060448201528451808203602d018152604d82018652805190880120606d820152608d810193909352951b90921660ad83015260b1808301949094528051808303909401845260d1909101905281519101207f19457468657265756d205369676e6564204d6573736167653a0a3332000000006000908152601c91909152603c8120610d99565b6000806000610ea38585610f61565b91509150610eb081610fa6565b509392505050565b600073ffffffffffffffffffffffffffffffffffffffff821115610f5d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f5479706543617374733a2062797465733332546f41646472657373206f76657260448201527f666c6f770000000000000000000000000000000000000000000000000000000060648201526084016103ac565b5090565b6000808251604103610f975760208301516040840151606085015160001a610f8b87828585611159565b94509450505050610f9f565b506000905060025b9250929050565b6000816004811115610fba57610fba611417565b03610fc25750565b6001816004811115610fd657610fd6611417565b0361103d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016103ac565b600281600481111561105157611051611417565b036110b8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016103ac565b60038160048111156110cc576110cc611417565b036108a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60448201527f756500000000000000000000000000000000000000000000000000000000000060648201526084016103ac565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115611190575060009050600361123f565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156111e4573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff81166112385760006001925092505061123f565b9150600090505b94509492505050565b600060a0828403121561125a57600080fd5b50919050565b806104008101831015610d9957600080fd5b60008083601f84011261128457600080fd5b50813567ffffffffffffffff81111561129c57600080fd5b602083019150836020828501011115610f9f57600080fd5b6000806000806104c085870312156112cb57600080fd5b6112d58686611248565b93506112e48660a08701611260565b92506104a085013567ffffffffffffffff81111561130157600080fd5b61130d87828801611272565b95989497509550505050565b60006020808352835180602085015260005b818110156113475785810183015185820160400152820161132b565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b60006020828403121561139857600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146113bc57600080fd5b9392505050565b600080600060c084860312156113d857600080fd5b6113e28585611248565b925060a084013567ffffffffffffffff8111156113fe57600080fd5b61140a86828701611272565b9497909650939450505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8151604082019060048110611484577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8083525065ffffffffffff602084015116602083015292915050565b60008060008060006104e086880312156114b957600080fd5b6114c38787611248565b94506114d28760a08801611260565b93506104a086013592506104c086013567ffffffffffffffff8111156114f757600080fd5b61150388828901611272565b969995985093965092949392505050565b803563ffffffff8116811461152857600080fd5b919050565b63ffffffff8061153c83611514565b16835260208201356020840152604082013560408401528061156060608401611514565b16606084015250608090810135910152565b6104a08101611581828561152d565b6104008360a08401379392505050565b6000602082840312156115a357600080fd5b815180151581146113bc57600080fd5b60a08101610d99828461152d565b6104c081016115d0828661152d565b6104008460a0840137826104a0830152949350505050565b600060a082840312156115fa57600080fd5b60405160a0810181811067ffffffffffffffff82111715611644577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405261165083611514565b8152602083013560208201526040830135604082015261167260608401611514565b606082015260808301356080820152809150509291505056fea2646970667358221220d8ff0ab5c01137b766829a4c8078f4de9de965a4fd07b7ca39bdfd202bc187b764736f6c63430008160033608060405234801561001057600080fd5b506111d0806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80639b92ac4a1161005b5780639b92ac4a1461013e578063a295224f14610151578063e56f40bc14610164578063f4f4edaf146101bb57600080fd5b80631b78348e1461008d578063526607c2146100b557806354f5f3cb146100c857806393c44847146100f5575b600080fd5b6100a061009b366004610f2e565b6101ce565b60405190151581526020015b60405180910390f35b6100a06100c3366004610fac565b61030c565b6100db6100d6366004610ffd565b6103a7565b6040805192835263ffffffff9091166020830152016100ac565b6101316040518060400160405280600581526020017f372e312e3400000000000000000000000000000000000000000000000000000081525081565b6040516100ac9190611018565b6100a061014c366004611085565b6104a5565b6100a061015f3660046110bb565b610618565b61019f6101723660046110d7565b600060208181529281526040808220909352908152205463ffffffff811690640100000000900460ff1682565b6040805163ffffffff90931683529015156020830152016100ac565b6100a06101c93660046110bb565b61072c565b6000836101da8161072c565b610245576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f6d757374206265206c6f63616c20636865636b706f696e74000000000000000060448201526064015b60405180910390fd5b84848461026b610254846107ec565b6102646080860160608701611101565b838561030c565b6102f7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f6d657373616765206d757374206265206d656d626572206f662073746f72656460448201527f20636865636b706f696e74000000000000000000000000000000000000000000606482015260840161023c565b87608001358614159450505050509392505050565b600080610347848460208060200260405190810160405280929190826020800280828437600092019190915250505063ffffffff8816610801565b73ffffffffffffffffffffffffffffffffffffffff87166000908152602081815260408083208484529091529020805491925090640100000000900460ff16801561039c5750805463ffffffff808816911610155b979650505050505050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663907c0f926040518163ffffffff1660e01b81526004016040805180830381865afa1580156103f4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610418919061111e565b60408051808201825263ffffffff80841682526001602080840191825273ffffffffffffffffffffffffffffffffffffffff9099166000908152808a52848120878252909952929097209051815492511515640100000000027fffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000009093169716969096171790945593915050565b6000826104b18161072c565b610517576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f6d757374206265206c6f63616c20636865636b706f696e740000000000000000604482015260640161023c565b8383856080013561052a610254846107ec565b6105b6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f6d657373616765206d757374206265206d656d626572206f662073746f72656460448201527f20636865636b706f696e74000000000000000000000000000000000000000000606482015260840161023c565b6000610604886080013588602080602002604051908101604052809291908260208002808284376000920191909152506105f991505060808c0160608d01611101565b63ffffffff166108a7565b604089013514159550505050505092915050565b6000816106248161072c565b61068a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f6d757374206265206c6f63616c20636865636b706f696e740000000000000000604482015260640161023c565b6000610695846107ec565b73ffffffffffffffffffffffffffffffffffffffff166306661abd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106df573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610703919061114e565b905063ffffffff811661071c6080860160608701611101565b63ffffffff161015949350505050565b600080610738836107ec565b905073ffffffffffffffffffffffffffffffffffffffff81163b151580156107e557506107686020840184611101565b63ffffffff168173ffffffffffffffffffffffffffffffffffffffff16638d3638f46040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107dd919061114e565b63ffffffff16145b9392505050565b60006107fb826020013561097b565b92915050565b8260005b602081101561089f57600183821c1660008583602081106108285761082861116b565b6020020151905081600103610868576040805160208101839052908101859052606001604051602081830303815290604052805190602001209350610895565b60408051602081018690529081018290526060016040516020818303038152906040528051906020012093505b5050600101610805565b509392505050565b8260006108b2610a24565b905060005b602081101561097257600184821c81169081900361091e578582602081106108e1576108e161116b565b602002015184604051602001610901929190918252602082015260400190565b604051602081830303815290604052805190602001209350610969565b838383602081106109315761093161116b565b6020020151604051602001610950929190918252602082015260400190565b6040516020818303038152906040528051906020012093505b506001016108b7565b50509392505050565b600073ffffffffffffffffffffffffffffffffffffffff821115610a20576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f5479706543617374733a2062797465733332546f41646472657373206f76657260448201527f666c6f7700000000000000000000000000000000000000000000000000000000606482015260840161023c565b5090565b610a2c610ee5565b600081527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb560208201527fb4c11951957c6f8f642c4af61cd6b24640fec6dc7fc607ee8206a99e92410d3060408201527f21ddb9a356815c3fac1026b6dec5df3124afbadb485c9ba5a3e3398a04b7ba8560608201527fe58769b32a1beaf1ea27375a44095a0d1fb664ce2dd358e7fcbfb78c26a1934460808201527f0eb01ebfc9ed27500cd4dfc979272d1f0913cc9f66540d7e8005811109e1cf2d60a08201527f887c22bd8750d34016ac3c66b5ff102dacdd73f6b014e710b51e8022af9a196860c08201527fffd70157e48063fc33c97a050f7f640233bf646cc98d9524c6b92bcf3ab56f8360e08201527f9867cc5f7f196b93bae1e27e6320742445d290f2263827498b54fec539f756af6101008201527fcefad4e508c098b9a7e1d8feb19955fb02ba9675585078710969d3440f5054e06101208201527ff9dc3e7fe016e050eff260334f18a5d4fe391d82092319f5964f2e2eb7c1c3a56101408201527ff8b13a49e282f609c317a833fb8d976d11517c571d1221a265d25af778ecf8926101608201527f3490c6ceeb450aecdc82e28293031d10c7d73bf85e57bf041a97360aa2c5d99c6101808201527fc1df82d9c4b87413eae2ef048f94b4d3554cea73d92b0f7af96e0271c691e2bb6101a08201527f5c67add7c6caf302256adedf7ab114da0acfe870d449a3a489f781d659e8becc6101c08201527fda7bce9f4e8618b6bd2f4132ce798cdc7a60e7e1460a7299e3c6342a579626d26101e08201527f2733e50f526ec2fa19a22b31e8ed50f23cd1fdf94c9154ed3a7609a2f1ff981f6102008201527fe1d3b5c807b281e4683cc6d6315cf95b9ade8641defcb32372f1c126e398ef7a6102208201527f5a2dce0a8a7f68bb74560f8f71837c2c2ebbcbf7fffb42ae1896f13f7c7479a06102408201527fb46a28b6f55540f89444f63de0378e3d121be09e06cc9ded1c20e65876d36aa06102608201527fc65e9645644786b620e2dd2ad648ddfcbf4a7e5b1a3a4ecfe7f64667a3f0b7e26102808201527ff4418588ed35a2458cffeb39b93d26f18d2ab13bdce6aee58e7b99359ec2dfd96102a08201527f5a9c16dc00d6ef18b7933a6f8dc65ccb55667138776f7dea101070dc8796e3776102c08201527f4df84f40ae0c8229d0d6069e5c8f39a7c299677a09d367fc7b05e3bc380ee6526102e08201527fcdc72595f74c7b1043d0e1ffbab734648c838dfb0527d971b602bc216c9619ef6103008201527f0abf5ac974a1ed57f4050aa510dd9c74f508277b39d7973bb2dfccc5eeb0618d6103208201527fb8cd74046ff337f0a7bf2c8e03e10f642c1886798d71806ab1e888d9e5ee87d06103408201527f838c5655cb21c6cb83313b5a631175dff4963772cce9108188b34ac87c81c41e6103608201527f662ee4dd2dd7b2bc707961b1e646c4047669dcb6584f0d8d770daf5d7e7deb2e6103808201527f388ab20e2573d171a88108e79d820e98f26c0b84aa8b2f4aa4968dbb818ea3226103a08201527f93237c50ba75ee485f4c22adf2f741400bdf8d6a9cc7df7ecae576221665d7356103c08201527f8448818bb4ae4562849e949e17ac16e0be16688e156b5cf15e098c627c0056a96103e082015290565b6040518061040001604052806020906020820280368337509192915050565b600060a08284031215610f1657600080fd5b50919050565b8061040081018310156107fb57600080fd5b60008060006104c08486031215610f4457600080fd5b610f4e8585610f04565b9250610f5d8560a08601610f1c565b91506104a084013590509250925092565b803573ffffffffffffffffffffffffffffffffffffffff81168114610f9257600080fd5b919050565b63ffffffff81168114610fa957600080fd5b50565b6000806000806104608587031215610fc357600080fd5b610fcc85610f6e565b93506020850135610fdc81610f97565b925060408501359150610ff28660608701610f1c565b905092959194509250565b60006020828403121561100f57600080fd5b6107e582610f6e565b60006020808352835180602085015260005b818110156110465785810183015185820160400152820161102a565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b6000806104a0838503121561109957600080fd5b6110a38484610f04565b91506110b28460a08501610f1c565b90509250929050565b600060a082840312156110cd57600080fd5b6107e58383610f04565b600080604083850312156110ea57600080fd5b6110f383610f6e565b946020939093013593505050565b60006020828403121561111357600080fd5b81356107e581610f97565b6000806040838503121561113157600080fd5b82519150602083015161114381610f97565b809150509250929050565b60006020828403121561116057600080fd5b81516107e581610f97565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea2646970667358221220db201c5940d1203c7c1beab59383bd4b1668cc399a6236c50670c4cefe2727f964736f6c63430008160033';

type AttributeCheckpointFraudConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AttributeCheckpointFraudConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AttributeCheckpointFraud__factory extends ContractFactory {
  constructor(...args: AttributeCheckpointFraudConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string },
  ): Promise<AttributeCheckpointFraud> {
    return super.deploy(overrides || {}) as Promise<AttributeCheckpointFraud>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string },
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AttributeCheckpointFraud {
    return super.attach(address) as AttributeCheckpointFraud;
  }
  override connect(signer: Signer): AttributeCheckpointFraud__factory {
    return super.connect(signer) as AttributeCheckpointFraud__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AttributeCheckpointFraudInterface {
    return new utils.Interface(_abi) as AttributeCheckpointFraudInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): AttributeCheckpointFraud {
    return new Contract(
      address,
      _abi,
      signerOrProvider,
    ) as AttributeCheckpointFraud;
  }
}
