/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Provider } from '@ethersproject/providers';
import { Contract, Signer, utils } from 'ethers';

import type {
  IMessagingContext,
  IMessagingContextInterface,
} from '../../../../../@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingContext.js';

const _abi = [
  {
    inputs: [],
    name: 'getSendContext',
    outputs: [
      {
        internalType: 'uint32',
        name: 'dstEid',
        type: 'uint32',
      },
      {
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isSendingMessage',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
] as const;

export class IMessagingContext__factory {
  static readonly abi = _abi;
  static createInterface(): IMessagingContextInterface {
    return new utils.Interface(_abi) as IMessagingContextInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): IMessagingContext {
    return new Contract(address, _abi, signerOrProvider) as IMessagingContext;
  }
}
