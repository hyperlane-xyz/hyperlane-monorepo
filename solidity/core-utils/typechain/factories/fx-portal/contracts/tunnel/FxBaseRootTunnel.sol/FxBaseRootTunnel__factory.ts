/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Provider } from '@ethersproject/providers';
import { Contract, Signer, utils } from 'ethers';

import type {
  FxBaseRootTunnel,
  FxBaseRootTunnelInterface,
} from '../../../../../fx-portal/contracts/tunnel/FxBaseRootTunnel.sol/FxBaseRootTunnel.js';

const _abi = [
  {
    inputs: [],
    name: 'SEND_MESSAGE_EVENT_SIG',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'checkpointManager',
    outputs: [
      {
        internalType: 'contract ICheckpointManager',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'fxChildTunnel',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'fxRoot',
    outputs: [
      {
        internalType: 'contract IFxStateSender',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    name: 'processedExits',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'inputData',
        type: 'bytes',
      },
    ],
    name: 'receiveMessage',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_fxChildTunnel',
        type: 'address',
      },
    ],
    name: 'setFxChildTunnel',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const;

export class FxBaseRootTunnel__factory {
  static readonly abi = _abi;
  static createInterface(): FxBaseRootTunnelInterface {
    return new utils.Interface(_abi) as FxBaseRootTunnelInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): FxBaseRootTunnel {
    return new Contract(address, _abi, signerOrProvider) as FxBaseRootTunnel;
  }
}
