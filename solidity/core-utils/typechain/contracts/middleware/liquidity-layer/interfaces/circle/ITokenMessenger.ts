/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  EventFragment,
  FunctionFragment,
  Result,
} from '@ethersproject/abi';
import type { Listener, Provider } from '@ethersproject/providers';
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from 'ethers';

import type {
  OnEvent,
  TypedEvent,
  TypedEventFilter,
  TypedListener,
} from '../../../../../common.js';

export interface ITokenMessengerInterface extends utils.Interface {
  functions: {
    'depositForBurn(uint256,uint32,bytes32,address)': FunctionFragment;
    'depositForBurnWithCaller(uint256,uint32,bytes32,address,bytes32)': FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | 'depositForBurn'
      | 'depositForBurn(uint256,uint32,bytes32,address)'
      | 'depositForBurnWithCaller'
      | 'depositForBurnWithCaller(uint256,uint32,bytes32,address,bytes32)',
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: 'depositForBurn',
    values: [BigNumberish, BigNumberish, BytesLike, string],
  ): string;
  encodeFunctionData(
    functionFragment: 'depositForBurn(uint256,uint32,bytes32,address)',
    values: [BigNumberish, BigNumberish, BytesLike, string],
  ): string;
  encodeFunctionData(
    functionFragment: 'depositForBurnWithCaller',
    values: [BigNumberish, BigNumberish, BytesLike, string, BytesLike],
  ): string;
  encodeFunctionData(
    functionFragment: 'depositForBurnWithCaller(uint256,uint32,bytes32,address,bytes32)',
    values: [BigNumberish, BigNumberish, BytesLike, string, BytesLike],
  ): string;

  decodeFunctionResult(
    functionFragment: 'depositForBurn',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'depositForBurn(uint256,uint32,bytes32,address)',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'depositForBurnWithCaller',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'depositForBurnWithCaller(uint256,uint32,bytes32,address,bytes32)',
    data: BytesLike,
  ): Result;

  events: {
    'MessageSent(bytes)': EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: 'MessageSent'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'MessageSent(bytes)'): EventFragment;
}

export interface MessageSentEventObject {
  message: string;
}
export type MessageSentEvent = TypedEvent<[string], MessageSentEventObject>;

export type MessageSentEventFilter = TypedEventFilter<MessageSentEvent>;

export interface ITokenMessenger extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: ITokenMessengerInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined,
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>,
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>,
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    depositForBurn(
      _amount: BigNumberish,
      _destinationDomain: BigNumberish,
      _mintRecipient: BytesLike,
      _burnToken: string,
      overrides?: Overrides & { from?: string },
    ): Promise<ContractTransaction>;

    'depositForBurn(uint256,uint32,bytes32,address)'(
      _amount: BigNumberish,
      _destinationDomain: BigNumberish,
      _mintRecipient: BytesLike,
      _burnToken: string,
      overrides?: Overrides & { from?: string },
    ): Promise<ContractTransaction>;

    depositForBurnWithCaller(
      _amount: BigNumberish,
      _destinationDomain: BigNumberish,
      _mintRecipient: BytesLike,
      _burnToken: string,
      _destinationCaller: BytesLike,
      overrides?: Overrides & { from?: string },
    ): Promise<ContractTransaction>;

    'depositForBurnWithCaller(uint256,uint32,bytes32,address,bytes32)'(
      _amount: BigNumberish,
      _destinationDomain: BigNumberish,
      _mintRecipient: BytesLike,
      _burnToken: string,
      _destinationCaller: BytesLike,
      overrides?: Overrides & { from?: string },
    ): Promise<ContractTransaction>;
  };

  depositForBurn(
    _amount: BigNumberish,
    _destinationDomain: BigNumberish,
    _mintRecipient: BytesLike,
    _burnToken: string,
    overrides?: Overrides & { from?: string },
  ): Promise<ContractTransaction>;

  'depositForBurn(uint256,uint32,bytes32,address)'(
    _amount: BigNumberish,
    _destinationDomain: BigNumberish,
    _mintRecipient: BytesLike,
    _burnToken: string,
    overrides?: Overrides & { from?: string },
  ): Promise<ContractTransaction>;

  depositForBurnWithCaller(
    _amount: BigNumberish,
    _destinationDomain: BigNumberish,
    _mintRecipient: BytesLike,
    _burnToken: string,
    _destinationCaller: BytesLike,
    overrides?: Overrides & { from?: string },
  ): Promise<ContractTransaction>;

  'depositForBurnWithCaller(uint256,uint32,bytes32,address,bytes32)'(
    _amount: BigNumberish,
    _destinationDomain: BigNumberish,
    _mintRecipient: BytesLike,
    _burnToken: string,
    _destinationCaller: BytesLike,
    overrides?: Overrides & { from?: string },
  ): Promise<ContractTransaction>;

  callStatic: {
    depositForBurn(
      _amount: BigNumberish,
      _destinationDomain: BigNumberish,
      _mintRecipient: BytesLike,
      _burnToken: string,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    'depositForBurn(uint256,uint32,bytes32,address)'(
      _amount: BigNumberish,
      _destinationDomain: BigNumberish,
      _mintRecipient: BytesLike,
      _burnToken: string,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    depositForBurnWithCaller(
      _amount: BigNumberish,
      _destinationDomain: BigNumberish,
      _mintRecipient: BytesLike,
      _burnToken: string,
      _destinationCaller: BytesLike,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    'depositForBurnWithCaller(uint256,uint32,bytes32,address,bytes32)'(
      _amount: BigNumberish,
      _destinationDomain: BigNumberish,
      _mintRecipient: BytesLike,
      _burnToken: string,
      _destinationCaller: BytesLike,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;
  };

  filters: {
    'MessageSent(bytes)'(message?: null): MessageSentEventFilter;
    MessageSent(message?: null): MessageSentEventFilter;
  };

  estimateGas: {
    depositForBurn(
      _amount: BigNumberish,
      _destinationDomain: BigNumberish,
      _mintRecipient: BytesLike,
      _burnToken: string,
      overrides?: Overrides & { from?: string },
    ): Promise<BigNumber>;

    'depositForBurn(uint256,uint32,bytes32,address)'(
      _amount: BigNumberish,
      _destinationDomain: BigNumberish,
      _mintRecipient: BytesLike,
      _burnToken: string,
      overrides?: Overrides & { from?: string },
    ): Promise<BigNumber>;

    depositForBurnWithCaller(
      _amount: BigNumberish,
      _destinationDomain: BigNumberish,
      _mintRecipient: BytesLike,
      _burnToken: string,
      _destinationCaller: BytesLike,
      overrides?: Overrides & { from?: string },
    ): Promise<BigNumber>;

    'depositForBurnWithCaller(uint256,uint32,bytes32,address,bytes32)'(
      _amount: BigNumberish,
      _destinationDomain: BigNumberish,
      _mintRecipient: BytesLike,
      _burnToken: string,
      _destinationCaller: BytesLike,
      overrides?: Overrides & { from?: string },
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    depositForBurn(
      _amount: BigNumberish,
      _destinationDomain: BigNumberish,
      _mintRecipient: BytesLike,
      _burnToken: string,
      overrides?: Overrides & { from?: string },
    ): Promise<PopulatedTransaction>;

    'depositForBurn(uint256,uint32,bytes32,address)'(
      _amount: BigNumberish,
      _destinationDomain: BigNumberish,
      _mintRecipient: BytesLike,
      _burnToken: string,
      overrides?: Overrides & { from?: string },
    ): Promise<PopulatedTransaction>;

    depositForBurnWithCaller(
      _amount: BigNumberish,
      _destinationDomain: BigNumberish,
      _mintRecipient: BytesLike,
      _burnToken: string,
      _destinationCaller: BytesLike,
      overrides?: Overrides & { from?: string },
    ): Promise<PopulatedTransaction>;

    'depositForBurnWithCaller(uint256,uint32,bytes32,address,bytes32)'(
      _amount: BigNumberish,
      _destinationDomain: BigNumberish,
      _mintRecipient: BytesLike,
      _burnToken: string,
      _destinationCaller: BytesLike,
      overrides?: Overrides & { from?: string },
    ): Promise<PopulatedTransaction>;
  };
}
