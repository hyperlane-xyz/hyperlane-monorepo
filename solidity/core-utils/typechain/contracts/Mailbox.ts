/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  EventFragment,
  FunctionFragment,
  Result,
} from '@ethersproject/abi';
import type { Listener, Provider } from '@ethersproject/providers';
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PayableOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from 'ethers';

import type {
  OnEvent,
  TypedEvent,
  TypedEventFilter,
  TypedListener,
} from '../common.js';

export interface MailboxInterface extends utils.Interface {
  functions: {
    'PACKAGE_VERSION()': FunctionFragment;
    'VERSION()': FunctionFragment;
    'defaultHook()': FunctionFragment;
    'defaultIsm()': FunctionFragment;
    'delivered(bytes32)': FunctionFragment;
    'deployedBlock()': FunctionFragment;
    'dispatch(uint32,bytes32,bytes,bytes,address)': FunctionFragment;
    'dispatch(uint32,bytes32,bytes,bytes)': FunctionFragment;
    'dispatch(uint32,bytes32,bytes)': FunctionFragment;
    'initialize(address,address,address,address)': FunctionFragment;
    'latestDispatchedId()': FunctionFragment;
    'localDomain()': FunctionFragment;
    'nonce()': FunctionFragment;
    'owner()': FunctionFragment;
    'process(bytes,bytes)': FunctionFragment;
    'processedAt(bytes32)': FunctionFragment;
    'processor(bytes32)': FunctionFragment;
    'quoteDispatch(uint32,bytes32,bytes,bytes,address)': FunctionFragment;
    'quoteDispatch(uint32,bytes32,bytes)': FunctionFragment;
    'quoteDispatch(uint32,bytes32,bytes,bytes)': FunctionFragment;
    'recipientIsm(address)': FunctionFragment;
    'renounceOwnership()': FunctionFragment;
    'requiredHook()': FunctionFragment;
    'setDefaultHook(address)': FunctionFragment;
    'setDefaultIsm(address)': FunctionFragment;
    'setRequiredHook(address)': FunctionFragment;
    'transferOwnership(address)': FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | 'PACKAGE_VERSION'
      | 'PACKAGE_VERSION()'
      | 'VERSION'
      | 'VERSION()'
      | 'defaultHook'
      | 'defaultHook()'
      | 'defaultIsm'
      | 'defaultIsm()'
      | 'delivered'
      | 'delivered(bytes32)'
      | 'deployedBlock'
      | 'deployedBlock()'
      | 'dispatch(uint32,bytes32,bytes,bytes,address)'
      | 'dispatch(uint32,bytes32,bytes,bytes)'
      | 'dispatch(uint32,bytes32,bytes)'
      | 'initialize'
      | 'initialize(address,address,address,address)'
      | 'latestDispatchedId'
      | 'latestDispatchedId()'
      | 'localDomain'
      | 'localDomain()'
      | 'nonce'
      | 'nonce()'
      | 'owner'
      | 'owner()'
      | 'process'
      | 'process(bytes,bytes)'
      | 'processedAt'
      | 'processedAt(bytes32)'
      | 'processor'
      | 'processor(bytes32)'
      | 'quoteDispatch(uint32,bytes32,bytes,bytes,address)'
      | 'quoteDispatch(uint32,bytes32,bytes)'
      | 'quoteDispatch(uint32,bytes32,bytes,bytes)'
      | 'recipientIsm'
      | 'recipientIsm(address)'
      | 'renounceOwnership'
      | 'renounceOwnership()'
      | 'requiredHook'
      | 'requiredHook()'
      | 'setDefaultHook'
      | 'setDefaultHook(address)'
      | 'setDefaultIsm'
      | 'setDefaultIsm(address)'
      | 'setRequiredHook'
      | 'setRequiredHook(address)'
      | 'transferOwnership'
      | 'transferOwnership(address)',
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: 'PACKAGE_VERSION',
    values?: undefined,
  ): string;
  encodeFunctionData(
    functionFragment: 'PACKAGE_VERSION()',
    values?: undefined,
  ): string;
  encodeFunctionData(functionFragment: 'VERSION', values?: undefined): string;
  encodeFunctionData(functionFragment: 'VERSION()', values?: undefined): string;
  encodeFunctionData(
    functionFragment: 'defaultHook',
    values?: undefined,
  ): string;
  encodeFunctionData(
    functionFragment: 'defaultHook()',
    values?: undefined,
  ): string;
  encodeFunctionData(
    functionFragment: 'defaultIsm',
    values?: undefined,
  ): string;
  encodeFunctionData(
    functionFragment: 'defaultIsm()',
    values?: undefined,
  ): string;
  encodeFunctionData(
    functionFragment: 'delivered',
    values: [BytesLike],
  ): string;
  encodeFunctionData(
    functionFragment: 'delivered(bytes32)',
    values: [BytesLike],
  ): string;
  encodeFunctionData(
    functionFragment: 'deployedBlock',
    values?: undefined,
  ): string;
  encodeFunctionData(
    functionFragment: 'deployedBlock()',
    values?: undefined,
  ): string;
  encodeFunctionData(
    functionFragment: 'dispatch(uint32,bytes32,bytes,bytes,address)',
    values: [BigNumberish, BytesLike, BytesLike, BytesLike, string],
  ): string;
  encodeFunctionData(
    functionFragment: 'dispatch(uint32,bytes32,bytes,bytes)',
    values: [BigNumberish, BytesLike, BytesLike, BytesLike],
  ): string;
  encodeFunctionData(
    functionFragment: 'dispatch(uint32,bytes32,bytes)',
    values: [BigNumberish, BytesLike, BytesLike],
  ): string;
  encodeFunctionData(
    functionFragment: 'initialize',
    values: [string, string, string, string],
  ): string;
  encodeFunctionData(
    functionFragment: 'initialize(address,address,address,address)',
    values: [string, string, string, string],
  ): string;
  encodeFunctionData(
    functionFragment: 'latestDispatchedId',
    values?: undefined,
  ): string;
  encodeFunctionData(
    functionFragment: 'latestDispatchedId()',
    values?: undefined,
  ): string;
  encodeFunctionData(
    functionFragment: 'localDomain',
    values?: undefined,
  ): string;
  encodeFunctionData(
    functionFragment: 'localDomain()',
    values?: undefined,
  ): string;
  encodeFunctionData(functionFragment: 'nonce', values?: undefined): string;
  encodeFunctionData(functionFragment: 'nonce()', values?: undefined): string;
  encodeFunctionData(functionFragment: 'owner', values?: undefined): string;
  encodeFunctionData(functionFragment: 'owner()', values?: undefined): string;
  encodeFunctionData(
    functionFragment: 'process',
    values: [BytesLike, BytesLike],
  ): string;
  encodeFunctionData(
    functionFragment: 'process(bytes,bytes)',
    values: [BytesLike, BytesLike],
  ): string;
  encodeFunctionData(
    functionFragment: 'processedAt',
    values: [BytesLike],
  ): string;
  encodeFunctionData(
    functionFragment: 'processedAt(bytes32)',
    values: [BytesLike],
  ): string;
  encodeFunctionData(
    functionFragment: 'processor',
    values: [BytesLike],
  ): string;
  encodeFunctionData(
    functionFragment: 'processor(bytes32)',
    values: [BytesLike],
  ): string;
  encodeFunctionData(
    functionFragment: 'quoteDispatch(uint32,bytes32,bytes,bytes,address)',
    values: [BigNumberish, BytesLike, BytesLike, BytesLike, string],
  ): string;
  encodeFunctionData(
    functionFragment: 'quoteDispatch(uint32,bytes32,bytes)',
    values: [BigNumberish, BytesLike, BytesLike],
  ): string;
  encodeFunctionData(
    functionFragment: 'quoteDispatch(uint32,bytes32,bytes,bytes)',
    values: [BigNumberish, BytesLike, BytesLike, BytesLike],
  ): string;
  encodeFunctionData(
    functionFragment: 'recipientIsm',
    values: [string],
  ): string;
  encodeFunctionData(
    functionFragment: 'recipientIsm(address)',
    values: [string],
  ): string;
  encodeFunctionData(
    functionFragment: 'renounceOwnership',
    values?: undefined,
  ): string;
  encodeFunctionData(
    functionFragment: 'renounceOwnership()',
    values?: undefined,
  ): string;
  encodeFunctionData(
    functionFragment: 'requiredHook',
    values?: undefined,
  ): string;
  encodeFunctionData(
    functionFragment: 'requiredHook()',
    values?: undefined,
  ): string;
  encodeFunctionData(
    functionFragment: 'setDefaultHook',
    values: [string],
  ): string;
  encodeFunctionData(
    functionFragment: 'setDefaultHook(address)',
    values: [string],
  ): string;
  encodeFunctionData(
    functionFragment: 'setDefaultIsm',
    values: [string],
  ): string;
  encodeFunctionData(
    functionFragment: 'setDefaultIsm(address)',
    values: [string],
  ): string;
  encodeFunctionData(
    functionFragment: 'setRequiredHook',
    values: [string],
  ): string;
  encodeFunctionData(
    functionFragment: 'setRequiredHook(address)',
    values: [string],
  ): string;
  encodeFunctionData(
    functionFragment: 'transferOwnership',
    values: [string],
  ): string;
  encodeFunctionData(
    functionFragment: 'transferOwnership(address)',
    values: [string],
  ): string;

  decodeFunctionResult(
    functionFragment: 'PACKAGE_VERSION',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'PACKAGE_VERSION()',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(functionFragment: 'VERSION', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'VERSION()', data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: 'defaultHook',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'defaultHook()',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(functionFragment: 'defaultIsm', data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: 'defaultIsm()',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(functionFragment: 'delivered', data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: 'delivered(bytes32)',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'deployedBlock',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'deployedBlock()',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'dispatch(uint32,bytes32,bytes,bytes,address)',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'dispatch(uint32,bytes32,bytes,bytes)',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'dispatch(uint32,bytes32,bytes)',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(functionFragment: 'initialize', data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: 'initialize(address,address,address,address)',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'latestDispatchedId',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'latestDispatchedId()',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'localDomain',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'localDomain()',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(functionFragment: 'nonce', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'nonce()', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'owner', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'owner()', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'process', data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: 'process(bytes,bytes)',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'processedAt',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'processedAt(bytes32)',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(functionFragment: 'processor', data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: 'processor(bytes32)',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'quoteDispatch(uint32,bytes32,bytes,bytes,address)',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'quoteDispatch(uint32,bytes32,bytes)',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'quoteDispatch(uint32,bytes32,bytes,bytes)',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'recipientIsm',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'recipientIsm(address)',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'renounceOwnership',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'renounceOwnership()',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'requiredHook',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'requiredHook()',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'setDefaultHook',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'setDefaultHook(address)',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'setDefaultIsm',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'setDefaultIsm(address)',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'setRequiredHook',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'setRequiredHook(address)',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'transferOwnership',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'transferOwnership(address)',
    data: BytesLike,
  ): Result;

  events: {
    'DefaultHookSet(address)': EventFragment;
    'DefaultIsmSet(address)': EventFragment;
    'Dispatch(address,uint32,bytes32,bytes)': EventFragment;
    'DispatchId(bytes32)': EventFragment;
    'Initialized(uint8)': EventFragment;
    'OwnershipTransferred(address,address)': EventFragment;
    'Process(uint32,bytes32,address)': EventFragment;
    'ProcessId(bytes32)': EventFragment;
    'RequiredHookSet(address)': EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: 'DefaultHookSet'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'DefaultHookSet(address)'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'DefaultIsmSet'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'DefaultIsmSet(address)'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'Dispatch'): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: 'Dispatch(address,uint32,bytes32,bytes)',
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'DispatchId'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'DispatchId(bytes32)'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'Initialized'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'Initialized(uint8)'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'OwnershipTransferred'): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: 'OwnershipTransferred(address,address)',
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'Process'): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: 'Process(uint32,bytes32,address)',
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'ProcessId'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'ProcessId(bytes32)'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'RequiredHookSet'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'RequiredHookSet(address)'): EventFragment;
}

export interface DefaultHookSetEventObject {
  hook: string;
}
export type DefaultHookSetEvent = TypedEvent<
  [string],
  DefaultHookSetEventObject
>;

export type DefaultHookSetEventFilter = TypedEventFilter<DefaultHookSetEvent>;

export interface DefaultIsmSetEventObject {
  module: string;
}
export type DefaultIsmSetEvent = TypedEvent<[string], DefaultIsmSetEventObject>;

export type DefaultIsmSetEventFilter = TypedEventFilter<DefaultIsmSetEvent>;

export interface DispatchEventObject {
  sender: string;
  destination: number;
  recipient: string;
  message: string;
}
export type DispatchEvent = TypedEvent<
  [string, number, string, string],
  DispatchEventObject
>;

export type DispatchEventFilter = TypedEventFilter<DispatchEvent>;

export interface DispatchIdEventObject {
  messageId: string;
}
export type DispatchIdEvent = TypedEvent<[string], DispatchIdEventObject>;

export type DispatchIdEventFilter = TypedEventFilter<DispatchIdEvent>;

export interface InitializedEventObject {
  version: number;
}
export type InitializedEvent = TypedEvent<[number], InitializedEventObject>;

export type InitializedEventFilter = TypedEventFilter<InitializedEvent>;

export interface OwnershipTransferredEventObject {
  previousOwner: string;
  newOwner: string;
}
export type OwnershipTransferredEvent = TypedEvent<
  [string, string],
  OwnershipTransferredEventObject
>;

export type OwnershipTransferredEventFilter =
  TypedEventFilter<OwnershipTransferredEvent>;

export interface ProcessEventObject {
  origin: number;
  sender: string;
  recipient: string;
}
export type ProcessEvent = TypedEvent<
  [number, string, string],
  ProcessEventObject
>;

export type ProcessEventFilter = TypedEventFilter<ProcessEvent>;

export interface ProcessIdEventObject {
  messageId: string;
}
export type ProcessIdEvent = TypedEvent<[string], ProcessIdEventObject>;

export type ProcessIdEventFilter = TypedEventFilter<ProcessIdEvent>;

export interface RequiredHookSetEventObject {
  hook: string;
}
export type RequiredHookSetEvent = TypedEvent<
  [string],
  RequiredHookSetEventObject
>;

export type RequiredHookSetEventFilter = TypedEventFilter<RequiredHookSetEvent>;

export interface Mailbox extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: MailboxInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined,
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>,
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>,
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    PACKAGE_VERSION(overrides?: CallOverrides): Promise<[string]>;

    'PACKAGE_VERSION()'(overrides?: CallOverrides): Promise<[string]>;

    VERSION(overrides?: CallOverrides): Promise<[number]>;

    'VERSION()'(overrides?: CallOverrides): Promise<[number]>;

    defaultHook(overrides?: CallOverrides): Promise<[string]>;

    'defaultHook()'(overrides?: CallOverrides): Promise<[string]>;

    defaultIsm(overrides?: CallOverrides): Promise<[string]>;

    'defaultIsm()'(overrides?: CallOverrides): Promise<[string]>;

    delivered(_id: BytesLike, overrides?: CallOverrides): Promise<[boolean]>;

    'delivered(bytes32)'(
      _id: BytesLike,
      overrides?: CallOverrides,
    ): Promise<[boolean]>;

    deployedBlock(overrides?: CallOverrides): Promise<[BigNumber]>;

    'deployedBlock()'(overrides?: CallOverrides): Promise<[BigNumber]>;

    'dispatch(uint32,bytes32,bytes,bytes,address)'(
      destinationDomain: BigNumberish,
      recipientAddress: BytesLike,
      messageBody: BytesLike,
      metadata: BytesLike,
      hook: string,
      overrides?: PayableOverrides & { from?: string },
    ): Promise<ContractTransaction>;

    'dispatch(uint32,bytes32,bytes,bytes)'(
      destinationDomain: BigNumberish,
      recipientAddress: BytesLike,
      messageBody: BytesLike,
      hookMetadata: BytesLike,
      overrides?: PayableOverrides & { from?: string },
    ): Promise<ContractTransaction>;

    'dispatch(uint32,bytes32,bytes)'(
      _destinationDomain: BigNumberish,
      _recipientAddress: BytesLike,
      _messageBody: BytesLike,
      overrides?: PayableOverrides & { from?: string },
    ): Promise<ContractTransaction>;

    initialize(
      _owner: string,
      _defaultIsm: string,
      _defaultHook: string,
      _requiredHook: string,
      overrides?: Overrides & { from?: string },
    ): Promise<ContractTransaction>;

    'initialize(address,address,address,address)'(
      _owner: string,
      _defaultIsm: string,
      _defaultHook: string,
      _requiredHook: string,
      overrides?: Overrides & { from?: string },
    ): Promise<ContractTransaction>;

    latestDispatchedId(overrides?: CallOverrides): Promise<[string]>;

    'latestDispatchedId()'(overrides?: CallOverrides): Promise<[string]>;

    localDomain(overrides?: CallOverrides): Promise<[number]>;

    'localDomain()'(overrides?: CallOverrides): Promise<[number]>;

    nonce(overrides?: CallOverrides): Promise<[number]>;

    'nonce()'(overrides?: CallOverrides): Promise<[number]>;

    owner(overrides?: CallOverrides): Promise<[string]>;

    'owner()'(overrides?: CallOverrides): Promise<[string]>;

    process(
      _metadata: BytesLike,
      _message: BytesLike,
      overrides?: PayableOverrides & { from?: string },
    ): Promise<ContractTransaction>;

    'process(bytes,bytes)'(
      _metadata: BytesLike,
      _message: BytesLike,
      overrides?: PayableOverrides & { from?: string },
    ): Promise<ContractTransaction>;

    processedAt(_id: BytesLike, overrides?: CallOverrides): Promise<[number]>;

    'processedAt(bytes32)'(
      _id: BytesLike,
      overrides?: CallOverrides,
    ): Promise<[number]>;

    processor(_id: BytesLike, overrides?: CallOverrides): Promise<[string]>;

    'processor(bytes32)'(
      _id: BytesLike,
      overrides?: CallOverrides,
    ): Promise<[string]>;

    'quoteDispatch(uint32,bytes32,bytes,bytes,address)'(
      destinationDomain: BigNumberish,
      recipientAddress: BytesLike,
      messageBody: BytesLike,
      metadata: BytesLike,
      hook: string,
      overrides?: CallOverrides,
    ): Promise<[BigNumber] & { fee: BigNumber }>;

    'quoteDispatch(uint32,bytes32,bytes)'(
      destinationDomain: BigNumberish,
      recipientAddress: BytesLike,
      messageBody: BytesLike,
      overrides?: CallOverrides,
    ): Promise<[BigNumber] & { fee: BigNumber }>;

    'quoteDispatch(uint32,bytes32,bytes,bytes)'(
      destinationDomain: BigNumberish,
      recipientAddress: BytesLike,
      messageBody: BytesLike,
      defaultHookMetadata: BytesLike,
      overrides?: CallOverrides,
    ): Promise<[BigNumber] & { fee: BigNumber }>;

    recipientIsm(
      _recipient: string,
      overrides?: CallOverrides,
    ): Promise<[string]>;

    'recipientIsm(address)'(
      _recipient: string,
      overrides?: CallOverrides,
    ): Promise<[string]>;

    renounceOwnership(
      overrides?: Overrides & { from?: string },
    ): Promise<ContractTransaction>;

    'renounceOwnership()'(
      overrides?: Overrides & { from?: string },
    ): Promise<ContractTransaction>;

    requiredHook(overrides?: CallOverrides): Promise<[string]>;

    'requiredHook()'(overrides?: CallOverrides): Promise<[string]>;

    setDefaultHook(
      _hook: string,
      overrides?: Overrides & { from?: string },
    ): Promise<ContractTransaction>;

    'setDefaultHook(address)'(
      _hook: string,
      overrides?: Overrides & { from?: string },
    ): Promise<ContractTransaction>;

    setDefaultIsm(
      _module: string,
      overrides?: Overrides & { from?: string },
    ): Promise<ContractTransaction>;

    'setDefaultIsm(address)'(
      _module: string,
      overrides?: Overrides & { from?: string },
    ): Promise<ContractTransaction>;

    setRequiredHook(
      _hook: string,
      overrides?: Overrides & { from?: string },
    ): Promise<ContractTransaction>;

    'setRequiredHook(address)'(
      _hook: string,
      overrides?: Overrides & { from?: string },
    ): Promise<ContractTransaction>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides & { from?: string },
    ): Promise<ContractTransaction>;

    'transferOwnership(address)'(
      newOwner: string,
      overrides?: Overrides & { from?: string },
    ): Promise<ContractTransaction>;
  };

  PACKAGE_VERSION(overrides?: CallOverrides): Promise<string>;

  'PACKAGE_VERSION()'(overrides?: CallOverrides): Promise<string>;

  VERSION(overrides?: CallOverrides): Promise<number>;

  'VERSION()'(overrides?: CallOverrides): Promise<number>;

  defaultHook(overrides?: CallOverrides): Promise<string>;

  'defaultHook()'(overrides?: CallOverrides): Promise<string>;

  defaultIsm(overrides?: CallOverrides): Promise<string>;

  'defaultIsm()'(overrides?: CallOverrides): Promise<string>;

  delivered(_id: BytesLike, overrides?: CallOverrides): Promise<boolean>;

  'delivered(bytes32)'(
    _id: BytesLike,
    overrides?: CallOverrides,
  ): Promise<boolean>;

  deployedBlock(overrides?: CallOverrides): Promise<BigNumber>;

  'deployedBlock()'(overrides?: CallOverrides): Promise<BigNumber>;

  'dispatch(uint32,bytes32,bytes,bytes,address)'(
    destinationDomain: BigNumberish,
    recipientAddress: BytesLike,
    messageBody: BytesLike,
    metadata: BytesLike,
    hook: string,
    overrides?: PayableOverrides & { from?: string },
  ): Promise<ContractTransaction>;

  'dispatch(uint32,bytes32,bytes,bytes)'(
    destinationDomain: BigNumberish,
    recipientAddress: BytesLike,
    messageBody: BytesLike,
    hookMetadata: BytesLike,
    overrides?: PayableOverrides & { from?: string },
  ): Promise<ContractTransaction>;

  'dispatch(uint32,bytes32,bytes)'(
    _destinationDomain: BigNumberish,
    _recipientAddress: BytesLike,
    _messageBody: BytesLike,
    overrides?: PayableOverrides & { from?: string },
  ): Promise<ContractTransaction>;

  initialize(
    _owner: string,
    _defaultIsm: string,
    _defaultHook: string,
    _requiredHook: string,
    overrides?: Overrides & { from?: string },
  ): Promise<ContractTransaction>;

  'initialize(address,address,address,address)'(
    _owner: string,
    _defaultIsm: string,
    _defaultHook: string,
    _requiredHook: string,
    overrides?: Overrides & { from?: string },
  ): Promise<ContractTransaction>;

  latestDispatchedId(overrides?: CallOverrides): Promise<string>;

  'latestDispatchedId()'(overrides?: CallOverrides): Promise<string>;

  localDomain(overrides?: CallOverrides): Promise<number>;

  'localDomain()'(overrides?: CallOverrides): Promise<number>;

  nonce(overrides?: CallOverrides): Promise<number>;

  'nonce()'(overrides?: CallOverrides): Promise<number>;

  owner(overrides?: CallOverrides): Promise<string>;

  'owner()'(overrides?: CallOverrides): Promise<string>;

  process(
    _metadata: BytesLike,
    _message: BytesLike,
    overrides?: PayableOverrides & { from?: string },
  ): Promise<ContractTransaction>;

  'process(bytes,bytes)'(
    _metadata: BytesLike,
    _message: BytesLike,
    overrides?: PayableOverrides & { from?: string },
  ): Promise<ContractTransaction>;

  processedAt(_id: BytesLike, overrides?: CallOverrides): Promise<number>;

  'processedAt(bytes32)'(
    _id: BytesLike,
    overrides?: CallOverrides,
  ): Promise<number>;

  processor(_id: BytesLike, overrides?: CallOverrides): Promise<string>;

  'processor(bytes32)'(
    _id: BytesLike,
    overrides?: CallOverrides,
  ): Promise<string>;

  'quoteDispatch(uint32,bytes32,bytes,bytes,address)'(
    destinationDomain: BigNumberish,
    recipientAddress: BytesLike,
    messageBody: BytesLike,
    metadata: BytesLike,
    hook: string,
    overrides?: CallOverrides,
  ): Promise<BigNumber>;

  'quoteDispatch(uint32,bytes32,bytes)'(
    destinationDomain: BigNumberish,
    recipientAddress: BytesLike,
    messageBody: BytesLike,
    overrides?: CallOverrides,
  ): Promise<BigNumber>;

  'quoteDispatch(uint32,bytes32,bytes,bytes)'(
    destinationDomain: BigNumberish,
    recipientAddress: BytesLike,
    messageBody: BytesLike,
    defaultHookMetadata: BytesLike,
    overrides?: CallOverrides,
  ): Promise<BigNumber>;

  recipientIsm(_recipient: string, overrides?: CallOverrides): Promise<string>;

  'recipientIsm(address)'(
    _recipient: string,
    overrides?: CallOverrides,
  ): Promise<string>;

  renounceOwnership(
    overrides?: Overrides & { from?: string },
  ): Promise<ContractTransaction>;

  'renounceOwnership()'(
    overrides?: Overrides & { from?: string },
  ): Promise<ContractTransaction>;

  requiredHook(overrides?: CallOverrides): Promise<string>;

  'requiredHook()'(overrides?: CallOverrides): Promise<string>;

  setDefaultHook(
    _hook: string,
    overrides?: Overrides & { from?: string },
  ): Promise<ContractTransaction>;

  'setDefaultHook(address)'(
    _hook: string,
    overrides?: Overrides & { from?: string },
  ): Promise<ContractTransaction>;

  setDefaultIsm(
    _module: string,
    overrides?: Overrides & { from?: string },
  ): Promise<ContractTransaction>;

  'setDefaultIsm(address)'(
    _module: string,
    overrides?: Overrides & { from?: string },
  ): Promise<ContractTransaction>;

  setRequiredHook(
    _hook: string,
    overrides?: Overrides & { from?: string },
  ): Promise<ContractTransaction>;

  'setRequiredHook(address)'(
    _hook: string,
    overrides?: Overrides & { from?: string },
  ): Promise<ContractTransaction>;

  transferOwnership(
    newOwner: string,
    overrides?: Overrides & { from?: string },
  ): Promise<ContractTransaction>;

  'transferOwnership(address)'(
    newOwner: string,
    overrides?: Overrides & { from?: string },
  ): Promise<ContractTransaction>;

  callStatic: {
    PACKAGE_VERSION(overrides?: CallOverrides): Promise<string>;

    'PACKAGE_VERSION()'(overrides?: CallOverrides): Promise<string>;

    VERSION(overrides?: CallOverrides): Promise<number>;

    'VERSION()'(overrides?: CallOverrides): Promise<number>;

    defaultHook(overrides?: CallOverrides): Promise<string>;

    'defaultHook()'(overrides?: CallOverrides): Promise<string>;

    defaultIsm(overrides?: CallOverrides): Promise<string>;

    'defaultIsm()'(overrides?: CallOverrides): Promise<string>;

    delivered(_id: BytesLike, overrides?: CallOverrides): Promise<boolean>;

    'delivered(bytes32)'(
      _id: BytesLike,
      overrides?: CallOverrides,
    ): Promise<boolean>;

    deployedBlock(overrides?: CallOverrides): Promise<BigNumber>;

    'deployedBlock()'(overrides?: CallOverrides): Promise<BigNumber>;

    'dispatch(uint32,bytes32,bytes,bytes,address)'(
      destinationDomain: BigNumberish,
      recipientAddress: BytesLike,
      messageBody: BytesLike,
      metadata: BytesLike,
      hook: string,
      overrides?: CallOverrides,
    ): Promise<string>;

    'dispatch(uint32,bytes32,bytes,bytes)'(
      destinationDomain: BigNumberish,
      recipientAddress: BytesLike,
      messageBody: BytesLike,
      hookMetadata: BytesLike,
      overrides?: CallOverrides,
    ): Promise<string>;

    'dispatch(uint32,bytes32,bytes)'(
      _destinationDomain: BigNumberish,
      _recipientAddress: BytesLike,
      _messageBody: BytesLike,
      overrides?: CallOverrides,
    ): Promise<string>;

    initialize(
      _owner: string,
      _defaultIsm: string,
      _defaultHook: string,
      _requiredHook: string,
      overrides?: CallOverrides,
    ): Promise<void>;

    'initialize(address,address,address,address)'(
      _owner: string,
      _defaultIsm: string,
      _defaultHook: string,
      _requiredHook: string,
      overrides?: CallOverrides,
    ): Promise<void>;

    latestDispatchedId(overrides?: CallOverrides): Promise<string>;

    'latestDispatchedId()'(overrides?: CallOverrides): Promise<string>;

    localDomain(overrides?: CallOverrides): Promise<number>;

    'localDomain()'(overrides?: CallOverrides): Promise<number>;

    nonce(overrides?: CallOverrides): Promise<number>;

    'nonce()'(overrides?: CallOverrides): Promise<number>;

    owner(overrides?: CallOverrides): Promise<string>;

    'owner()'(overrides?: CallOverrides): Promise<string>;

    process(
      _metadata: BytesLike,
      _message: BytesLike,
      overrides?: CallOverrides,
    ): Promise<void>;

    'process(bytes,bytes)'(
      _metadata: BytesLike,
      _message: BytesLike,
      overrides?: CallOverrides,
    ): Promise<void>;

    processedAt(_id: BytesLike, overrides?: CallOverrides): Promise<number>;

    'processedAt(bytes32)'(
      _id: BytesLike,
      overrides?: CallOverrides,
    ): Promise<number>;

    processor(_id: BytesLike, overrides?: CallOverrides): Promise<string>;

    'processor(bytes32)'(
      _id: BytesLike,
      overrides?: CallOverrides,
    ): Promise<string>;

    'quoteDispatch(uint32,bytes32,bytes,bytes,address)'(
      destinationDomain: BigNumberish,
      recipientAddress: BytesLike,
      messageBody: BytesLike,
      metadata: BytesLike,
      hook: string,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    'quoteDispatch(uint32,bytes32,bytes)'(
      destinationDomain: BigNumberish,
      recipientAddress: BytesLike,
      messageBody: BytesLike,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    'quoteDispatch(uint32,bytes32,bytes,bytes)'(
      destinationDomain: BigNumberish,
      recipientAddress: BytesLike,
      messageBody: BytesLike,
      defaultHookMetadata: BytesLike,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    recipientIsm(
      _recipient: string,
      overrides?: CallOverrides,
    ): Promise<string>;

    'recipientIsm(address)'(
      _recipient: string,
      overrides?: CallOverrides,
    ): Promise<string>;

    renounceOwnership(overrides?: CallOverrides): Promise<void>;

    'renounceOwnership()'(overrides?: CallOverrides): Promise<void>;

    requiredHook(overrides?: CallOverrides): Promise<string>;

    'requiredHook()'(overrides?: CallOverrides): Promise<string>;

    setDefaultHook(_hook: string, overrides?: CallOverrides): Promise<void>;

    'setDefaultHook(address)'(
      _hook: string,
      overrides?: CallOverrides,
    ): Promise<void>;

    setDefaultIsm(_module: string, overrides?: CallOverrides): Promise<void>;

    'setDefaultIsm(address)'(
      _module: string,
      overrides?: CallOverrides,
    ): Promise<void>;

    setRequiredHook(_hook: string, overrides?: CallOverrides): Promise<void>;

    'setRequiredHook(address)'(
      _hook: string,
      overrides?: CallOverrides,
    ): Promise<void>;

    transferOwnership(
      newOwner: string,
      overrides?: CallOverrides,
    ): Promise<void>;

    'transferOwnership(address)'(
      newOwner: string,
      overrides?: CallOverrides,
    ): Promise<void>;
  };

  filters: {
    'DefaultHookSet(address)'(hook?: string | null): DefaultHookSetEventFilter;
    DefaultHookSet(hook?: string | null): DefaultHookSetEventFilter;

    'DefaultIsmSet(address)'(module?: string | null): DefaultIsmSetEventFilter;
    DefaultIsmSet(module?: string | null): DefaultIsmSetEventFilter;

    'Dispatch(address,uint32,bytes32,bytes)'(
      sender?: string | null,
      destination?: BigNumberish | null,
      recipient?: BytesLike | null,
      message?: null,
    ): DispatchEventFilter;
    Dispatch(
      sender?: string | null,
      destination?: BigNumberish | null,
      recipient?: BytesLike | null,
      message?: null,
    ): DispatchEventFilter;

    'DispatchId(bytes32)'(messageId?: BytesLike | null): DispatchIdEventFilter;
    DispatchId(messageId?: BytesLike | null): DispatchIdEventFilter;

    'Initialized(uint8)'(version?: null): InitializedEventFilter;
    Initialized(version?: null): InitializedEventFilter;

    'OwnershipTransferred(address,address)'(
      previousOwner?: string | null,
      newOwner?: string | null,
    ): OwnershipTransferredEventFilter;
    OwnershipTransferred(
      previousOwner?: string | null,
      newOwner?: string | null,
    ): OwnershipTransferredEventFilter;

    'Process(uint32,bytes32,address)'(
      origin?: BigNumberish | null,
      sender?: BytesLike | null,
      recipient?: string | null,
    ): ProcessEventFilter;
    Process(
      origin?: BigNumberish | null,
      sender?: BytesLike | null,
      recipient?: string | null,
    ): ProcessEventFilter;

    'ProcessId(bytes32)'(messageId?: BytesLike | null): ProcessIdEventFilter;
    ProcessId(messageId?: BytesLike | null): ProcessIdEventFilter;

    'RequiredHookSet(address)'(
      hook?: string | null,
    ): RequiredHookSetEventFilter;
    RequiredHookSet(hook?: string | null): RequiredHookSetEventFilter;
  };

  estimateGas: {
    PACKAGE_VERSION(overrides?: CallOverrides): Promise<BigNumber>;

    'PACKAGE_VERSION()'(overrides?: CallOverrides): Promise<BigNumber>;

    VERSION(overrides?: CallOverrides): Promise<BigNumber>;

    'VERSION()'(overrides?: CallOverrides): Promise<BigNumber>;

    defaultHook(overrides?: CallOverrides): Promise<BigNumber>;

    'defaultHook()'(overrides?: CallOverrides): Promise<BigNumber>;

    defaultIsm(overrides?: CallOverrides): Promise<BigNumber>;

    'defaultIsm()'(overrides?: CallOverrides): Promise<BigNumber>;

    delivered(_id: BytesLike, overrides?: CallOverrides): Promise<BigNumber>;

    'delivered(bytes32)'(
      _id: BytesLike,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    deployedBlock(overrides?: CallOverrides): Promise<BigNumber>;

    'deployedBlock()'(overrides?: CallOverrides): Promise<BigNumber>;

    'dispatch(uint32,bytes32,bytes,bytes,address)'(
      destinationDomain: BigNumberish,
      recipientAddress: BytesLike,
      messageBody: BytesLike,
      metadata: BytesLike,
      hook: string,
      overrides?: PayableOverrides & { from?: string },
    ): Promise<BigNumber>;

    'dispatch(uint32,bytes32,bytes,bytes)'(
      destinationDomain: BigNumberish,
      recipientAddress: BytesLike,
      messageBody: BytesLike,
      hookMetadata: BytesLike,
      overrides?: PayableOverrides & { from?: string },
    ): Promise<BigNumber>;

    'dispatch(uint32,bytes32,bytes)'(
      _destinationDomain: BigNumberish,
      _recipientAddress: BytesLike,
      _messageBody: BytesLike,
      overrides?: PayableOverrides & { from?: string },
    ): Promise<BigNumber>;

    initialize(
      _owner: string,
      _defaultIsm: string,
      _defaultHook: string,
      _requiredHook: string,
      overrides?: Overrides & { from?: string },
    ): Promise<BigNumber>;

    'initialize(address,address,address,address)'(
      _owner: string,
      _defaultIsm: string,
      _defaultHook: string,
      _requiredHook: string,
      overrides?: Overrides & { from?: string },
    ): Promise<BigNumber>;

    latestDispatchedId(overrides?: CallOverrides): Promise<BigNumber>;

    'latestDispatchedId()'(overrides?: CallOverrides): Promise<BigNumber>;

    localDomain(overrides?: CallOverrides): Promise<BigNumber>;

    'localDomain()'(overrides?: CallOverrides): Promise<BigNumber>;

    nonce(overrides?: CallOverrides): Promise<BigNumber>;

    'nonce()'(overrides?: CallOverrides): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<BigNumber>;

    'owner()'(overrides?: CallOverrides): Promise<BigNumber>;

    process(
      _metadata: BytesLike,
      _message: BytesLike,
      overrides?: PayableOverrides & { from?: string },
    ): Promise<BigNumber>;

    'process(bytes,bytes)'(
      _metadata: BytesLike,
      _message: BytesLike,
      overrides?: PayableOverrides & { from?: string },
    ): Promise<BigNumber>;

    processedAt(_id: BytesLike, overrides?: CallOverrides): Promise<BigNumber>;

    'processedAt(bytes32)'(
      _id: BytesLike,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    processor(_id: BytesLike, overrides?: CallOverrides): Promise<BigNumber>;

    'processor(bytes32)'(
      _id: BytesLike,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    'quoteDispatch(uint32,bytes32,bytes,bytes,address)'(
      destinationDomain: BigNumberish,
      recipientAddress: BytesLike,
      messageBody: BytesLike,
      metadata: BytesLike,
      hook: string,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    'quoteDispatch(uint32,bytes32,bytes)'(
      destinationDomain: BigNumberish,
      recipientAddress: BytesLike,
      messageBody: BytesLike,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    'quoteDispatch(uint32,bytes32,bytes,bytes)'(
      destinationDomain: BigNumberish,
      recipientAddress: BytesLike,
      messageBody: BytesLike,
      defaultHookMetadata: BytesLike,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    recipientIsm(
      _recipient: string,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    'recipientIsm(address)'(
      _recipient: string,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    renounceOwnership(
      overrides?: Overrides & { from?: string },
    ): Promise<BigNumber>;

    'renounceOwnership()'(
      overrides?: Overrides & { from?: string },
    ): Promise<BigNumber>;

    requiredHook(overrides?: CallOverrides): Promise<BigNumber>;

    'requiredHook()'(overrides?: CallOverrides): Promise<BigNumber>;

    setDefaultHook(
      _hook: string,
      overrides?: Overrides & { from?: string },
    ): Promise<BigNumber>;

    'setDefaultHook(address)'(
      _hook: string,
      overrides?: Overrides & { from?: string },
    ): Promise<BigNumber>;

    setDefaultIsm(
      _module: string,
      overrides?: Overrides & { from?: string },
    ): Promise<BigNumber>;

    'setDefaultIsm(address)'(
      _module: string,
      overrides?: Overrides & { from?: string },
    ): Promise<BigNumber>;

    setRequiredHook(
      _hook: string,
      overrides?: Overrides & { from?: string },
    ): Promise<BigNumber>;

    'setRequiredHook(address)'(
      _hook: string,
      overrides?: Overrides & { from?: string },
    ): Promise<BigNumber>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides & { from?: string },
    ): Promise<BigNumber>;

    'transferOwnership(address)'(
      newOwner: string,
      overrides?: Overrides & { from?: string },
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    PACKAGE_VERSION(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    'PACKAGE_VERSION()'(
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    VERSION(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    'VERSION()'(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    defaultHook(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    'defaultHook()'(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    defaultIsm(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    'defaultIsm()'(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    delivered(
      _id: BytesLike,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    'delivered(bytes32)'(
      _id: BytesLike,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    deployedBlock(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    'deployedBlock()'(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    'dispatch(uint32,bytes32,bytes,bytes,address)'(
      destinationDomain: BigNumberish,
      recipientAddress: BytesLike,
      messageBody: BytesLike,
      metadata: BytesLike,
      hook: string,
      overrides?: PayableOverrides & { from?: string },
    ): Promise<PopulatedTransaction>;

    'dispatch(uint32,bytes32,bytes,bytes)'(
      destinationDomain: BigNumberish,
      recipientAddress: BytesLike,
      messageBody: BytesLike,
      hookMetadata: BytesLike,
      overrides?: PayableOverrides & { from?: string },
    ): Promise<PopulatedTransaction>;

    'dispatch(uint32,bytes32,bytes)'(
      _destinationDomain: BigNumberish,
      _recipientAddress: BytesLike,
      _messageBody: BytesLike,
      overrides?: PayableOverrides & { from?: string },
    ): Promise<PopulatedTransaction>;

    initialize(
      _owner: string,
      _defaultIsm: string,
      _defaultHook: string,
      _requiredHook: string,
      overrides?: Overrides & { from?: string },
    ): Promise<PopulatedTransaction>;

    'initialize(address,address,address,address)'(
      _owner: string,
      _defaultIsm: string,
      _defaultHook: string,
      _requiredHook: string,
      overrides?: Overrides & { from?: string },
    ): Promise<PopulatedTransaction>;

    latestDispatchedId(
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    'latestDispatchedId()'(
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    localDomain(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    'localDomain()'(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    nonce(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    'nonce()'(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    'owner()'(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    process(
      _metadata: BytesLike,
      _message: BytesLike,
      overrides?: PayableOverrides & { from?: string },
    ): Promise<PopulatedTransaction>;

    'process(bytes,bytes)'(
      _metadata: BytesLike,
      _message: BytesLike,
      overrides?: PayableOverrides & { from?: string },
    ): Promise<PopulatedTransaction>;

    processedAt(
      _id: BytesLike,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    'processedAt(bytes32)'(
      _id: BytesLike,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    processor(
      _id: BytesLike,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    'processor(bytes32)'(
      _id: BytesLike,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    'quoteDispatch(uint32,bytes32,bytes,bytes,address)'(
      destinationDomain: BigNumberish,
      recipientAddress: BytesLike,
      messageBody: BytesLike,
      metadata: BytesLike,
      hook: string,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    'quoteDispatch(uint32,bytes32,bytes)'(
      destinationDomain: BigNumberish,
      recipientAddress: BytesLike,
      messageBody: BytesLike,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    'quoteDispatch(uint32,bytes32,bytes,bytes)'(
      destinationDomain: BigNumberish,
      recipientAddress: BytesLike,
      messageBody: BytesLike,
      defaultHookMetadata: BytesLike,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    recipientIsm(
      _recipient: string,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    'recipientIsm(address)'(
      _recipient: string,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    renounceOwnership(
      overrides?: Overrides & { from?: string },
    ): Promise<PopulatedTransaction>;

    'renounceOwnership()'(
      overrides?: Overrides & { from?: string },
    ): Promise<PopulatedTransaction>;

    requiredHook(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    'requiredHook()'(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    setDefaultHook(
      _hook: string,
      overrides?: Overrides & { from?: string },
    ): Promise<PopulatedTransaction>;

    'setDefaultHook(address)'(
      _hook: string,
      overrides?: Overrides & { from?: string },
    ): Promise<PopulatedTransaction>;

    setDefaultIsm(
      _module: string,
      overrides?: Overrides & { from?: string },
    ): Promise<PopulatedTransaction>;

    'setDefaultIsm(address)'(
      _module: string,
      overrides?: Overrides & { from?: string },
    ): Promise<PopulatedTransaction>;

    setRequiredHook(
      _hook: string,
      overrides?: Overrides & { from?: string },
    ): Promise<PopulatedTransaction>;

    'setRequiredHook(address)'(
      _hook: string,
      overrides?: Overrides & { from?: string },
    ): Promise<PopulatedTransaction>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides & { from?: string },
    ): Promise<PopulatedTransaction>;

    'transferOwnership(address)'(
      newOwner: string,
      overrides?: Overrides & { from?: string },
    ): Promise<PopulatedTransaction>;
  };
}
