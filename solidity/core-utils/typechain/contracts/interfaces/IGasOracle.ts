/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { FunctionFragment, Result } from '@ethersproject/abi';
import type { Listener, Provider } from '@ethersproject/providers';
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from 'ethers';

import type {
  OnEvent,
  TypedEvent,
  TypedEventFilter,
  TypedListener,
} from '../../common.js';

export interface IGasOracleInterface extends utils.Interface {
  functions: {
    'getExchangeRateAndGasPrice(uint32)': FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | 'getExchangeRateAndGasPrice'
      | 'getExchangeRateAndGasPrice(uint32)',
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: 'getExchangeRateAndGasPrice',
    values: [BigNumberish],
  ): string;
  encodeFunctionData(
    functionFragment: 'getExchangeRateAndGasPrice(uint32)',
    values: [BigNumberish],
  ): string;

  decodeFunctionResult(
    functionFragment: 'getExchangeRateAndGasPrice',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'getExchangeRateAndGasPrice(uint32)',
    data: BytesLike,
  ): Result;

  events: {};
}

export interface IGasOracle extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: IGasOracleInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined,
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>,
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>,
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    getExchangeRateAndGasPrice(
      _destinationDomain: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<
      [BigNumber, BigNumber] & {
        tokenExchangeRate: BigNumber;
        gasPrice: BigNumber;
      }
    >;

    'getExchangeRateAndGasPrice(uint32)'(
      _destinationDomain: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<
      [BigNumber, BigNumber] & {
        tokenExchangeRate: BigNumber;
        gasPrice: BigNumber;
      }
    >;
  };

  getExchangeRateAndGasPrice(
    _destinationDomain: BigNumberish,
    overrides?: CallOverrides,
  ): Promise<
    [BigNumber, BigNumber] & {
      tokenExchangeRate: BigNumber;
      gasPrice: BigNumber;
    }
  >;

  'getExchangeRateAndGasPrice(uint32)'(
    _destinationDomain: BigNumberish,
    overrides?: CallOverrides,
  ): Promise<
    [BigNumber, BigNumber] & {
      tokenExchangeRate: BigNumber;
      gasPrice: BigNumber;
    }
  >;

  callStatic: {
    getExchangeRateAndGasPrice(
      _destinationDomain: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<
      [BigNumber, BigNumber] & {
        tokenExchangeRate: BigNumber;
        gasPrice: BigNumber;
      }
    >;

    'getExchangeRateAndGasPrice(uint32)'(
      _destinationDomain: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<
      [BigNumber, BigNumber] & {
        tokenExchangeRate: BigNumber;
        gasPrice: BigNumber;
      }
    >;
  };

  filters: {};

  estimateGas: {
    getExchangeRateAndGasPrice(
      _destinationDomain: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    'getExchangeRateAndGasPrice(uint32)'(
      _destinationDomain: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    getExchangeRateAndGasPrice(
      _destinationDomain: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    'getExchangeRateAndGasPrice(uint32)'(
      _destinationDomain: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;
  };
}
