/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { FunctionFragment, Result } from '@ethersproject/abi';
import type { Listener, Provider } from '@ethersproject/providers';
import type {
  BaseContract,
  BigNumber,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from 'ethers';

import type {
  OnEvent,
  TypedEvent,
  TypedEventFilter,
  TypedListener,
} from '../../common.js';

export interface IValidatorAnnounceInterface extends utils.Interface {
  functions: {
    'announce(address,string,bytes)': FunctionFragment;
    'getAnnouncedStorageLocations(address[])': FunctionFragment;
    'getAnnouncedValidators()': FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | 'announce'
      | 'announce(address,string,bytes)'
      | 'getAnnouncedStorageLocations'
      | 'getAnnouncedStorageLocations(address[])'
      | 'getAnnouncedValidators'
      | 'getAnnouncedValidators()',
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: 'announce',
    values: [string, string, BytesLike],
  ): string;
  encodeFunctionData(
    functionFragment: 'announce(address,string,bytes)',
    values: [string, string, BytesLike],
  ): string;
  encodeFunctionData(
    functionFragment: 'getAnnouncedStorageLocations',
    values: [string[]],
  ): string;
  encodeFunctionData(
    functionFragment: 'getAnnouncedStorageLocations(address[])',
    values: [string[]],
  ): string;
  encodeFunctionData(
    functionFragment: 'getAnnouncedValidators',
    values?: undefined,
  ): string;
  encodeFunctionData(
    functionFragment: 'getAnnouncedValidators()',
    values?: undefined,
  ): string;

  decodeFunctionResult(functionFragment: 'announce', data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: 'announce(address,string,bytes)',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'getAnnouncedStorageLocations',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'getAnnouncedStorageLocations(address[])',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'getAnnouncedValidators',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'getAnnouncedValidators()',
    data: BytesLike,
  ): Result;

  events: {};
}

export interface IValidatorAnnounce extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: IValidatorAnnounceInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined,
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>,
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>,
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    announce(
      _validator: string,
      _storageLocation: string,
      _signature: BytesLike,
      overrides?: Overrides & { from?: string },
    ): Promise<ContractTransaction>;

    'announce(address,string,bytes)'(
      _validator: string,
      _storageLocation: string,
      _signature: BytesLike,
      overrides?: Overrides & { from?: string },
    ): Promise<ContractTransaction>;

    getAnnouncedStorageLocations(
      _validators: string[],
      overrides?: CallOverrides,
    ): Promise<[string[][]]>;

    'getAnnouncedStorageLocations(address[])'(
      _validators: string[],
      overrides?: CallOverrides,
    ): Promise<[string[][]]>;

    getAnnouncedValidators(overrides?: CallOverrides): Promise<[string[]]>;

    'getAnnouncedValidators()'(overrides?: CallOverrides): Promise<[string[]]>;
  };

  announce(
    _validator: string,
    _storageLocation: string,
    _signature: BytesLike,
    overrides?: Overrides & { from?: string },
  ): Promise<ContractTransaction>;

  'announce(address,string,bytes)'(
    _validator: string,
    _storageLocation: string,
    _signature: BytesLike,
    overrides?: Overrides & { from?: string },
  ): Promise<ContractTransaction>;

  getAnnouncedStorageLocations(
    _validators: string[],
    overrides?: CallOverrides,
  ): Promise<string[][]>;

  'getAnnouncedStorageLocations(address[])'(
    _validators: string[],
    overrides?: CallOverrides,
  ): Promise<string[][]>;

  getAnnouncedValidators(overrides?: CallOverrides): Promise<string[]>;

  'getAnnouncedValidators()'(overrides?: CallOverrides): Promise<string[]>;

  callStatic: {
    announce(
      _validator: string,
      _storageLocation: string,
      _signature: BytesLike,
      overrides?: CallOverrides,
    ): Promise<boolean>;

    'announce(address,string,bytes)'(
      _validator: string,
      _storageLocation: string,
      _signature: BytesLike,
      overrides?: CallOverrides,
    ): Promise<boolean>;

    getAnnouncedStorageLocations(
      _validators: string[],
      overrides?: CallOverrides,
    ): Promise<string[][]>;

    'getAnnouncedStorageLocations(address[])'(
      _validators: string[],
      overrides?: CallOverrides,
    ): Promise<string[][]>;

    getAnnouncedValidators(overrides?: CallOverrides): Promise<string[]>;

    'getAnnouncedValidators()'(overrides?: CallOverrides): Promise<string[]>;
  };

  filters: {};

  estimateGas: {
    announce(
      _validator: string,
      _storageLocation: string,
      _signature: BytesLike,
      overrides?: Overrides & { from?: string },
    ): Promise<BigNumber>;

    'announce(address,string,bytes)'(
      _validator: string,
      _storageLocation: string,
      _signature: BytesLike,
      overrides?: Overrides & { from?: string },
    ): Promise<BigNumber>;

    getAnnouncedStorageLocations(
      _validators: string[],
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    'getAnnouncedStorageLocations(address[])'(
      _validators: string[],
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    getAnnouncedValidators(overrides?: CallOverrides): Promise<BigNumber>;

    'getAnnouncedValidators()'(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    announce(
      _validator: string,
      _storageLocation: string,
      _signature: BytesLike,
      overrides?: Overrides & { from?: string },
    ): Promise<PopulatedTransaction>;

    'announce(address,string,bytes)'(
      _validator: string,
      _storageLocation: string,
      _signature: BytesLike,
      overrides?: Overrides & { from?: string },
    ): Promise<PopulatedTransaction>;

    getAnnouncedStorageLocations(
      _validators: string[],
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    'getAnnouncedStorageLocations(address[])'(
      _validators: string[],
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    getAnnouncedValidators(
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    'getAnnouncedValidators()'(
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;
  };
}
