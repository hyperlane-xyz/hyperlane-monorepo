/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  EventFragment,
  FunctionFragment,
  Result,
} from '@ethersproject/abi';
import type { Listener, Provider } from '@ethersproject/providers';
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PayableOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from 'ethers';

import type {
  OnEvent,
  TypedEvent,
  TypedEventFilter,
  TypedListener,
} from '../../common.js';

export interface TestQuerySenderInterface extends utils.Interface {
  functions: {
    'handleQueryAddressResult(address)': FunctionFragment;
    'handleQueryBytes32Result(bytes32)': FunctionFragment;
    'handleQueryUint256Result(uint256)': FunctionFragment;
    'initialize(address)': FunctionFragment;
    'lastAddressResult()': FunctionFragment;
    'lastBytes32Result()': FunctionFragment;
    'lastUint256Result()': FunctionFragment;
    'queryAddress(uint32,address,bytes,uint256)': FunctionFragment;
    'queryBytes32(uint32,address,bytes,uint256)': FunctionFragment;
    'queryUint256(uint32,address,bytes,uint256)': FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | 'handleQueryAddressResult'
      | 'handleQueryAddressResult(address)'
      | 'handleQueryBytes32Result'
      | 'handleQueryBytes32Result(bytes32)'
      | 'handleQueryUint256Result'
      | 'handleQueryUint256Result(uint256)'
      | 'initialize'
      | 'initialize(address)'
      | 'lastAddressResult'
      | 'lastAddressResult()'
      | 'lastBytes32Result'
      | 'lastBytes32Result()'
      | 'lastUint256Result'
      | 'lastUint256Result()'
      | 'queryAddress'
      | 'queryAddress(uint32,address,bytes,uint256)'
      | 'queryBytes32'
      | 'queryBytes32(uint32,address,bytes,uint256)'
      | 'queryUint256'
      | 'queryUint256(uint32,address,bytes,uint256)',
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: 'handleQueryAddressResult',
    values: [string],
  ): string;
  encodeFunctionData(
    functionFragment: 'handleQueryAddressResult(address)',
    values: [string],
  ): string;
  encodeFunctionData(
    functionFragment: 'handleQueryBytes32Result',
    values: [BytesLike],
  ): string;
  encodeFunctionData(
    functionFragment: 'handleQueryBytes32Result(bytes32)',
    values: [BytesLike],
  ): string;
  encodeFunctionData(
    functionFragment: 'handleQueryUint256Result',
    values: [BigNumberish],
  ): string;
  encodeFunctionData(
    functionFragment: 'handleQueryUint256Result(uint256)',
    values: [BigNumberish],
  ): string;
  encodeFunctionData(functionFragment: 'initialize', values: [string]): string;
  encodeFunctionData(
    functionFragment: 'initialize(address)',
    values: [string],
  ): string;
  encodeFunctionData(
    functionFragment: 'lastAddressResult',
    values?: undefined,
  ): string;
  encodeFunctionData(
    functionFragment: 'lastAddressResult()',
    values?: undefined,
  ): string;
  encodeFunctionData(
    functionFragment: 'lastBytes32Result',
    values?: undefined,
  ): string;
  encodeFunctionData(
    functionFragment: 'lastBytes32Result()',
    values?: undefined,
  ): string;
  encodeFunctionData(
    functionFragment: 'lastUint256Result',
    values?: undefined,
  ): string;
  encodeFunctionData(
    functionFragment: 'lastUint256Result()',
    values?: undefined,
  ): string;
  encodeFunctionData(
    functionFragment: 'queryAddress',
    values: [BigNumberish, string, BytesLike, BigNumberish],
  ): string;
  encodeFunctionData(
    functionFragment: 'queryAddress(uint32,address,bytes,uint256)',
    values: [BigNumberish, string, BytesLike, BigNumberish],
  ): string;
  encodeFunctionData(
    functionFragment: 'queryBytes32',
    values: [BigNumberish, string, BytesLike, BigNumberish],
  ): string;
  encodeFunctionData(
    functionFragment: 'queryBytes32(uint32,address,bytes,uint256)',
    values: [BigNumberish, string, BytesLike, BigNumberish],
  ): string;
  encodeFunctionData(
    functionFragment: 'queryUint256',
    values: [BigNumberish, string, BytesLike, BigNumberish],
  ): string;
  encodeFunctionData(
    functionFragment: 'queryUint256(uint32,address,bytes,uint256)',
    values: [BigNumberish, string, BytesLike, BigNumberish],
  ): string;

  decodeFunctionResult(
    functionFragment: 'handleQueryAddressResult',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'handleQueryAddressResult(address)',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'handleQueryBytes32Result',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'handleQueryBytes32Result(bytes32)',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'handleQueryUint256Result',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'handleQueryUint256Result(uint256)',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(functionFragment: 'initialize', data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: 'initialize(address)',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'lastAddressResult',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'lastAddressResult()',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'lastBytes32Result',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'lastBytes32Result()',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'lastUint256Result',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'lastUint256Result()',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'queryAddress',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'queryAddress(uint32,address,bytes,uint256)',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'queryBytes32',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'queryBytes32(uint32,address,bytes,uint256)',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'queryUint256',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'queryUint256(uint32,address,bytes,uint256)',
    data: BytesLike,
  ): Result;

  events: {
    'ReceivedAddressResult(address)': EventFragment;
    'ReceivedBytes32Result(bytes32)': EventFragment;
    'ReceivedUint256Result(uint256)': EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: 'ReceivedAddressResult'): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: 'ReceivedAddressResult(address)',
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'ReceivedBytes32Result'): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: 'ReceivedBytes32Result(bytes32)',
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'ReceivedUint256Result'): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: 'ReceivedUint256Result(uint256)',
  ): EventFragment;
}

export interface ReceivedAddressResultEventObject {
  result: string;
}
export type ReceivedAddressResultEvent = TypedEvent<
  [string],
  ReceivedAddressResultEventObject
>;

export type ReceivedAddressResultEventFilter =
  TypedEventFilter<ReceivedAddressResultEvent>;

export interface ReceivedBytes32ResultEventObject {
  result: string;
}
export type ReceivedBytes32ResultEvent = TypedEvent<
  [string],
  ReceivedBytes32ResultEventObject
>;

export type ReceivedBytes32ResultEventFilter =
  TypedEventFilter<ReceivedBytes32ResultEvent>;

export interface ReceivedUint256ResultEventObject {
  result: BigNumber;
}
export type ReceivedUint256ResultEvent = TypedEvent<
  [BigNumber],
  ReceivedUint256ResultEventObject
>;

export type ReceivedUint256ResultEventFilter =
  TypedEventFilter<ReceivedUint256ResultEvent>;

export interface TestQuerySender extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: TestQuerySenderInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined,
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>,
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>,
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    handleQueryAddressResult(
      _result: string,
      overrides?: Overrides & { from?: string },
    ): Promise<ContractTransaction>;

    'handleQueryAddressResult(address)'(
      _result: string,
      overrides?: Overrides & { from?: string },
    ): Promise<ContractTransaction>;

    handleQueryBytes32Result(
      _result: BytesLike,
      overrides?: Overrides & { from?: string },
    ): Promise<ContractTransaction>;

    'handleQueryBytes32Result(bytes32)'(
      _result: BytesLike,
      overrides?: Overrides & { from?: string },
    ): Promise<ContractTransaction>;

    handleQueryUint256Result(
      _result: BigNumberish,
      overrides?: Overrides & { from?: string },
    ): Promise<ContractTransaction>;

    'handleQueryUint256Result(uint256)'(
      _result: BigNumberish,
      overrides?: Overrides & { from?: string },
    ): Promise<ContractTransaction>;

    initialize(
      _queryRouterAddress: string,
      overrides?: Overrides & { from?: string },
    ): Promise<ContractTransaction>;

    'initialize(address)'(
      _queryRouterAddress: string,
      overrides?: Overrides & { from?: string },
    ): Promise<ContractTransaction>;

    lastAddressResult(overrides?: CallOverrides): Promise<[string]>;

    'lastAddressResult()'(overrides?: CallOverrides): Promise<[string]>;

    lastBytes32Result(overrides?: CallOverrides): Promise<[string]>;

    'lastBytes32Result()'(overrides?: CallOverrides): Promise<[string]>;

    lastUint256Result(overrides?: CallOverrides): Promise<[BigNumber]>;

    'lastUint256Result()'(overrides?: CallOverrides): Promise<[BigNumber]>;

    queryAddress(
      _destinationDomain: BigNumberish,
      _target: string,
      _targetData: BytesLike,
      _gasAmount: BigNumberish,
      overrides?: PayableOverrides & { from?: string },
    ): Promise<ContractTransaction>;

    'queryAddress(uint32,address,bytes,uint256)'(
      _destinationDomain: BigNumberish,
      _target: string,
      _targetData: BytesLike,
      _gasAmount: BigNumberish,
      overrides?: PayableOverrides & { from?: string },
    ): Promise<ContractTransaction>;

    queryBytes32(
      _destinationDomain: BigNumberish,
      _target: string,
      _targetData: BytesLike,
      _gasAmount: BigNumberish,
      overrides?: PayableOverrides & { from?: string },
    ): Promise<ContractTransaction>;

    'queryBytes32(uint32,address,bytes,uint256)'(
      _destinationDomain: BigNumberish,
      _target: string,
      _targetData: BytesLike,
      _gasAmount: BigNumberish,
      overrides?: PayableOverrides & { from?: string },
    ): Promise<ContractTransaction>;

    queryUint256(
      _destinationDomain: BigNumberish,
      _target: string,
      _targetData: BytesLike,
      _gasAmount: BigNumberish,
      overrides?: PayableOverrides & { from?: string },
    ): Promise<ContractTransaction>;

    'queryUint256(uint32,address,bytes,uint256)'(
      _destinationDomain: BigNumberish,
      _target: string,
      _targetData: BytesLike,
      _gasAmount: BigNumberish,
      overrides?: PayableOverrides & { from?: string },
    ): Promise<ContractTransaction>;
  };

  handleQueryAddressResult(
    _result: string,
    overrides?: Overrides & { from?: string },
  ): Promise<ContractTransaction>;

  'handleQueryAddressResult(address)'(
    _result: string,
    overrides?: Overrides & { from?: string },
  ): Promise<ContractTransaction>;

  handleQueryBytes32Result(
    _result: BytesLike,
    overrides?: Overrides & { from?: string },
  ): Promise<ContractTransaction>;

  'handleQueryBytes32Result(bytes32)'(
    _result: BytesLike,
    overrides?: Overrides & { from?: string },
  ): Promise<ContractTransaction>;

  handleQueryUint256Result(
    _result: BigNumberish,
    overrides?: Overrides & { from?: string },
  ): Promise<ContractTransaction>;

  'handleQueryUint256Result(uint256)'(
    _result: BigNumberish,
    overrides?: Overrides & { from?: string },
  ): Promise<ContractTransaction>;

  initialize(
    _queryRouterAddress: string,
    overrides?: Overrides & { from?: string },
  ): Promise<ContractTransaction>;

  'initialize(address)'(
    _queryRouterAddress: string,
    overrides?: Overrides & { from?: string },
  ): Promise<ContractTransaction>;

  lastAddressResult(overrides?: CallOverrides): Promise<string>;

  'lastAddressResult()'(overrides?: CallOverrides): Promise<string>;

  lastBytes32Result(overrides?: CallOverrides): Promise<string>;

  'lastBytes32Result()'(overrides?: CallOverrides): Promise<string>;

  lastUint256Result(overrides?: CallOverrides): Promise<BigNumber>;

  'lastUint256Result()'(overrides?: CallOverrides): Promise<BigNumber>;

  queryAddress(
    _destinationDomain: BigNumberish,
    _target: string,
    _targetData: BytesLike,
    _gasAmount: BigNumberish,
    overrides?: PayableOverrides & { from?: string },
  ): Promise<ContractTransaction>;

  'queryAddress(uint32,address,bytes,uint256)'(
    _destinationDomain: BigNumberish,
    _target: string,
    _targetData: BytesLike,
    _gasAmount: BigNumberish,
    overrides?: PayableOverrides & { from?: string },
  ): Promise<ContractTransaction>;

  queryBytes32(
    _destinationDomain: BigNumberish,
    _target: string,
    _targetData: BytesLike,
    _gasAmount: BigNumberish,
    overrides?: PayableOverrides & { from?: string },
  ): Promise<ContractTransaction>;

  'queryBytes32(uint32,address,bytes,uint256)'(
    _destinationDomain: BigNumberish,
    _target: string,
    _targetData: BytesLike,
    _gasAmount: BigNumberish,
    overrides?: PayableOverrides & { from?: string },
  ): Promise<ContractTransaction>;

  queryUint256(
    _destinationDomain: BigNumberish,
    _target: string,
    _targetData: BytesLike,
    _gasAmount: BigNumberish,
    overrides?: PayableOverrides & { from?: string },
  ): Promise<ContractTransaction>;

  'queryUint256(uint32,address,bytes,uint256)'(
    _destinationDomain: BigNumberish,
    _target: string,
    _targetData: BytesLike,
    _gasAmount: BigNumberish,
    overrides?: PayableOverrides & { from?: string },
  ): Promise<ContractTransaction>;

  callStatic: {
    handleQueryAddressResult(
      _result: string,
      overrides?: CallOverrides,
    ): Promise<void>;

    'handleQueryAddressResult(address)'(
      _result: string,
      overrides?: CallOverrides,
    ): Promise<void>;

    handleQueryBytes32Result(
      _result: BytesLike,
      overrides?: CallOverrides,
    ): Promise<void>;

    'handleQueryBytes32Result(bytes32)'(
      _result: BytesLike,
      overrides?: CallOverrides,
    ): Promise<void>;

    handleQueryUint256Result(
      _result: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<void>;

    'handleQueryUint256Result(uint256)'(
      _result: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<void>;

    initialize(
      _queryRouterAddress: string,
      overrides?: CallOverrides,
    ): Promise<void>;

    'initialize(address)'(
      _queryRouterAddress: string,
      overrides?: CallOverrides,
    ): Promise<void>;

    lastAddressResult(overrides?: CallOverrides): Promise<string>;

    'lastAddressResult()'(overrides?: CallOverrides): Promise<string>;

    lastBytes32Result(overrides?: CallOverrides): Promise<string>;

    'lastBytes32Result()'(overrides?: CallOverrides): Promise<string>;

    lastUint256Result(overrides?: CallOverrides): Promise<BigNumber>;

    'lastUint256Result()'(overrides?: CallOverrides): Promise<BigNumber>;

    queryAddress(
      _destinationDomain: BigNumberish,
      _target: string,
      _targetData: BytesLike,
      _gasAmount: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<void>;

    'queryAddress(uint32,address,bytes,uint256)'(
      _destinationDomain: BigNumberish,
      _target: string,
      _targetData: BytesLike,
      _gasAmount: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<void>;

    queryBytes32(
      _destinationDomain: BigNumberish,
      _target: string,
      _targetData: BytesLike,
      _gasAmount: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<void>;

    'queryBytes32(uint32,address,bytes,uint256)'(
      _destinationDomain: BigNumberish,
      _target: string,
      _targetData: BytesLike,
      _gasAmount: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<void>;

    queryUint256(
      _destinationDomain: BigNumberish,
      _target: string,
      _targetData: BytesLike,
      _gasAmount: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<void>;

    'queryUint256(uint32,address,bytes,uint256)'(
      _destinationDomain: BigNumberish,
      _target: string,
      _targetData: BytesLike,
      _gasAmount: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<void>;
  };

  filters: {
    'ReceivedAddressResult(address)'(
      result?: null,
    ): ReceivedAddressResultEventFilter;
    ReceivedAddressResult(result?: null): ReceivedAddressResultEventFilter;

    'ReceivedBytes32Result(bytes32)'(
      result?: null,
    ): ReceivedBytes32ResultEventFilter;
    ReceivedBytes32Result(result?: null): ReceivedBytes32ResultEventFilter;

    'ReceivedUint256Result(uint256)'(
      result?: null,
    ): ReceivedUint256ResultEventFilter;
    ReceivedUint256Result(result?: null): ReceivedUint256ResultEventFilter;
  };

  estimateGas: {
    handleQueryAddressResult(
      _result: string,
      overrides?: Overrides & { from?: string },
    ): Promise<BigNumber>;

    'handleQueryAddressResult(address)'(
      _result: string,
      overrides?: Overrides & { from?: string },
    ): Promise<BigNumber>;

    handleQueryBytes32Result(
      _result: BytesLike,
      overrides?: Overrides & { from?: string },
    ): Promise<BigNumber>;

    'handleQueryBytes32Result(bytes32)'(
      _result: BytesLike,
      overrides?: Overrides & { from?: string },
    ): Promise<BigNumber>;

    handleQueryUint256Result(
      _result: BigNumberish,
      overrides?: Overrides & { from?: string },
    ): Promise<BigNumber>;

    'handleQueryUint256Result(uint256)'(
      _result: BigNumberish,
      overrides?: Overrides & { from?: string },
    ): Promise<BigNumber>;

    initialize(
      _queryRouterAddress: string,
      overrides?: Overrides & { from?: string },
    ): Promise<BigNumber>;

    'initialize(address)'(
      _queryRouterAddress: string,
      overrides?: Overrides & { from?: string },
    ): Promise<BigNumber>;

    lastAddressResult(overrides?: CallOverrides): Promise<BigNumber>;

    'lastAddressResult()'(overrides?: CallOverrides): Promise<BigNumber>;

    lastBytes32Result(overrides?: CallOverrides): Promise<BigNumber>;

    'lastBytes32Result()'(overrides?: CallOverrides): Promise<BigNumber>;

    lastUint256Result(overrides?: CallOverrides): Promise<BigNumber>;

    'lastUint256Result()'(overrides?: CallOverrides): Promise<BigNumber>;

    queryAddress(
      _destinationDomain: BigNumberish,
      _target: string,
      _targetData: BytesLike,
      _gasAmount: BigNumberish,
      overrides?: PayableOverrides & { from?: string },
    ): Promise<BigNumber>;

    'queryAddress(uint32,address,bytes,uint256)'(
      _destinationDomain: BigNumberish,
      _target: string,
      _targetData: BytesLike,
      _gasAmount: BigNumberish,
      overrides?: PayableOverrides & { from?: string },
    ): Promise<BigNumber>;

    queryBytes32(
      _destinationDomain: BigNumberish,
      _target: string,
      _targetData: BytesLike,
      _gasAmount: BigNumberish,
      overrides?: PayableOverrides & { from?: string },
    ): Promise<BigNumber>;

    'queryBytes32(uint32,address,bytes,uint256)'(
      _destinationDomain: BigNumberish,
      _target: string,
      _targetData: BytesLike,
      _gasAmount: BigNumberish,
      overrides?: PayableOverrides & { from?: string },
    ): Promise<BigNumber>;

    queryUint256(
      _destinationDomain: BigNumberish,
      _target: string,
      _targetData: BytesLike,
      _gasAmount: BigNumberish,
      overrides?: PayableOverrides & { from?: string },
    ): Promise<BigNumber>;

    'queryUint256(uint32,address,bytes,uint256)'(
      _destinationDomain: BigNumberish,
      _target: string,
      _targetData: BytesLike,
      _gasAmount: BigNumberish,
      overrides?: PayableOverrides & { from?: string },
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    handleQueryAddressResult(
      _result: string,
      overrides?: Overrides & { from?: string },
    ): Promise<PopulatedTransaction>;

    'handleQueryAddressResult(address)'(
      _result: string,
      overrides?: Overrides & { from?: string },
    ): Promise<PopulatedTransaction>;

    handleQueryBytes32Result(
      _result: BytesLike,
      overrides?: Overrides & { from?: string },
    ): Promise<PopulatedTransaction>;

    'handleQueryBytes32Result(bytes32)'(
      _result: BytesLike,
      overrides?: Overrides & { from?: string },
    ): Promise<PopulatedTransaction>;

    handleQueryUint256Result(
      _result: BigNumberish,
      overrides?: Overrides & { from?: string },
    ): Promise<PopulatedTransaction>;

    'handleQueryUint256Result(uint256)'(
      _result: BigNumberish,
      overrides?: Overrides & { from?: string },
    ): Promise<PopulatedTransaction>;

    initialize(
      _queryRouterAddress: string,
      overrides?: Overrides & { from?: string },
    ): Promise<PopulatedTransaction>;

    'initialize(address)'(
      _queryRouterAddress: string,
      overrides?: Overrides & { from?: string },
    ): Promise<PopulatedTransaction>;

    lastAddressResult(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    'lastAddressResult()'(
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    lastBytes32Result(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    'lastBytes32Result()'(
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    lastUint256Result(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    'lastUint256Result()'(
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    queryAddress(
      _destinationDomain: BigNumberish,
      _target: string,
      _targetData: BytesLike,
      _gasAmount: BigNumberish,
      overrides?: PayableOverrides & { from?: string },
    ): Promise<PopulatedTransaction>;

    'queryAddress(uint32,address,bytes,uint256)'(
      _destinationDomain: BigNumberish,
      _target: string,
      _targetData: BytesLike,
      _gasAmount: BigNumberish,
      overrides?: PayableOverrides & { from?: string },
    ): Promise<PopulatedTransaction>;

    queryBytes32(
      _destinationDomain: BigNumberish,
      _target: string,
      _targetData: BytesLike,
      _gasAmount: BigNumberish,
      overrides?: PayableOverrides & { from?: string },
    ): Promise<PopulatedTransaction>;

    'queryBytes32(uint32,address,bytes,uint256)'(
      _destinationDomain: BigNumberish,
      _target: string,
      _targetData: BytesLike,
      _gasAmount: BigNumberish,
      overrides?: PayableOverrides & { from?: string },
    ): Promise<PopulatedTransaction>;

    queryUint256(
      _destinationDomain: BigNumberish,
      _target: string,
      _targetData: BytesLike,
      _gasAmount: BigNumberish,
      overrides?: PayableOverrides & { from?: string },
    ): Promise<PopulatedTransaction>;

    'queryUint256(uint32,address,bytes,uint256)'(
      _destinationDomain: BigNumberish,
      _target: string,
      _targetData: BytesLike,
      _gasAmount: BigNumberish,
      overrides?: PayableOverrides & { from?: string },
    ): Promise<PopulatedTransaction>;
  };
}
