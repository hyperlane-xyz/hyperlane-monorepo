/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { EventFragment } from '@ethersproject/abi';
import type { Listener, Provider } from '@ethersproject/providers';
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  Signer,
  utils,
} from 'ethers';

import type {
  OnEvent,
  TypedEvent,
  TypedEventFilter,
  TypedListener,
} from '../../../common.js';

export interface MockMessageExecutorInterface extends utils.Interface {
  functions: {};

  events: {
    'MessageIdExecuted(uint256,bytes32)': EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: 'MessageIdExecuted'): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: 'MessageIdExecuted(uint256,bytes32)',
  ): EventFragment;
}

export interface MessageIdExecutedEventObject {
  fromChainId: BigNumber;
  messageId: string;
}
export type MessageIdExecutedEvent = TypedEvent<
  [BigNumber, string],
  MessageIdExecutedEventObject
>;

export type MessageIdExecutedEventFilter =
  TypedEventFilter<MessageIdExecutedEvent>;

export interface MockMessageExecutor extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: MockMessageExecutorInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined,
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>,
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>,
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {};

  callStatic: {};

  filters: {
    'MessageIdExecuted(uint256,bytes32)'(
      fromChainId?: BigNumberish | null,
      messageId?: BytesLike | null,
    ): MessageIdExecutedEventFilter;
    MessageIdExecuted(
      fromChainId?: BigNumberish | null,
      messageId?: BytesLike | null,
    ): MessageIdExecutedEventFilter;
  };

  estimateGas: {};

  populateTransaction: {};
}
