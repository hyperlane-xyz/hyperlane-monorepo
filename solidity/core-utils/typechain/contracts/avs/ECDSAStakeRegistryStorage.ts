/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { EventFragment } from '@ethersproject/abi';
import type { Listener, Provider } from '@ethersproject/providers';
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  Signer,
  utils,
} from 'ethers';

import type {
  OnEvent,
  TypedEvent,
  TypedEventFilter,
  TypedListener,
} from '../../common.js';

export type StrategyParamsStruct = {
  strategy: string;
  multiplier: BigNumberish;
};

export type StrategyParamsStructOutput = [string, BigNumber] & {
  strategy: string;
  multiplier: BigNumber;
};

export type QuorumStruct = { strategies: StrategyParamsStruct[] };

export type QuorumStructOutput = [StrategyParamsStructOutput[]] & {
  strategies: StrategyParamsStructOutput[];
};

export interface ECDSAStakeRegistryStorageInterface extends utils.Interface {
  functions: {};

  events: {
    'MinimumWeightUpdated(uint256,uint256)': EventFragment;
    'OperatorDeregistered(address,address)': EventFragment;
    'OperatorRegistered(address,address)': EventFragment;
    'OperatorWeightUpdated(address,uint256,uint256)': EventFragment;
    'QuorumUpdated(((address,uint96)[]),((address,uint96)[]))': EventFragment;
    'SigningKeyUpdate(address,uint256,address,address)': EventFragment;
    'ThresholdWeightUpdated(uint256)': EventFragment;
    'TotalWeightUpdated(uint256,uint256)': EventFragment;
    'UpdateMinimumWeight(uint256,uint256)': EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: 'MinimumWeightUpdated'): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: 'MinimumWeightUpdated(uint256,uint256)',
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'OperatorDeregistered'): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: 'OperatorDeregistered(address,address)',
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'OperatorRegistered'): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: 'OperatorRegistered(address,address)',
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'OperatorWeightUpdated'): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: 'OperatorWeightUpdated(address,uint256,uint256)',
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'QuorumUpdated'): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: 'QuorumUpdated(((address,uint96)[]),((address,uint96)[]))',
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'SigningKeyUpdate'): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: 'SigningKeyUpdate(address,uint256,address,address)',
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'ThresholdWeightUpdated'): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: 'ThresholdWeightUpdated(uint256)',
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'TotalWeightUpdated'): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: 'TotalWeightUpdated(uint256,uint256)',
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'UpdateMinimumWeight'): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: 'UpdateMinimumWeight(uint256,uint256)',
  ): EventFragment;
}

export interface MinimumWeightUpdatedEventObject {
  _old: BigNumber;
  _new: BigNumber;
}
export type MinimumWeightUpdatedEvent = TypedEvent<
  [BigNumber, BigNumber],
  MinimumWeightUpdatedEventObject
>;

export type MinimumWeightUpdatedEventFilter =
  TypedEventFilter<MinimumWeightUpdatedEvent>;

export interface OperatorDeregisteredEventObject {
  _operator: string;
  _avs: string;
}
export type OperatorDeregisteredEvent = TypedEvent<
  [string, string],
  OperatorDeregisteredEventObject
>;

export type OperatorDeregisteredEventFilter =
  TypedEventFilter<OperatorDeregisteredEvent>;

export interface OperatorRegisteredEventObject {
  _operator: string;
  _avs: string;
}
export type OperatorRegisteredEvent = TypedEvent<
  [string, string],
  OperatorRegisteredEventObject
>;

export type OperatorRegisteredEventFilter =
  TypedEventFilter<OperatorRegisteredEvent>;

export interface OperatorWeightUpdatedEventObject {
  _operator: string;
  oldWeight: BigNumber;
  newWeight: BigNumber;
}
export type OperatorWeightUpdatedEvent = TypedEvent<
  [string, BigNumber, BigNumber],
  OperatorWeightUpdatedEventObject
>;

export type OperatorWeightUpdatedEventFilter =
  TypedEventFilter<OperatorWeightUpdatedEvent>;

export interface QuorumUpdatedEventObject {
  _old: QuorumStructOutput;
  _new: QuorumStructOutput;
}
export type QuorumUpdatedEvent = TypedEvent<
  [QuorumStructOutput, QuorumStructOutput],
  QuorumUpdatedEventObject
>;

export type QuorumUpdatedEventFilter = TypedEventFilter<QuorumUpdatedEvent>;

export interface SigningKeyUpdateEventObject {
  operator: string;
  updateBlock: BigNumber;
  newSigningKey: string;
  oldSigningKey: string;
}
export type SigningKeyUpdateEvent = TypedEvent<
  [string, BigNumber, string, string],
  SigningKeyUpdateEventObject
>;

export type SigningKeyUpdateEventFilter =
  TypedEventFilter<SigningKeyUpdateEvent>;

export interface ThresholdWeightUpdatedEventObject {
  _thresholdWeight: BigNumber;
}
export type ThresholdWeightUpdatedEvent = TypedEvent<
  [BigNumber],
  ThresholdWeightUpdatedEventObject
>;

export type ThresholdWeightUpdatedEventFilter =
  TypedEventFilter<ThresholdWeightUpdatedEvent>;

export interface TotalWeightUpdatedEventObject {
  oldTotalWeight: BigNumber;
  newTotalWeight: BigNumber;
}
export type TotalWeightUpdatedEvent = TypedEvent<
  [BigNumber, BigNumber],
  TotalWeightUpdatedEventObject
>;

export type TotalWeightUpdatedEventFilter =
  TypedEventFilter<TotalWeightUpdatedEvent>;

export interface UpdateMinimumWeightEventObject {
  oldMinimumWeight: BigNumber;
  newMinimumWeight: BigNumber;
}
export type UpdateMinimumWeightEvent = TypedEvent<
  [BigNumber, BigNumber],
  UpdateMinimumWeightEventObject
>;

export type UpdateMinimumWeightEventFilter =
  TypedEventFilter<UpdateMinimumWeightEvent>;

export interface ECDSAStakeRegistryStorage extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: ECDSAStakeRegistryStorageInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined,
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>,
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>,
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {};

  callStatic: {};

  filters: {
    'MinimumWeightUpdated(uint256,uint256)'(
      _old?: null,
      _new?: null,
    ): MinimumWeightUpdatedEventFilter;
    MinimumWeightUpdated(
      _old?: null,
      _new?: null,
    ): MinimumWeightUpdatedEventFilter;

    'OperatorDeregistered(address,address)'(
      _operator?: string | null,
      _avs?: string | null,
    ): OperatorDeregisteredEventFilter;
    OperatorDeregistered(
      _operator?: string | null,
      _avs?: string | null,
    ): OperatorDeregisteredEventFilter;

    'OperatorRegistered(address,address)'(
      _operator?: string | null,
      _avs?: string | null,
    ): OperatorRegisteredEventFilter;
    OperatorRegistered(
      _operator?: string | null,
      _avs?: string | null,
    ): OperatorRegisteredEventFilter;

    'OperatorWeightUpdated(address,uint256,uint256)'(
      _operator?: string | null,
      oldWeight?: null,
      newWeight?: null,
    ): OperatorWeightUpdatedEventFilter;
    OperatorWeightUpdated(
      _operator?: string | null,
      oldWeight?: null,
      newWeight?: null,
    ): OperatorWeightUpdatedEventFilter;

    'QuorumUpdated(((address,uint96)[]),((address,uint96)[]))'(
      _old?: null,
      _new?: null,
    ): QuorumUpdatedEventFilter;
    QuorumUpdated(_old?: null, _new?: null): QuorumUpdatedEventFilter;

    'SigningKeyUpdate(address,uint256,address,address)'(
      operator?: string | null,
      updateBlock?: BigNumberish | null,
      newSigningKey?: string | null,
      oldSigningKey?: null,
    ): SigningKeyUpdateEventFilter;
    SigningKeyUpdate(
      operator?: string | null,
      updateBlock?: BigNumberish | null,
      newSigningKey?: string | null,
      oldSigningKey?: null,
    ): SigningKeyUpdateEventFilter;

    'ThresholdWeightUpdated(uint256)'(
      _thresholdWeight?: null,
    ): ThresholdWeightUpdatedEventFilter;
    ThresholdWeightUpdated(
      _thresholdWeight?: null,
    ): ThresholdWeightUpdatedEventFilter;

    'TotalWeightUpdated(uint256,uint256)'(
      oldTotalWeight?: null,
      newTotalWeight?: null,
    ): TotalWeightUpdatedEventFilter;
    TotalWeightUpdated(
      oldTotalWeight?: null,
      newTotalWeight?: null,
    ): TotalWeightUpdatedEventFilter;

    'UpdateMinimumWeight(uint256,uint256)'(
      oldMinimumWeight?: null,
      newMinimumWeight?: null,
    ): UpdateMinimumWeightEventFilter;
    UpdateMinimumWeight(
      oldMinimumWeight?: null,
      newMinimumWeight?: null,
    ): UpdateMinimumWeightEventFilter;
  };

  estimateGas: {};

  populateTransaction: {};
}
