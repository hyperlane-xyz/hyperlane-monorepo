/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { FunctionFragment, Result } from '@ethersproject/abi';
import type { Listener, Provider } from '@ethersproject/providers';
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from 'ethers';

import type {
  OnEvent,
  TypedEvent,
  TypedEventFilter,
  TypedListener,
} from '../../../common.js';

export interface StaticAggregationHookFactoryInterface extends utils.Interface {
  functions: {
    'PACKAGE_VERSION()': FunctionFragment;
    'deploy(address[])': FunctionFragment;
    'deploy(address[],uint8)': FunctionFragment;
    'getAddress(address[])': FunctionFragment;
    'getAddress(address[],uint8)': FunctionFragment;
    'implementation()': FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | 'PACKAGE_VERSION'
      | 'PACKAGE_VERSION()'
      | 'deploy(address[])'
      | 'deploy(address[],uint8)'
      | 'getAddress(address[])'
      | 'getAddress(address[],uint8)'
      | 'implementation'
      | 'implementation()',
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: 'PACKAGE_VERSION',
    values?: undefined,
  ): string;
  encodeFunctionData(
    functionFragment: 'PACKAGE_VERSION()',
    values?: undefined,
  ): string;
  encodeFunctionData(
    functionFragment: 'deploy(address[])',
    values: [string[]],
  ): string;
  encodeFunctionData(
    functionFragment: 'deploy(address[],uint8)',
    values: [string[], BigNumberish],
  ): string;
  encodeFunctionData(
    functionFragment: 'getAddress(address[])',
    values: [string[]],
  ): string;
  encodeFunctionData(
    functionFragment: 'getAddress(address[],uint8)',
    values: [string[], BigNumberish],
  ): string;
  encodeFunctionData(
    functionFragment: 'implementation',
    values?: undefined,
  ): string;
  encodeFunctionData(
    functionFragment: 'implementation()',
    values?: undefined,
  ): string;

  decodeFunctionResult(
    functionFragment: 'PACKAGE_VERSION',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'PACKAGE_VERSION()',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'deploy(address[])',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'deploy(address[],uint8)',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'getAddress(address[])',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'getAddress(address[],uint8)',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'implementation',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'implementation()',
    data: BytesLike,
  ): Result;

  events: {};
}

export interface StaticAggregationHookFactory extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: StaticAggregationHookFactoryInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined,
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>,
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>,
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    PACKAGE_VERSION(overrides?: CallOverrides): Promise<[string]>;

    'PACKAGE_VERSION()'(overrides?: CallOverrides): Promise<[string]>;

    'deploy(address[])'(
      _values: string[],
      overrides?: Overrides & { from?: string },
    ): Promise<ContractTransaction>;

    'deploy(address[],uint8)'(
      _values: string[],
      _threshold: BigNumberish,
      overrides?: Overrides & { from?: string },
    ): Promise<ContractTransaction>;

    'getAddress(address[])'(
      _values: string[],
      overrides?: CallOverrides,
    ): Promise<[string]>;

    'getAddress(address[],uint8)'(
      _values: string[],
      _threshold: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<[string]>;

    implementation(overrides?: CallOverrides): Promise<[string]>;

    'implementation()'(overrides?: CallOverrides): Promise<[string]>;
  };

  PACKAGE_VERSION(overrides?: CallOverrides): Promise<string>;

  'PACKAGE_VERSION()'(overrides?: CallOverrides): Promise<string>;

  'deploy(address[])'(
    _values: string[],
    overrides?: Overrides & { from?: string },
  ): Promise<ContractTransaction>;

  'deploy(address[],uint8)'(
    _values: string[],
    _threshold: BigNumberish,
    overrides?: Overrides & { from?: string },
  ): Promise<ContractTransaction>;

  'getAddress(address[])'(
    _values: string[],
    overrides?: CallOverrides,
  ): Promise<string>;

  'getAddress(address[],uint8)'(
    _values: string[],
    _threshold: BigNumberish,
    overrides?: CallOverrides,
  ): Promise<string>;

  implementation(overrides?: CallOverrides): Promise<string>;

  'implementation()'(overrides?: CallOverrides): Promise<string>;

  callStatic: {
    PACKAGE_VERSION(overrides?: CallOverrides): Promise<string>;

    'PACKAGE_VERSION()'(overrides?: CallOverrides): Promise<string>;

    'deploy(address[])'(
      _values: string[],
      overrides?: CallOverrides,
    ): Promise<string>;

    'deploy(address[],uint8)'(
      _values: string[],
      _threshold: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<string>;

    'getAddress(address[])'(
      _values: string[],
      overrides?: CallOverrides,
    ): Promise<string>;

    'getAddress(address[],uint8)'(
      _values: string[],
      _threshold: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<string>;

    implementation(overrides?: CallOverrides): Promise<string>;

    'implementation()'(overrides?: CallOverrides): Promise<string>;
  };

  filters: {};

  estimateGas: {
    PACKAGE_VERSION(overrides?: CallOverrides): Promise<BigNumber>;

    'PACKAGE_VERSION()'(overrides?: CallOverrides): Promise<BigNumber>;

    'deploy(address[])'(
      _values: string[],
      overrides?: Overrides & { from?: string },
    ): Promise<BigNumber>;

    'deploy(address[],uint8)'(
      _values: string[],
      _threshold: BigNumberish,
      overrides?: Overrides & { from?: string },
    ): Promise<BigNumber>;

    'getAddress(address[])'(
      _values: string[],
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    'getAddress(address[],uint8)'(
      _values: string[],
      _threshold: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    implementation(overrides?: CallOverrides): Promise<BigNumber>;

    'implementation()'(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    PACKAGE_VERSION(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    'PACKAGE_VERSION()'(
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    'deploy(address[])'(
      _values: string[],
      overrides?: Overrides & { from?: string },
    ): Promise<PopulatedTransaction>;

    'deploy(address[],uint8)'(
      _values: string[],
      _threshold: BigNumberish,
      overrides?: Overrides & { from?: string },
    ): Promise<PopulatedTransaction>;

    'getAddress(address[])'(
      _values: string[],
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    'getAddress(address[],uint8)'(
      _values: string[],
      _threshold: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    implementation(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    'implementation()'(
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;
  };
}
