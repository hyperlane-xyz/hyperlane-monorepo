// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.181.2
//   protoc               unknown
// source: hyperlane/warp/v1/types.proto

/* eslint-disable */
import _m0 from 'protobufjs/minimal.js';

export const protobufPackage = 'hyperlane.warp.v1';

/** HypTokenType ... */
export enum HypTokenType {
  /** HYP_TOKEN_TYPE_UNSPECIFIED - HYP_TOKEN_TYPE_UNSPECIFIED ... */
  HYP_TOKEN_TYPE_UNSPECIFIED = 'HYP_TOKEN_TYPE_UNSPECIFIED',
  /** HYP_TOKEN_TYPE_COLLATERAL - HYP_TOKEN_TYPE_COLLATERAL ... */
  HYP_TOKEN_TYPE_COLLATERAL = 'HYP_TOKEN_TYPE_COLLATERAL',
  /** HYP_TOKEN_TYPE_SYNTHETIC - HYP_TOKEN_TYPE_SYNTHETIC ... */
  HYP_TOKEN_TYPE_SYNTHETIC = 'HYP_TOKEN_TYPE_SYNTHETIC',
  UNRECOGNIZED = 'UNRECOGNIZED',
}

export function hypTokenTypeFromJSON(object: any): HypTokenType {
  switch (object) {
    case 0:
    case 'HYP_TOKEN_TYPE_UNSPECIFIED':
      return HypTokenType.HYP_TOKEN_TYPE_UNSPECIFIED;
    case 1:
    case 'HYP_TOKEN_TYPE_COLLATERAL':
      return HypTokenType.HYP_TOKEN_TYPE_COLLATERAL;
    case 2:
    case 'HYP_TOKEN_TYPE_SYNTHETIC':
      return HypTokenType.HYP_TOKEN_TYPE_SYNTHETIC;
    case -1:
    case 'UNRECOGNIZED':
    default:
      return HypTokenType.UNRECOGNIZED;
  }
}

export function hypTokenTypeToJSON(object: HypTokenType): string {
  switch (object) {
    case HypTokenType.HYP_TOKEN_TYPE_UNSPECIFIED:
      return 'HYP_TOKEN_TYPE_UNSPECIFIED';
    case HypTokenType.HYP_TOKEN_TYPE_COLLATERAL:
      return 'HYP_TOKEN_TYPE_COLLATERAL';
    case HypTokenType.HYP_TOKEN_TYPE_SYNTHETIC:
      return 'HYP_TOKEN_TYPE_SYNTHETIC';
    case HypTokenType.UNRECOGNIZED:
    default:
      return 'UNRECOGNIZED';
  }
}

export function hypTokenTypeToNumber(object: HypTokenType): number {
  switch (object) {
    case HypTokenType.HYP_TOKEN_TYPE_UNSPECIFIED:
      return 0;
    case HypTokenType.HYP_TOKEN_TYPE_COLLATERAL:
      return 1;
    case HypTokenType.HYP_TOKEN_TYPE_SYNTHETIC:
      return 2;
    case HypTokenType.UNRECOGNIZED:
    default:
      return -1;
  }
}

/** Params */
export interface Params {}

/** HypToken ... */
export interface HypToken {
  id: string;
  owner: string;
  token_type: HypTokenType;
  origin_mailbox: string;
  origin_denom: string;
  collateral_balance: string;
  ism_id: string;
}

/** RemoteRouter ... */
export interface RemoteRouter {
  receiver_domain: number;
  receiver_contract: string;
  gas: string;
}

function createBaseParams(): Params {
  return {};
}

export const Params = {
  encode(_: Params, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): Params {
    const reader =
      input instanceof _m0.Reader ? input : _m0.Reader.create(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseParams();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skipType(tag & 7);
    }
    return message;
  },

  fromJSON(_: any): Params {
    return {};
  },

  toJSON(_: Params): unknown {
    const obj: any = {};
    return obj;
  },

  create<I extends Exact<DeepPartial<Params>, I>>(base?: I): Params {
    return Params.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<Params>, I>>(_: I): Params {
    const message = createBaseParams();
    return message;
  },
};

function createBaseHypToken(): HypToken {
  return {
    id: '',
    owner: '',
    token_type: HypTokenType.HYP_TOKEN_TYPE_UNSPECIFIED,
    origin_mailbox: '',
    origin_denom: '',
    collateral_balance: '',
    ism_id: '',
  };
}

export const HypToken = {
  encode(
    message: HypToken,
    writer: _m0.Writer = _m0.Writer.create(),
  ): _m0.Writer {
    if (message.id !== '') {
      writer.uint32(10).string(message.id);
    }
    if (message.owner !== '') {
      writer.uint32(18).string(message.owner);
    }
    if (message.token_type !== HypTokenType.HYP_TOKEN_TYPE_UNSPECIFIED) {
      writer.uint32(24).int32(hypTokenTypeToNumber(message.token_type));
    }
    if (message.origin_mailbox !== '') {
      writer.uint32(34).string(message.origin_mailbox);
    }
    if (message.origin_denom !== '') {
      writer.uint32(42).string(message.origin_denom);
    }
    if (message.collateral_balance !== '') {
      writer.uint32(50).string(message.collateral_balance);
    }
    if (message.ism_id !== '') {
      writer.uint32(58).string(message.ism_id);
    }
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): HypToken {
    const reader =
      input instanceof _m0.Reader ? input : _m0.Reader.create(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseHypToken();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.id = reader.string();
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.owner = reader.string();
          continue;
        case 3:
          if (tag !== 24) {
            break;
          }

          message.token_type = hypTokenTypeFromJSON(reader.int32());
          continue;
        case 4:
          if (tag !== 34) {
            break;
          }

          message.origin_mailbox = reader.string();
          continue;
        case 5:
          if (tag !== 42) {
            break;
          }

          message.origin_denom = reader.string();
          continue;
        case 6:
          if (tag !== 50) {
            break;
          }

          message.collateral_balance = reader.string();
          continue;
        case 7:
          if (tag !== 58) {
            break;
          }

          message.ism_id = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skipType(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): HypToken {
    return {
      id: isSet(object.id) ? globalThis.String(object.id) : '',
      owner: isSet(object.owner) ? globalThis.String(object.owner) : '',
      token_type: isSet(object.token_type)
        ? hypTokenTypeFromJSON(object.token_type)
        : HypTokenType.HYP_TOKEN_TYPE_UNSPECIFIED,
      origin_mailbox: isSet(object.origin_mailbox)
        ? globalThis.String(object.origin_mailbox)
        : '',
      origin_denom: isSet(object.origin_denom)
        ? globalThis.String(object.origin_denom)
        : '',
      collateral_balance: isSet(object.collateral_balance)
        ? globalThis.String(object.collateral_balance)
        : '',
      ism_id: isSet(object.ism_id) ? globalThis.String(object.ism_id) : '',
    };
  },

  toJSON(message: HypToken): unknown {
    const obj: any = {};
    if (message.id !== '') {
      obj.id = message.id;
    }
    if (message.owner !== '') {
      obj.owner = message.owner;
    }
    if (message.token_type !== HypTokenType.HYP_TOKEN_TYPE_UNSPECIFIED) {
      obj.token_type = hypTokenTypeToJSON(message.token_type);
    }
    if (message.origin_mailbox !== '') {
      obj.origin_mailbox = message.origin_mailbox;
    }
    if (message.origin_denom !== '') {
      obj.origin_denom = message.origin_denom;
    }
    if (message.collateral_balance !== '') {
      obj.collateral_balance = message.collateral_balance;
    }
    if (message.ism_id !== '') {
      obj.ism_id = message.ism_id;
    }
    return obj;
  },

  create<I extends Exact<DeepPartial<HypToken>, I>>(base?: I): HypToken {
    return HypToken.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<HypToken>, I>>(object: I): HypToken {
    const message = createBaseHypToken();
    message.id = object.id ?? '';
    message.owner = object.owner ?? '';
    message.token_type =
      object.token_type ?? HypTokenType.HYP_TOKEN_TYPE_UNSPECIFIED;
    message.origin_mailbox = object.origin_mailbox ?? '';
    message.origin_denom = object.origin_denom ?? '';
    message.collateral_balance = object.collateral_balance ?? '';
    message.ism_id = object.ism_id ?? '';
    return message;
  },
};

function createBaseRemoteRouter(): RemoteRouter {
  return { receiver_domain: 0, receiver_contract: '', gas: '' };
}

export const RemoteRouter = {
  encode(
    message: RemoteRouter,
    writer: _m0.Writer = _m0.Writer.create(),
  ): _m0.Writer {
    if (message.receiver_domain !== 0) {
      writer.uint32(8).uint32(message.receiver_domain);
    }
    if (message.receiver_contract !== '') {
      writer.uint32(18).string(message.receiver_contract);
    }
    if (message.gas !== '') {
      writer.uint32(26).string(message.gas);
    }
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): RemoteRouter {
    const reader =
      input instanceof _m0.Reader ? input : _m0.Reader.create(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseRemoteRouter();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 8) {
            break;
          }

          message.receiver_domain = reader.uint32();
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.receiver_contract = reader.string();
          continue;
        case 3:
          if (tag !== 26) {
            break;
          }

          message.gas = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skipType(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): RemoteRouter {
    return {
      receiver_domain: isSet(object.receiver_domain)
        ? globalThis.Number(object.receiver_domain)
        : 0,
      receiver_contract: isSet(object.receiver_contract)
        ? globalThis.String(object.receiver_contract)
        : '',
      gas: isSet(object.gas) ? globalThis.String(object.gas) : '',
    };
  },

  toJSON(message: RemoteRouter): unknown {
    const obj: any = {};
    if (message.receiver_domain !== 0) {
      obj.receiver_domain = Math.round(message.receiver_domain);
    }
    if (message.receiver_contract !== '') {
      obj.receiver_contract = message.receiver_contract;
    }
    if (message.gas !== '') {
      obj.gas = message.gas;
    }
    return obj;
  },

  create<I extends Exact<DeepPartial<RemoteRouter>, I>>(
    base?: I,
  ): RemoteRouter {
    return RemoteRouter.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<RemoteRouter>, I>>(
    object: I,
  ): RemoteRouter {
    const message = createBaseRemoteRouter();
    message.receiver_domain = object.receiver_domain ?? 0;
    message.receiver_contract = object.receiver_contract ?? '';
    message.gas = object.gas ?? '';
    return message;
  },
};

type Builtin =
  | Date
  | Function
  | Uint8Array
  | string
  | number
  | boolean
  | undefined;

export type DeepPartial<T> = T extends Builtin
  ? T
  : T extends globalThis.Array<infer U>
  ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U>
  ? ReadonlyArray<DeepPartial<U>>
  : T extends {}
  ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

type KeysOfUnion<T> = T extends T ? keyof T : never;
export type Exact<P, I extends P> = P extends Builtin
  ? P
  : P & { [K in keyof P]: Exact<P[K], I[K]> } & {
      [K in Exclude<keyof I, KeysOfUnion<P>>]: never;
    };

function isSet(value: any): boolean {
  return value !== null && value !== undefined;
}
