export const token_fee_hook = {
  prime: '0x800000000000011000000000000000000000000000000000000000000000001',
  compiler_version: '2.6.4',
  bytecode: [
    '0xa0680017fff8000',
    '0x7',
    '0x482680017ffa8000',
    '0x100000000000000000000000000000000',
    '0x400280007ff97fff',
    '0x10780017fff7fff',
    '0xb3',
    '0x4825800180007ffa',
    '0x0',
    '0x400280007ff97fff',
    '0x482680017ff98000',
    '0x1',
    '0x48297ffc80007ffd',
    '0x20680017fff7fff',
    '0x4',
    '0x10780017fff7fff',
    '0x10',
    '0x40780017fff7fff',
    '0x1',
    '0x480680017fff8000',
    '0x496e70757420746f6f206c6f6e6720666f7220617267756d656e7473',
    '0x400080007ffe7fff',
    '0x48127ffc7fff8000',
    '0x48127ffa7fff8000',
    '0x480a7ffb7fff8000',
    '0x480680017fff8000',
    '0x1',
    '0x48127ffa7fff8000',
    '0x482480017ff98000',
    '0x1',
    '0x208b7fff7fff7ffe',
    '0x1104800180018000',
    '0x712',
    '0x482480017fff8000',
    '0x711',
    '0x480080007fff8000',
    '0xa0680017fff8000',
    '0x9',
    '0x4824800180007ff8',
    '0x0',
    '0x482480017fff8000',
    '0x100000000000000000000000000000000',
    '0x400080007ff77fff',
    '0x10780017fff7fff',
    '0x7e',
    '0x4824800180007ff8',
    '0x0',
    '0x400080007ff87fff',
    '0x40780017fff7fff',
    '0x1',
    '0x480680017fff8000',
    '0x15',
    '0x482480017ff68000',
    '0x1',
    '0x1137ffe7fff7fff',
    '0x10780017fff7fff',
    '0x64',
    '0x10780017fff7fff',
    '0x5a',
    '0x10780017fff7fff',
    '0x50',
    '0x10780017fff7fff',
    '0x46',
    '0x10780017fff7fff',
    '0x3c',
    '0x10780017fff7fff',
    '0x32',
    '0x10780017fff7fff',
    '0x28',
    '0x10780017fff7fff',
    '0x1e',
    '0x10780017fff7fff',
    '0x14',
    '0x10780017fff7fff',
    '0xa',
    '0x480680017fff8000',
    '0x0',
    '0x400080007ffc7fff',
    '0x48127ffc7fff8000',
    '0x482480017ffb8000',
    '0x1',
    '0x10780017fff7fff',
    '0x50',
    '0x480680017fff8000',
    '0x1',
    '0x400080007ffc7fff',
    '0x48127ffc7fff8000',
    '0x482480017ffb8000',
    '0x1',
    '0x10780017fff7fff',
    '0x48',
    '0x480680017fff8000',
    '0x2',
    '0x400080007ffc7fff',
    '0x48127ffc7fff8000',
    '0x482480017ffb8000',
    '0x1',
    '0x10780017fff7fff',
    '0x40',
    '0x480680017fff8000',
    '0x3',
    '0x400080007ffc7fff',
    '0x48127ffc7fff8000',
    '0x482480017ffb8000',
    '0x1',
    '0x10780017fff7fff',
    '0x38',
    '0x480680017fff8000',
    '0x4',
    '0x400080007ffc7fff',
    '0x48127ffc7fff8000',
    '0x482480017ffb8000',
    '0x1',
    '0x10780017fff7fff',
    '0x30',
    '0x480680017fff8000',
    '0x5',
    '0x400080007ffc7fff',
    '0x48127ffc7fff8000',
    '0x482480017ffb8000',
    '0x1',
    '0x10780017fff7fff',
    '0x28',
    '0x480680017fff8000',
    '0x6',
    '0x400080007ffc7fff',
    '0x48127ffc7fff8000',
    '0x482480017ffb8000',
    '0x1',
    '0x10780017fff7fff',
    '0x20',
    '0x480680017fff8000',
    '0x7',
    '0x400080007ffc7fff',
    '0x48127ffc7fff8000',
    '0x482480017ffb8000',
    '0x1',
    '0x10780017fff7fff',
    '0x18',
    '0x480680017fff8000',
    '0x8',
    '0x400080007ffc7fff',
    '0x48127ffc7fff8000',
    '0x482480017ffb8000',
    '0x1',
    '0x10780017fff7fff',
    '0x10',
    '0x480680017fff8000',
    '0x9',
    '0x400080007ffc7fff',
    '0x48127ffc7fff8000',
    '0x482480017ffb8000',
    '0x1',
    '0x10780017fff7fff',
    '0x8',
    '0x480680017fff8000',
    '0xa',
    '0x400080007ffc7fff',
    '0x48127ffc7fff8000',
    '0x482480017ffb8000',
    '0x1',
    '0x48127ffc7fff8000',
    '0x48127ff87fff8000',
    '0x480a7ffb7fff8000',
    '0x480680017fff8000',
    '0x0',
    '0x48127ffa7fff8000',
    '0x48127ffa7fff8000',
    '0x208b7fff7fff7ffe',
    '0x40780017fff7fff',
    '0x1',
    '0x480680017fff8000',
    '0x4f7574206f6620676173',
    '0x400080007ffe7fff',
    '0x482480017ff58000',
    '0x1',
    '0x48127ff37fff8000',
    '0x480a7ffb7fff8000',
    '0x480680017fff8000',
    '0x1',
    '0x48127ffa7fff8000',
    '0x482480017ff98000',
    '0x1',
    '0x208b7fff7fff7ffe',
    '0x40780017fff7fff',
    '0x1',
    '0x480680017fff8000',
    '0x4f7574206f6620676173',
    '0x400080007ffe7fff',
    '0x482680017ff98000',
    '0x1',
    '0x480a7ffa7fff8000',
    '0x480a7ffb7fff8000',
    '0x480680017fff8000',
    '0x1',
    '0x48127ffa7fff8000',
    '0x482480017ff98000',
    '0x1',
    '0x208b7fff7fff7ffe',
    '0xa0680017fff8000',
    '0x7',
    '0x482680017ffa8000',
    '0xffffffffffffffffffffffffffffff06',
    '0x400280007ff97fff',
    '0x10780017fff7fff',
    '0x68',
    '0x4825800180007ffa',
    '0xfa',
    '0x400280007ff97fff',
    '0x482680017ff98000',
    '0x1',
    '0x48127ffe7fff8000',
    '0x480a7ffc7fff8000',
    '0x480a7ffd7fff8000',
    '0x1104800180018000',
    '0x23e',
    '0x20680017fff7ff9',
    '0x54',
    '0x20680017fff7ffc',
    '0x44',
    '0x48307ffa80007ffb',
    '0x20680017fff7fff',
    '0x4',
    '0x10780017fff7fff',
    '0x10',
    '0x40780017fff7fff',
    '0x1',
    '0x480680017fff8000',
    '0x496e70757420746f6f206c6f6e6720666f7220617267756d656e7473',
    '0x400080007ffe7fff',
    '0x48127ff47fff8000',
    '0x48127ff47fff8000',
    '0x480a7ffb7fff8000',
    '0x480680017fff8000',
    '0x1',
    '0x48127ffa7fff8000',
    '0x482480017ff98000',
    '0x1',
    '0x208b7fff7fff7ffe',
    '0x1104800180018000',
    '0x642',
    '0x482480017fff8000',
    '0x641',
    '0x480080007fff8000',
    '0xa0680017fff8000',
    '0x9',
    '0x4824800180007ff2',
    '0x0',
    '0x482480017fff8000',
    '0x100000000000000000000000000000000',
    '0x400080007fef7fff',
    '0x10780017fff7fff',
    '0x14',
    '0x4824800180007ff2',
    '0x0',
    '0x400080007ff07fff',
    '0x40780017fff7fff',
    '0x1',
    '0x480680017fff8000',
    '0x1',
    '0x400080007ffe7fff',
    '0x482480017fee8000',
    '0x1',
    '0x48127ffc7fff8000',
    '0x480a7ffb7fff8000',
    '0x480680017fff8000',
    '0x0',
    '0x48127ffa7fff8000',
    '0x482480017ff98000',
    '0x1',
    '0x208b7fff7fff7ffe',
    '0x40780017fff7fff',
    '0x1',
    '0x480680017fff8000',
    '0x4f7574206f6620676173',
    '0x400080007ffe7fff',
    '0x482480017fed8000',
    '0x1',
    '0x48127fed7fff8000',
    '0x480a7ffb7fff8000',
    '0x480680017fff8000',
    '0x1',
    '0x48127ffa7fff8000',
    '0x482480017ff98000',
    '0x1',
    '0x208b7fff7fff7ffe',
    '0x40780017fff7fff',
    '0x1',
    '0x480680017fff8000',
    '0x4661696c656420746f20646573657269616c697a6520706172616d202331',
    '0x400080007ffe7fff',
    '0x48127ff57fff8000',
    '0x48127ff57fff8000',
    '0x480a7ffb7fff8000',
    '0x480680017fff8000',
    '0x1',
    '0x48127ffa7fff8000',
    '0x482480017ff98000',
    '0x1',
    '0x208b7fff7fff7ffe',
    '0x48127ff77fff8000',
    '0x48127ff77fff8000',
    '0x480a7ffb7fff8000',
    '0x480680017fff8000',
    '0x1',
    '0x48127ffa7fff8000',
    '0x48127ffa7fff8000',
    '0x208b7fff7fff7ffe',
    '0x40780017fff7fff',
    '0x1',
    '0x480680017fff8000',
    '0x4f7574206f6620676173',
    '0x400080007ffe7fff',
    '0x482680017ff98000',
    '0x1',
    '0x480a7ffa7fff8000',
    '0x480a7ffb7fff8000',
    '0x480680017fff8000',
    '0x1',
    '0x48127ffa7fff8000',
    '0x482480017ff98000',
    '0x1',
    '0x208b7fff7fff7ffe',
    '0xa0680017fff8000',
    '0x7',
    '0x482680017ffa8000',
    '0xffffffffffffffffffffffffffff89cc',
    '0x400280007ff97fff',
    '0x10780017fff7fff',
    '0x11e',
    '0x4825800180007ffa',
    '0x7634',
    '0x400280007ff97fff',
    '0x482680017ff98000',
    '0x1',
    '0x48127ffe7fff8000',
    '0x480a7ffc7fff8000',
    '0x480a7ffd7fff8000',
    '0x1104800180018000',
    '0x1c2',
    '0x20680017fff7ff9',
    '0x10a',
    '0x20680017fff7ffc',
    '0xfa',
    '0x48127ff77fff8000',
    '0x48127ff77fff8000',
    '0x48127ff87fff8000',
    '0x48127ff87fff8000',
    '0x1104800180018000',
    '0x25e',
    '0x20680017fff7ff1',
    '0xea',
    '0x20680017fff7ff4',
    '0xda',
    '0x48307ff280007ff3',
    '0x20680017fff7fff',
    '0x4',
    '0x10780017fff7fff',
    '0xa',
    '0x482480017ff18000',
    '0x1',
    '0x48127ff17fff8000',
    '0x480680017fff8000',
    '0x0',
    '0x48127fee7fff8000',
    '0x10780017fff7fff',
    '0x8',
    '0x48127ff17fff8000',
    '0x48127ff17fff8000',
    '0x480680017fff8000',
    '0x1',
    '0x480680017fff8000',
    '0x0',
    '0x20680017fff7ffe',
    '0x6c',
    '0x480080007fff8000',
    '0xa0680017fff8000',
    '0x16',
    '0x480080007fe88003',
    '0x480080017fe78003',
    '0x4844800180017ffe',
    '0x100000000000000000000000000000000',
    '0x483080017ffd7ffb',
    '0x482480017fff7ffd',
    '0x800000000000010fffffffffffffffff7ffffffffffffef0000000000000001',
    '0x20680017fff7ffc',
    '0x6',
    '0x402480017fff7ffd',
    '0xffffffffffffffffffffffffffffffff',
    '0x10780017fff7fff',
    '0x4',
    '0x402480017ffe7ffd',
    '0xf7ffffffffffffef0000000000000000',
    '0x400080027fe37ffd',
    '0x20680017fff7ffe',
    '0x51',
    '0x402780017fff7fff',
    '0x1',
    '0x400080007fe87ffe',
    '0x482480017fe88000',
    '0x1',
    '0x48307ff980007ffa',
    '0x20680017fff7fff',
    '0x4',
    '0x10780017fff7fff',
    '0xa',
    '0x482480017ff88000',
    '0x1',
    '0x48127ff87fff8000',
    '0x480680017fff8000',
    '0x0',
    '0x48127ff57fff8000',
    '0x10780017fff7fff',
    '0x8',
    '0x48127ff87fff8000',
    '0x48127ff87fff8000',
    '0x480680017fff8000',
    '0x1',
    '0x480680017fff8000',
    '0x0',
    '0x20680017fff7ffe',
    '0x2a',
    '0x480080007fff8000',
    '0xa0680017fff8000',
    '0x16',
    '0x480080007ff88003',
    '0x480080017ff78003',
    '0x4844800180017ffe',
    '0x100000000000000000000000000000000',
    '0x483080017ffd7ffb',
    '0x482480017fff7ffd',
    '0x800000000000010fffffffffffffffff7ffffffffffffef0000000000000001',
    '0x20680017fff7ffc',
    '0x6',
    '0x402480017fff7ffd',
    '0xffffffffffffffffffffffffffffffff',
    '0x10780017fff7fff',
    '0x4',
    '0x402480017ffe7ffd',
    '0xf7ffffffffffffef0000000000000000',
    '0x400080027ff37ffd',
    '0x20680017fff7ffe',
    '0x11',
    '0x402780017fff7fff',
    '0x1',
    '0x400080007ff87ffe',
    '0x40780017fff7fff',
    '0x5',
    '0x482480017ff38000',
    '0x1',
    '0x48127ff47fff8000',
    '0x48127ff47fff8000',
    '0x480680017fff8000',
    '0x0',
    '0x48127fed7fff8000',
    '0x48127ff47fff8000',
    '0x10780017fff7fff',
    '0x24',
    '0x482480017ff38000',
    '0x3',
    '0x10780017fff7fff',
    '0x5',
    '0x40780017fff7fff',
    '0x7',
    '0x48127ff37fff8000',
    '0x48127ff47fff8000',
    '0x48127ff47fff8000',
    '0x480680017fff8000',
    '0x1',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x10780017fff7fff',
    '0x13',
    '0x40780017fff7fff',
    '0x8',
    '0x482480017fdb8000',
    '0x3',
    '0x10780017fff7fff',
    '0x5',
    '0x40780017fff7fff',
    '0xf',
    '0x48127fdb7fff8000',
    '0x48127fec7fff8000',
    '0x48127fec7fff8000',
    '0x480680017fff8000',
    '0x1',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x20680017fff7ffd',
    '0x40',
    '0x48307ffb80007ffc',
    '0x20680017fff7fff',
    '0x4',
    '0x10780017fff7fff',
    '0x10',
    '0x40780017fff7fff',
    '0x1',
    '0x480680017fff8000',
    '0x496e70757420746f6f206c6f6e6720666f7220617267756d656e7473',
    '0x400080007ffe7fff',
    '0x48127ff77fff8000',
    '0x48127fd27fff8000',
    '0x480a7ffb7fff8000',
    '0x480680017fff8000',
    '0x1',
    '0x48127ffa7fff8000',
    '0x482480017ff98000',
    '0x1',
    '0x208b7fff7fff7ffe',
    '0x1104800180018000',
    '0x530',
    '0x482480017fff8000',
    '0x52f',
    '0x480080007fff8000',
    '0xa0680017fff8000',
    '0x9',
    '0x4824800180007fd0',
    '0x0',
    '0x482480017fff8000',
    '0x100000000000000000000000000000000',
    '0x400080007ff27fff',
    '0x10780017fff7fff',
    '0x10',
    '0x4824800180007fd0',
    '0x0',
    '0x400080007ff37fff',
    '0x40780017fff7fff',
    '0x1',
    '0x482480017ff28000',
    '0x1',
    '0x48127ffd7fff8000',
    '0x480a7ffb7fff8000',
    '0x480680017fff8000',
    '0x0',
    '0x48127ffb7fff8000',
    '0x48127ffa7fff8000',
    '0x208b7fff7fff7ffe',
    '0x40780017fff7fff',
    '0x1',
    '0x480680017fff8000',
    '0x4f7574206f6620676173',
    '0x400080007ffe7fff',
    '0x482480017ff08000',
    '0x1',
    '0x48127fcb7fff8000',
    '0x480a7ffb7fff8000',
    '0x480680017fff8000',
    '0x1',
    '0x48127ffa7fff8000',
    '0x482480017ff98000',
    '0x1',
    '0x208b7fff7fff7ffe',
    '0x40780017fff7fff',
    '0x1',
    '0x480680017fff8000',
    '0x4661696c656420746f20646573657269616c697a6520706172616d202333',
    '0x400080007ffe7fff',
    '0x48127ff87fff8000',
    '0x48127fd37fff8000',
    '0x480a7ffb7fff8000',
    '0x480680017fff8000',
    '0x1',
    '0x48127ffa7fff8000',
    '0x482480017ff98000',
    '0x1',
    '0x208b7fff7fff7ffe',
    '0x40780017fff7fff',
    '0x1',
    '0x480680017fff8000',
    '0x4661696c656420746f20646573657269616c697a6520706172616d202332',
    '0x400080007ffe7fff',
    '0x48127fed7fff8000',
    '0x48127fed7fff8000',
    '0x480a7ffb7fff8000',
    '0x480680017fff8000',
    '0x1',
    '0x48127ffa7fff8000',
    '0x482480017ff98000',
    '0x1',
    '0x208b7fff7fff7ffe',
    '0x48127fef7fff8000',
    '0x48127fef7fff8000',
    '0x480a7ffb7fff8000',
    '0x480680017fff8000',
    '0x1',
    '0x48127ffa7fff8000',
    '0x48127ffa7fff8000',
    '0x208b7fff7fff7ffe',
    '0x40780017fff7fff',
    '0x1',
    '0x480680017fff8000',
    '0x4661696c656420746f20646573657269616c697a6520706172616d202331',
    '0x400080007ffe7fff',
    '0x48127ff57fff8000',
    '0x48127ff57fff8000',
    '0x480a7ffb7fff8000',
    '0x480680017fff8000',
    '0x1',
    '0x48127ffa7fff8000',
    '0x482480017ff98000',
    '0x1',
    '0x208b7fff7fff7ffe',
    '0x48127ff77fff8000',
    '0x48127ff77fff8000',
    '0x480a7ffb7fff8000',
    '0x480680017fff8000',
    '0x1',
    '0x48127ffa7fff8000',
    '0x48127ffa7fff8000',
    '0x208b7fff7fff7ffe',
    '0x40780017fff7fff',
    '0x1',
    '0x480680017fff8000',
    '0x4f7574206f6620676173',
    '0x400080007ffe7fff',
    '0x482680017ff98000',
    '0x1',
    '0x480a7ffa7fff8000',
    '0x480a7ffb7fff8000',
    '0x480680017fff8000',
    '0x1',
    '0x48127ffa7fff8000',
    '0x482480017ff98000',
    '0x1',
    '0x208b7fff7fff7ffe',
    '0xa0680017fff8000',
    '0x7',
    '0x482680017ffa8000',
    '0xffffffffffffffffffffffffffff9ae8',
    '0x400280007ff97fff',
    '0x10780017fff7fff',
    '0x8b',
    '0x4825800180007ffa',
    '0x6518',
    '0x400280007ff97fff',
    '0x482680017ff98000',
    '0x1',
    '0x48127ffe7fff8000',
    '0x480a7ffc7fff8000',
    '0x480a7ffd7fff8000',
    '0x1104800180018000',
    '0x90',
    '0x20680017fff7ff9',
    '0x77',
    '0x20680017fff7ffc',
    '0x67',
    '0x48127ff77fff8000',
    '0x48127ff77fff8000',
    '0x48127ff87fff8000',
    '0x48127ff87fff8000',
    '0x1104800180018000',
    '0x12c',
    '0x20680017fff7ff1',
    '0x57',
    '0x20680017fff7ff4',
    '0x47',
    '0x48307ff280007ff3',
    '0x20680017fff7fff',
    '0x4',
    '0x10780017fff7fff',
    '0x10',
    '0x40780017fff7fff',
    '0x1',
    '0x480680017fff8000',
    '0x496e70757420746f6f206c6f6e6720666f7220617267756d656e7473',
    '0x400080007ffe7fff',
    '0x48127fec7fff8000',
    '0x48127fec7fff8000',
    '0x480a7ffb7fff8000',
    '0x480680017fff8000',
    '0x1',
    '0x48127ffa7fff8000',
    '0x482480017ff98000',
    '0x1',
    '0x208b7fff7fff7ffe',
    '0x1104800180018000',
    '0x48a',
    '0x482480017fff8000',
    '0x489',
    '0x480080007fff8000',
    '0xa0680017fff8000',
    '0x9',
    '0x4824800180007fea',
    '0x0',
    '0x482480017fff8000',
    '0x100000000000000000000000000000000',
    '0x400080007fe77fff',
    '0x10780017fff7fff',
    '0x17',
    '0x4824800180007fea',
    '0x0',
    '0x400080007fe87fff',
    '0x40780017fff7fff',
    '0x1',
    '0x480680017fff8000',
    '0x2dc6c0',
    '0x400080007ffe7fff',
    '0x480680017fff8000',
    '0x0',
    '0x400080017ffd7fff',
    '0x482480017fe58000',
    '0x1',
    '0x48127ffb7fff8000',
    '0x480a7ffb7fff8000',
    '0x480680017fff8000',
    '0x0',
    '0x48127ff97fff8000',
    '0x482480017ff88000',
    '0x2',
    '0x208b7fff7fff7ffe',
    '0x40780017fff7fff',
    '0x1',
    '0x480680017fff8000',
    '0x4f7574206f6620676173',
    '0x400080007ffe7fff',
    '0x482480017fe58000',
    '0x1',
    '0x48127fe57fff8000',
    '0x480a7ffb7fff8000',
    '0x480680017fff8000',
    '0x1',
    '0x48127ffa7fff8000',
    '0x482480017ff98000',
    '0x1',
    '0x208b7fff7fff7ffe',
    '0x40780017fff7fff',
    '0x1',
    '0x480680017fff8000',
    '0x4661696c656420746f20646573657269616c697a6520706172616d202332',
    '0x400080007ffe7fff',
    '0x48127fed7fff8000',
    '0x48127fed7fff8000',
    '0x480a7ffb7fff8000',
    '0x480680017fff8000',
    '0x1',
    '0x48127ffa7fff8000',
    '0x482480017ff98000',
    '0x1',
    '0x208b7fff7fff7ffe',
    '0x48127fef7fff8000',
    '0x48127fef7fff8000',
    '0x480a7ffb7fff8000',
    '0x480680017fff8000',
    '0x1',
    '0x48127ffa7fff8000',
    '0x48127ffa7fff8000',
    '0x208b7fff7fff7ffe',
    '0x40780017fff7fff',
    '0x1',
    '0x480680017fff8000',
    '0x4661696c656420746f20646573657269616c697a6520706172616d202331',
    '0x400080007ffe7fff',
    '0x48127ff57fff8000',
    '0x48127ff57fff8000',
    '0x480a7ffb7fff8000',
    '0x480680017fff8000',
    '0x1',
    '0x48127ffa7fff8000',
    '0x482480017ff98000',
    '0x1',
    '0x208b7fff7fff7ffe',
    '0x48127ff77fff8000',
    '0x48127ff77fff8000',
    '0x480a7ffb7fff8000',
    '0x480680017fff8000',
    '0x1',
    '0x48127ffa7fff8000',
    '0x48127ffa7fff8000',
    '0x208b7fff7fff7ffe',
    '0x40780017fff7fff',
    '0x1',
    '0x480680017fff8000',
    '0x4f7574206f6620676173',
    '0x400080007ffe7fff',
    '0x482680017ff98000',
    '0x1',
    '0x480a7ffa7fff8000',
    '0x480a7ffb7fff8000',
    '0x480680017fff8000',
    '0x1',
    '0x48127ffa7fff8000',
    '0x482480017ff98000',
    '0x1',
    '0x208b7fff7fff7ffe',
    '0x40780017fff7fff',
    '0x1',
    '0x48297ffc80007ffd',
    '0x20680017fff7fff',
    '0x4',
    '0x10780017fff7fff',
    '0xa',
    '0x482680017ffc8000',
    '0x1',
    '0x480a7ffd7fff8000',
    '0x480680017fff8000',
    '0x0',
    '0x480a7ffc7fff8000',
    '0x10780017fff7fff',
    '0x8',
    '0x480a7ffc7fff8000',
    '0x480a7ffd7fff8000',
    '0x480680017fff8000',
    '0x1',
    '0x480680017fff8000',
    '0x0',
    '0x20680017fff7ffe',
    '0x80',
    '0x400180007fff8000',
    '0xa0680017fff8000',
    '0x12',
    '0x4825800180008000',
    '0x100000000',
    '0x4844800180008002',
    '0x8000000000000110000000000000000',
    '0x4830800080017ffe',
    '0x480280007ffa7fff',
    '0x482480017ffe8000',
    '0xefffffffffffffde00000000ffffffff',
    '0x480280017ffa7fff',
    '0x400280027ffa7ffb',
    '0x402480017fff7ffb',
    '0xffffffffffffffffffffffffffffffff',
    '0x20680017fff7fff',
    '0x6b',
    '0x402780017fff7fff',
    '0x1',
    '0x400380007ffa8000',
    '0x4826800180008000',
    '0xffffffffffffffffffffffff00000000',
    '0x400280017ffa7fff',
    '0x482680017ffa8000',
    '0x2',
    '0x48307ff980007ffa',
    '0x20680017fff7fff',
    '0x4',
    '0x10780017fff7fff',
    '0xa',
    '0x482480017ff88000',
    '0x1',
    '0x48127ff87fff8000',
    '0x480680017fff8000',
    '0x0',
    '0x48127ff57fff8000',
    '0x10780017fff7fff',
    '0x8',
    '0x48127ff87fff8000',
    '0x48127ff87fff8000',
    '0x480680017fff8000',
    '0x1',
    '0x480680017fff8000',
    '0x0',
    '0x20680017fff7ffe',
    '0x27',
    '0x40780017fff7fff',
    '0x1',
    '0x48127ff97fff8000',
    '0x480a7ffb7fff8000',
    '0x48127ff97fff8000',
    '0x48127ff97fff8000',
    '0x48127ffb7fff8000',
    '0x48127ffa7fff8000',
    '0x480080007ff88000',
    '0x1104800180018000',
    '0x354',
    '0x20680017fff7ffa',
    '0xb',
    '0x48127ff87fff8000',
    '0x48127ff87fff8000',
    '0x48127ff97fff8000',
    '0x48127ff97fff8000',
    '0x48127ff97fff8000',
    '0x48127ff97fff8000',
    '0x48127ff97fff8000',
    '0x10780017fff7fff',
    '0x1b',
    '0x48127ff87fff8000',
    '0x48127ff87fff8000',
    '0x480680017fff8000',
    '0x1',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x48127ff77fff8000',
    '0x48127ff77fff8000',
    '0x208b7fff7fff7ffe',
    '0x48127ffa7fff8000',
    '0x480a7ffb7fff8000',
    '0x48127ffa7fff8000',
    '0x48127ffa7fff8000',
    '0x480680017fff8000',
    '0x1',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x20680017fff7ffd',
    '0xe',
    '0x48127ff97fff8000',
    '0x48127ff97fff8000',
    '0x480680017fff8000',
    '0x0',
    '0x48127ff87fff8000',
    '0x48127ff87fff8000',
    '0x480680017fff8000',
    '0x0',
    '0x480a80007fff8000',
    '0x48127ff77fff8000',
    '0x48127ff77fff8000',
    '0x208b7fff7fff7ffe',
    '0x48127ff97fff8000',
    '0x48127ff97fff8000',
    '0x480680017fff8000',
    '0x0',
    '0x48127ff87fff8000',
    '0x48127ff87fff8000',
    '0x480680017fff8000',
    '0x1',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x208b7fff7fff7ffe',
    '0x482680017ffa8000',
    '0x3',
    '0x10780017fff7fff',
    '0x5',
    '0x40780017fff7fff',
    '0x7',
    '0x480a7ffa7fff8000',
    '0x480a7ffb7fff8000',
    '0x480680017fff8000',
    '0x0',
    '0x48127ff27fff8000',
    '0x48127ff27fff8000',
    '0x480680017fff8000',
    '0x1',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x208b7fff7fff7ffe',
    '0x40780017fff7fff',
    '0x8',
    '0x48297ffc80007ffd',
    '0x20680017fff7fff',
    '0x4',
    '0x10780017fff7fff',
    '0xa',
    '0x482680017ffc8000',
    '0x1',
    '0x480a7ffd7fff8000',
    '0x480680017fff8000',
    '0x0',
    '0x480a7ffc7fff8000',
    '0x10780017fff7fff',
    '0x8',
    '0x480a7ffc7fff8000',
    '0x480a7ffd7fff8000',
    '0x480680017fff8000',
    '0x1',
    '0x480680017fff8000',
    '0x0',
    '0x20680017fff7ffe',
    '0x2c6',
    '0x400180007fff8004',
    '0xa0680017fff8000',
    '0x12',
    '0x4825800180008004',
    '0x100',
    '0x4844800180008002',
    '0x8000000000000110000000000000000',
    '0x4830800080017ffe',
    '0x480280007ffa7fff',
    '0x482480017ffe8000',
    '0xefffffffffffffde00000000000000ff',
    '0x480280017ffa7fff',
    '0x400280027ffa7ffb',
    '0x402480017fff7ffb',
    '0xffffffffffffffffffffffffffffffff',
    '0x20680017fff7fff',
    '0x2b1',
    '0x402780017fff7fff',
    '0x1',
    '0x400380007ffa8004',
    '0x4826800180048000',
    '0xffffffffffffffffffffffffffffff00',
    '0x400280017ffa7fff',
    '0x482680017ffa8000',
    '0x2',
    '0x48307ff980007ffa',
    '0x20680017fff7fff',
    '0x4',
    '0x10780017fff7fff',
    '0xa',
    '0x482480017ff88000',
    '0x1',
    '0x48127ff87fff8000',
    '0x480680017fff8000',
    '0x0',
    '0x48127ff57fff8000',
    '0x10780017fff7fff',
    '0x8',
    '0x48127ff87fff8000',
    '0x48127ff87fff8000',
    '0x480680017fff8000',
    '0x1',
    '0x480680017fff8000',
    '0x0',
    '0x20680017fff7ffe',
    '0x273',
    '0x400180007fff8003',
    '0xa0680017fff8000',
    '0x12',
    '0x4825800180008003',
    '0x100000000',
    '0x4844800180008002',
    '0x8000000000000110000000000000000',
    '0x4830800080017ffe',
    '0x480080007ff67fff',
    '0x482480017ffe8000',
    '0xefffffffffffffde00000000ffffffff',
    '0x480080017ff47fff',
    '0x400080027ff37ffb',
    '0x402480017fff7ffb',
    '0xffffffffffffffffffffffffffffffff',
    '0x20680017fff7fff',
    '0x25e',
    '0x402780017fff7fff',
    '0x1',
    '0x400180007ff98003',
    '0x4826800180038000',
    '0xffffffffffffffffffffffff00000000',
    '0x400080017ff87fff',
    '0x482480017ff88000',
    '0x2',
    '0x48307ff980007ffa',
    '0x20680017fff7fff',
    '0x4',
    '0x10780017fff7fff',
    '0xa',
    '0x482480017ff88000',
    '0x1',
    '0x48127ff87fff8000',
    '0x480680017fff8000',
    '0x0',
    '0x48127ff57fff8000',
    '0x10780017fff7fff',
    '0x8',
    '0x48127ff87fff8000',
    '0x48127ff87fff8000',
    '0x480680017fff8000',
    '0x1',
    '0x480680017fff8000',
    '0x0',
    '0x20680017fff7ffe',
    '0x220',
    '0x400180007fff8002',
    '0xa0680017fff8000',
    '0x12',
    '0x4825800180008002',
    '0x100000000',
    '0x4844800180008002',
    '0x8000000000000110000000000000000',
    '0x4830800080017ffe',
    '0x480080007ff67fff',
    '0x482480017ffe8000',
    '0xefffffffffffffde00000000ffffffff',
    '0x480080017ff47fff',
    '0x400080027ff37ffb',
    '0x402480017fff7ffb',
    '0xffffffffffffffffffffffffffffffff',
    '0x20680017fff7fff',
    '0x20b',
    '0x402780017fff7fff',
    '0x1',
    '0x400180007ff98002',
    '0x4826800180028000',
    '0xffffffffffffffffffffffff00000000',
    '0x400080017ff87fff',
    '0x482480017ff88000',
    '0x2',
    '0x48307ff980007ffa',
    '0x20680017fff7fff',
    '0x4',
    '0x10780017fff7fff',
    '0xa',
    '0x482480017ff88000',
    '0x1',
    '0x48127ff87fff8000',
    '0x480680017fff8000',
    '0x0',
    '0x48127ff57fff8000',
    '0x10780017fff7fff',
    '0x8',
    '0x48127ff87fff8000',
    '0x48127ff87fff8000',
    '0x480680017fff8000',
    '0x1',
    '0x480680017fff8000',
    '0x0',
    '0x20680017fff7ffe',
    '0x68',
    '0x480080007fff8000',
    '0xa0680017fff8000',
    '0x16',
    '0x480080007ff88003',
    '0x480080017ff78003',
    '0x4844800180017ffe',
    '0x100000000000000000000000000000000',
    '0x483080017ffd7ffb',
    '0x482480017fff7ffd',
    '0x800000000000010fffffffffffffffff7ffffffffffffef0000000000000001',
    '0x20680017fff7ffc',
    '0x6',
    '0x402480017fff7ffd',
    '0xffffffffffffffffffffffffffffffff',
    '0x10780017fff7fff',
    '0x4',
    '0x402480017ffe7ffd',
    '0xf7ffffffffffffef0000000000000000',
    '0x400080027ff37ffd',
    '0x20680017fff7ffe',
    '0x4f',
    '0x402780017fff7fff',
    '0x1',
    '0x400080007ff87ffe',
    '0x482480017ff88000',
    '0x1',
    '0x48307ff980007ffa',
    '0x20680017fff7fff',
    '0x4',
    '0x10780017fff7fff',
    '0xa',
    '0x482480017ff88000',
    '0x1',
    '0x48127ff87fff8000',
    '0x480680017fff8000',
    '0x0',
    '0x48127ff57fff8000',
    '0x10780017fff7fff',
    '0x8',
    '0x48127ff87fff8000',
    '0x48127ff87fff8000',
    '0x480680017fff8000',
    '0x1',
    '0x480680017fff8000',
    '0x0',
    '0x20680017fff7ffe',
    '0x28',
    '0x480080007fff8000',
    '0xa0680017fff8000',
    '0x16',
    '0x480080007ff88003',
    '0x480080017ff78003',
    '0x4844800180017ffe',
    '0x100000000000000000000000000000000',
    '0x483080017ffd7ffb',
    '0x482480017fff7ffd',
    '0x800000000000010fffffffffffffffff7ffffffffffffef0000000000000001',
    '0x20680017fff7ffc',
    '0x6',
    '0x402480017fff7ffd',
    '0xffffffffffffffffffffffffffffffff',
    '0x10780017fff7fff',
    '0x4',
    '0x402480017ffe7ffd',
    '0xf7ffffffffffffef0000000000000000',
    '0x400080027ff37ffd',
    '0x20680017fff7ffe',
    '0xf',
    '0x402780017fff7fff',
    '0x1',
    '0x400080007ff87ffe',
    '0x482480017ff88000',
    '0x1',
    '0x48127ff97fff8000',
    '0x48127ff97fff8000',
    '0x480680017fff8000',
    '0x0',
    '0x48127ff27fff8000',
    '0x48127ff97fff8000',
    '0x10780017fff7fff',
    '0x22',
    '0x482480017ff38000',
    '0x3',
    '0x10780017fff7fff',
    '0x5',
    '0x40780017fff7fff',
    '0x7',
    '0x48127ff37fff8000',
    '0x48127ff47fff8000',
    '0x48127ff47fff8000',
    '0x480680017fff8000',
    '0x1',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x10780017fff7fff',
    '0x11',
    '0x482480017ff38000',
    '0x3',
    '0x10780017fff7fff',
    '0x5',
    '0x40780017fff7fff',
    '0x7',
    '0x48127ff37fff8000',
    '0x48127ff47fff8000',
    '0x48127ff47fff8000',
    '0x480680017fff8000',
    '0x1',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x20680017fff7ffd',
    '0x15c',
    '0x40137ffe7fff8000',
    '0x40137fff7fff8001',
    '0x48307ffb80007ffc',
    '0x20680017fff7fff',
    '0x4',
    '0x10780017fff7fff',
    '0xa',
    '0x482480017ffa8000',
    '0x1',
    '0x48127ffa7fff8000',
    '0x480680017fff8000',
    '0x0',
    '0x48127ff77fff8000',
    '0x10780017fff7fff',
    '0x8',
    '0x48127ffa7fff8000',
    '0x48127ffa7fff8000',
    '0x480680017fff8000',
    '0x1',
    '0x480680017fff8000',
    '0x0',
    '0x20680017fff7ffe',
    '0x124',
    '0x400180007fff8007',
    '0xa0680017fff8000',
    '0x12',
    '0x4825800180008007',
    '0x100000000',
    '0x4844800180008002',
    '0x8000000000000110000000000000000',
    '0x4830800080017ffe',
    '0x480080007ff17fff',
    '0x482480017ffe8000',
    '0xefffffffffffffde00000000ffffffff',
    '0x480080017fef7fff',
    '0x400080027fee7ffb',
    '0x402480017fff7ffb',
    '0xffffffffffffffffffffffffffffffff',
    '0x20680017fff7fff',
    '0x10f',
    '0x402780017fff7fff',
    '0x1',
    '0x400180007ff48007',
    '0x4826800180078000',
    '0xffffffffffffffffffffffff00000000',
    '0x400080017ff37fff',
    '0x482480017ff38000',
    '0x2',
    '0x48307ff980007ffa',
    '0x20680017fff7fff',
    '0x4',
    '0x10780017fff7fff',
    '0xa',
    '0x482480017ff88000',
    '0x1',
    '0x48127ff87fff8000',
    '0x480680017fff8000',
    '0x0',
    '0x48127ff57fff8000',
    '0x10780017fff7fff',
    '0x8',
    '0x48127ff87fff8000',
    '0x48127ff87fff8000',
    '0x480680017fff8000',
    '0x1',
    '0x480680017fff8000',
    '0x0',
    '0x20680017fff7ffe',
    '0x68',
    '0x480080007fff8000',
    '0xa0680017fff8000',
    '0x16',
    '0x480080007ff88003',
    '0x480080017ff78003',
    '0x4844800180017ffe',
    '0x100000000000000000000000000000000',
    '0x483080017ffd7ffb',
    '0x482480017fff7ffd',
    '0x800000000000010fffffffffffffffff7ffffffffffffef0000000000000001',
    '0x20680017fff7ffc',
    '0x6',
    '0x402480017fff7ffd',
    '0xffffffffffffffffffffffffffffffff',
    '0x10780017fff7fff',
    '0x4',
    '0x402480017ffe7ffd',
    '0xf7ffffffffffffef0000000000000000',
    '0x400080027ff37ffd',
    '0x20680017fff7ffe',
    '0x4f',
    '0x402780017fff7fff',
    '0x1',
    '0x400080007ff87ffe',
    '0x482480017ff88000',
    '0x1',
    '0x48307ff980007ffa',
    '0x20680017fff7fff',
    '0x4',
    '0x10780017fff7fff',
    '0xa',
    '0x482480017ff88000',
    '0x1',
    '0x48127ff87fff8000',
    '0x480680017fff8000',
    '0x0',
    '0x48127ff57fff8000',
    '0x10780017fff7fff',
    '0x8',
    '0x48127ff87fff8000',
    '0x48127ff87fff8000',
    '0x480680017fff8000',
    '0x1',
    '0x480680017fff8000',
    '0x0',
    '0x20680017fff7ffe',
    '0x28',
    '0x480080007fff8000',
    '0xa0680017fff8000',
    '0x16',
    '0x480080007ff88003',
    '0x480080017ff78003',
    '0x4844800180017ffe',
    '0x100000000000000000000000000000000',
    '0x483080017ffd7ffb',
    '0x482480017fff7ffd',
    '0x800000000000010fffffffffffffffff7ffffffffffffef0000000000000001',
    '0x20680017fff7ffc',
    '0x6',
    '0x402480017fff7ffd',
    '0xffffffffffffffffffffffffffffffff',
    '0x10780017fff7fff',
    '0x4',
    '0x402480017ffe7ffd',
    '0xf7ffffffffffffef0000000000000000',
    '0x400080027ff37ffd',
    '0x20680017fff7ffe',
    '0xf',
    '0x402780017fff7fff',
    '0x1',
    '0x400080007ff87ffe',
    '0x482480017ff88000',
    '0x1',
    '0x48127ff97fff8000',
    '0x48127ff97fff8000',
    '0x480680017fff8000',
    '0x0',
    '0x48127ff27fff8000',
    '0x48127ff97fff8000',
    '0x10780017fff7fff',
    '0x22',
    '0x482480017ff38000',
    '0x3',
    '0x10780017fff7fff',
    '0x5',
    '0x40780017fff7fff',
    '0x7',
    '0x48127ff37fff8000',
    '0x48127ff47fff8000',
    '0x48127ff47fff8000',
    '0x480680017fff8000',
    '0x1',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x10780017fff7fff',
    '0x11',
    '0x482480017ff38000',
    '0x3',
    '0x10780017fff7fff',
    '0x5',
    '0x40780017fff7fff',
    '0x7',
    '0x48127ff37fff8000',
    '0x48127ff47fff8000',
    '0x48127ff47fff8000',
    '0x480680017fff8000',
    '0x1',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x20680017fff7ffd',
    '0x60',
    '0x48127ffa7fff8000',
    '0x480a7ffb7fff8000',
    '0x48127ff97fff8000',
    '0x48127ff97fff8000',
    '0x40137ffa7fff8005',
    '0x40137ffb7fff8006',
    '0x1104800180018000',
    '0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd89',
    '0x20680017fff7ff9',
    '0x37',
    '0x20680017fff7ffc',
    '0x16',
    '0x48127ff77fff8000',
    '0x48127ff77fff8000',
    '0x480680017fff8000',
    '0x0',
    '0x48127ff77fff8000',
    '0x48127ff77fff8000',
    '0x480680017fff8000',
    '0x0',
    '0x480a80047fff8000',
    '0x480a80037fff8000',
    '0x480a80027fff8000',
    '0x480a80007fff8000',
    '0x480a80017fff8000',
    '0x480a80077fff8000',
    '0x480a80057fff8000',
    '0x480a80067fff8000',
    '0x48127fef7fff8000',
    '0x48127fef7fff8000',
    '0x48127fef7fff8000',
    '0x208b7fff7fff7ffe',
    '0x48127ff77fff8000',
    '0x48127ff77fff8000',
    '0x480680017fff8000',
    '0x0',
    '0x48127ff77fff8000',
    '0x48127ff77fff8000',
    '0x480680017fff8000',
    '0x1',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x208b7fff7fff7ffe',
    '0x48127ff77fff8000',
    '0x48127ff77fff8000',
    '0x480680017fff8000',
    '0x1',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x48127fef7fff8000',
    '0x48127fef7fff8000',
    '0x208b7fff7fff7ffe',
    '0x48127ffa7fff8000',
    '0x480a7ffb7fff8000',
    '0x480680017fff8000',
    '0x0',
    '0x48127ff87fff8000',
    '0x48127ff87fff8000',
    '0x480680017fff8000',
    '0x1',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x208b7fff7fff7ffe',
    '0x482480017fee8000',
    '0x3',
    '0x10780017fff7fff',
    '0x5',
    '0x40780017fff7fff',
    '0x7',
    '0x48127fee7fff8000',
    '0x480a7ffb7fff8000',
    '0x480680017fff8000',
    '0x0',
    '0x48127ff27fff8000',
    '0x48127ff27fff8000',
    '0x480680017fff8000',
    '0x1',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x208b7fff7fff7ffe',
    '0x48127ffa7fff8000',
    '0x480a7ffb7fff8000',
    '0x480680017fff8000',
    '0x0',
    '0x48127ff87fff8000',
    '0x48127ff87fff8000',
    '0x480680017fff8000',
    '0x1',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x208b7fff7fff7ffe',
    '0x482480017ff38000',
    '0x3',
    '0x10780017fff7fff',
    '0x5',
    '0x40780017fff7fff',
    '0x7',
    '0x48127ff37fff8000',
    '0x480a7ffb7fff8000',
    '0x480680017fff8000',
    '0x0',
    '0x48127ff27fff8000',
    '0x48127ff27fff8000',
    '0x480680017fff8000',
    '0x1',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x208b7fff7fff7ffe',
    '0x482480017ff38000',
    '0x3',
    '0x10780017fff7fff',
    '0x5',
    '0x40780017fff7fff',
    '0x7',
    '0x48127ff37fff8000',
    '0x480a7ffb7fff8000',
    '0x480680017fff8000',
    '0x0',
    '0x48127ff27fff8000',
    '0x48127ff27fff8000',
    '0x480680017fff8000',
    '0x1',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x208b7fff7fff7ffe',
    '0x482680017ffa8000',
    '0x3',
    '0x10780017fff7fff',
    '0x5',
    '0x40780017fff7fff',
    '0x7',
    '0x480a7ffa7fff8000',
    '0x480a7ffb7fff8000',
    '0x480680017fff8000',
    '0x0',
    '0x48127ff27fff8000',
    '0x48127ff27fff8000',
    '0x480680017fff8000',
    '0x1',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x208b7fff7fff7ffe',
    '0xa0680017fff8000',
    '0x7',
    '0x482680017ff88000',
    '0xfffffffffffffffffffffffffffff54c',
    '0x400280007ff77fff',
    '0x10780017fff7fff',
    '0x62',
    '0x4825800180007ff8',
    '0xab4',
    '0x400280007ff77fff',
    '0x482680017ff78000',
    '0x1',
    '0x20780017fff7ffd',
    '0xd',
    '0x48127fff7fff8000',
    '0x48127ffd7fff8000',
    '0x480680017fff8000',
    '0x0',
    '0x480a7ff97fff8000',
    '0x480a7ffa7fff8000',
    '0x480680017fff8000',
    '0x0',
    '0x480a7ffb7fff8000',
    '0x480a7ffc7fff8000',
    '0x208b7fff7fff7ffe',
    '0x48297ff980007ffa',
    '0x20680017fff7fff',
    '0x4',
    '0x10780017fff7fff',
    '0xa',
    '0x482680017ff98000',
    '0x1',
    '0x480a7ffa7fff8000',
    '0x480680017fff8000',
    '0x0',
    '0x480a7ff97fff8000',
    '0x10780017fff7fff',
    '0x8',
    '0x480a7ff97fff8000',
    '0x480a7ffa7fff8000',
    '0x480680017fff8000',
    '0x1',
    '0x480680017fff8000',
    '0x0',
    '0x20680017fff7ffe',
    '0x2c',
    '0x480080007fff8000',
    '0xa0680017fff8000',
    '0x16',
    '0x480080007ff88003',
    '0x480080017ff78003',
    '0x4844800180017ffe',
    '0x100000000000000000000000000000000',
    '0x483080017ffd7ffb',
    '0x482480017fff7ffd',
    '0x800000000000010fffffffffffffffff7ffffffffffffef0000000000000001',
    '0x20680017fff7ffc',
    '0x6',
    '0x402480017fff7ffd',
    '0xffffffffffffffffffffffffffffffff',
    '0x10780017fff7fff',
    '0x4',
    '0x402480017ffe7ffd',
    '0xf7ffffffffffffef0000000000000000',
    '0x400080027ff37ffd',
    '0x20680017fff7ffe',
    '0x13',
    '0x402780017fff7fff',
    '0x1',
    '0x400080007ff87ffe',
    '0x400280007ffc7ffe',
    '0x482480017ff88000',
    '0x1',
    '0x48127ff67fff8000',
    '0x48127ff87fff8000',
    '0x48127ff87fff8000',
    '0x480a7ffb7fff8000',
    '0x482680017ffc8000',
    '0x1',
    '0x4825800180007ffd',
    '0x1',
    '0x1104800180018000',
    '0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffb0',
    '0x208b7fff7fff7ffe',
    '0x482480017ff38000',
    '0x3',
    '0x10780017fff7fff',
    '0x5',
    '0x40780017fff7fff',
    '0x7',
    '0x48127ff37fff8000',
    '0x48127ff17fff8000',
    '0x480680017fff8000',
    '0x0',
    '0x48127ff27fff8000',
    '0x48127ff27fff8000',
    '0x480680017fff8000',
    '0x1',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x208b7fff7fff7ffe',
    '0x40780017fff7fff',
    '0x1',
    '0x480680017fff8000',
    '0x4f7574206f6620676173',
    '0x400080007ffe7fff',
    '0x482680017ff78000',
    '0x1',
    '0x480a7ff87fff8000',
    '0x480680017fff8000',
    '0x1',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x480680017fff8000',
    '0x0',
    '0x48127ff87fff8000',
    '0x482480017ff78000',
    '0x1',
    '0x208b7fff7fff7ffe',
  ],
  bytecode_segment_lengths: [199, 124, 306, 159, 166, 764, 123],
  hints: [
    [
      0,
      [
        {
          TestLessThanOrEqual: {
            lhs: {
              Immediate: '0x0',
            },
            rhs: {
              Deref: {
                register: 'FP',
                offset: -6,
              },
            },
            dst: {
              register: 'AP',
              offset: 0,
            },
          },
        },
      ],
    ],
    [
      17,
      [
        {
          AllocSegment: {
            dst: {
              register: 'AP',
              offset: 0,
            },
          },
        },
      ],
    ],
    [
      36,
      [
        {
          TestLessThanOrEqual: {
            lhs: {
              Immediate: '0x0',
            },
            rhs: {
              Deref: {
                register: 'AP',
                offset: -7,
              },
            },
            dst: {
              register: 'AP',
              offset: 0,
            },
          },
        },
      ],
    ],
    [
      48,
      [
        {
          AllocSegment: {
            dst: {
              register: 'AP',
              offset: 0,
            },
          },
        },
      ],
    ],
    [
      169,
      [
        {
          AllocSegment: {
            dst: {
              register: 'AP',
              offset: 0,
            },
          },
        },
      ],
    ],
    [
      184,
      [
        {
          AllocSegment: {
            dst: {
              register: 'AP',
              offset: 0,
            },
          },
        },
      ],
    ],
    [
      199,
      [
        {
          TestLessThanOrEqual: {
            lhs: {
              Immediate: '0xfa',
            },
            rhs: {
              Deref: {
                register: 'FP',
                offset: -6,
              },
            },
            dst: {
              register: 'AP',
              offset: 0,
            },
          },
        },
      ],
    ],
    [
      225,
      [
        {
          AllocSegment: {
            dst: {
              register: 'AP',
              offset: 0,
            },
          },
        },
      ],
    ],
    [
      244,
      [
        {
          TestLessThanOrEqual: {
            lhs: {
              Immediate: '0x0',
            },
            rhs: {
              Deref: {
                register: 'AP',
                offset: -13,
              },
            },
            dst: {
              register: 'AP',
              offset: 0,
            },
          },
        },
      ],
    ],
    [
      256,
      [
        {
          AllocSegment: {
            dst: {
              register: 'AP',
              offset: 0,
            },
          },
        },
      ],
    ],
    [
      271,
      [
        {
          AllocSegment: {
            dst: {
              register: 'AP',
              offset: 0,
            },
          },
        },
      ],
    ],
    [
      286,
      [
        {
          AllocSegment: {
            dst: {
              register: 'AP',
              offset: 0,
            },
          },
        },
      ],
    ],
    [
      308,
      [
        {
          AllocSegment: {
            dst: {
              register: 'AP',
              offset: 0,
            },
          },
        },
      ],
    ],
    [
      323,
      [
        {
          TestLessThanOrEqual: {
            lhs: {
              Immediate: '0x7634',
            },
            rhs: {
              Deref: {
                register: 'FP',
                offset: -6,
              },
            },
            dst: {
              register: 'AP',
              offset: 0,
            },
          },
        },
      ],
    ],
    [
      376,
      [
        {
          TestLessThan: {
            lhs: {
              Deref: {
                register: 'AP',
                offset: -1,
              },
            },
            rhs: {
              Immediate: '0x100000000000000000000000000000000',
            },
            dst: {
              register: 'AP',
              offset: 0,
            },
          },
        },
      ],
    ],
    [
      378,
      [
        {
          DivMod: {
            lhs: {
              Deref: {
                register: 'AP',
                offset: -2,
              },
            },
            rhs: {
              Immediate: '0x100000000000000000000000000000000',
            },
            quotient: {
              register: 'AP',
              offset: 3,
            },
            remainder: {
              register: 'AP',
              offset: 4,
            },
          },
        },
      ],
    ],
    [
      423,
      [
        {
          TestLessThan: {
            lhs: {
              Deref: {
                register: 'AP',
                offset: -1,
              },
            },
            rhs: {
              Immediate: '0x100000000000000000000000000000000',
            },
            dst: {
              register: 'AP',
              offset: 0,
            },
          },
        },
      ],
    ],
    [
      425,
      [
        {
          DivMod: {
            lhs: {
              Deref: {
                register: 'AP',
                offset: -2,
              },
            },
            rhs: {
              Immediate: '0x100000000000000000000000000000000',
            },
            quotient: {
              register: 'AP',
              offset: 3,
            },
            remainder: {
              register: 'AP',
              offset: 4,
            },
          },
        },
      ],
    ],
    [
      499,
      [
        {
          AllocSegment: {
            dst: {
              register: 'AP',
              offset: 0,
            },
          },
        },
      ],
    ],
    [
      518,
      [
        {
          TestLessThanOrEqual: {
            lhs: {
              Immediate: '0x0',
            },
            rhs: {
              Deref: {
                register: 'AP',
                offset: -47,
              },
            },
            dst: {
              register: 'AP',
              offset: 0,
            },
          },
        },
      ],
    ],
    [
      530,
      [
        {
          AllocSegment: {
            dst: {
              register: 'AP',
              offset: 0,
            },
          },
        },
      ],
    ],
    [
      541,
      [
        {
          AllocSegment: {
            dst: {
              register: 'AP',
              offset: 0,
            },
          },
        },
      ],
    ],
    [
      556,
      [
        {
          AllocSegment: {
            dst: {
              register: 'AP',
              offset: 0,
            },
          },
        },
      ],
    ],
    [
      570,
      [
        {
          AllocSegment: {
            dst: {
              register: 'AP',
              offset: 0,
            },
          },
        },
      ],
    ],
    [
      592,
      [
        {
          AllocSegment: {
            dst: {
              register: 'AP',
              offset: 0,
            },
          },
        },
      ],
    ],
    [
      614,
      [
        {
          AllocSegment: {
            dst: {
              register: 'AP',
              offset: 0,
            },
          },
        },
      ],
    ],
    [
      629,
      [
        {
          TestLessThanOrEqual: {
            lhs: {
              Immediate: '0x6518',
            },
            rhs: {
              Deref: {
                register: 'FP',
                offset: -6,
              },
            },
            dst: {
              register: 'AP',
              offset: 0,
            },
          },
        },
      ],
    ],
    [
      665,
      [
        {
          AllocSegment: {
            dst: {
              register: 'AP',
              offset: 0,
            },
          },
        },
      ],
    ],
    [
      684,
      [
        {
          TestLessThanOrEqual: {
            lhs: {
              Immediate: '0x0',
            },
            rhs: {
              Deref: {
                register: 'AP',
                offset: -21,
              },
            },
            dst: {
              register: 'AP',
              offset: 0,
            },
          },
        },
      ],
    ],
    [
      696,
      [
        {
          AllocSegment: {
            dst: {
              register: 'AP',
              offset: 0,
            },
          },
        },
      ],
    ],
    [
      714,
      [
        {
          AllocSegment: {
            dst: {
              register: 'AP',
              offset: 0,
            },
          },
        },
      ],
    ],
    [
      729,
      [
        {
          AllocSegment: {
            dst: {
              register: 'AP',
              offset: 0,
            },
          },
        },
      ],
    ],
    [
      751,
      [
        {
          AllocSegment: {
            dst: {
              register: 'AP',
              offset: 0,
            },
          },
        },
      ],
    ],
    [
      773,
      [
        {
          AllocSegment: {
            dst: {
              register: 'AP',
              offset: 0,
            },
          },
        },
      ],
    ],
    [
      812,
      [
        {
          TestLessThan: {
            lhs: {
              BinOp: {
                op: 'Add',
                a: {
                  register: 'FP',
                  offset: 0,
                },
                b: {
                  Immediate: '0x0',
                },
              },
            },
            rhs: {
              Immediate: '0x100000000',
            },
            dst: {
              register: 'AP',
              offset: 0,
            },
          },
        },
      ],
    ],
    [
      816,
      [
        {
          LinearSplit: {
            value: {
              Deref: {
                register: 'AP',
                offset: -1,
              },
            },
            scalar: {
              Immediate: '0x8000000000000110000000000000000',
            },
            max_x: {
              Immediate: '0xfffffffffffffffffffffffffffffffe',
            },
            x: {
              register: 'AP',
              offset: 0,
            },
            y: {
              register: 'AP',
              offset: 1,
            },
          },
        },
      ],
    ],
    [
      857,
      [
        {
          AllocSegment: {
            dst: {
              register: 'AP',
              offset: 0,
            },
          },
        },
      ],
    ],
    [
      978,
      [
        {
          TestLessThan: {
            lhs: {
              BinOp: {
                op: 'Add',
                a: {
                  register: 'FP',
                  offset: 4,
                },
                b: {
                  Immediate: '0x0',
                },
              },
            },
            rhs: {
              Immediate: '0x100',
            },
            dst: {
              register: 'AP',
              offset: 0,
            },
          },
        },
      ],
    ],
    [
      982,
      [
        {
          LinearSplit: {
            value: {
              Deref: {
                register: 'AP',
                offset: -1,
              },
            },
            scalar: {
              Immediate: '0x8000000000000110000000000000000',
            },
            max_x: {
              Immediate: '0xfffffffffffffffffffffffffffffffe',
            },
            x: {
              register: 'AP',
              offset: 0,
            },
            y: {
              register: 'AP',
              offset: 1,
            },
          },
        },
      ],
    ],
    [
      1024,
      [
        {
          TestLessThan: {
            lhs: {
              BinOp: {
                op: 'Add',
                a: {
                  register: 'FP',
                  offset: 3,
                },
                b: {
                  Immediate: '0x0',
                },
              },
            },
            rhs: {
              Immediate: '0x100000000',
            },
            dst: {
              register: 'AP',
              offset: 0,
            },
          },
        },
      ],
    ],
    [
      1028,
      [
        {
          LinearSplit: {
            value: {
              Deref: {
                register: 'AP',
                offset: -1,
              },
            },
            scalar: {
              Immediate: '0x8000000000000110000000000000000',
            },
            max_x: {
              Immediate: '0xfffffffffffffffffffffffffffffffe',
            },
            x: {
              register: 'AP',
              offset: 0,
            },
            y: {
              register: 'AP',
              offset: 1,
            },
          },
        },
      ],
    ],
    [
      1070,
      [
        {
          TestLessThan: {
            lhs: {
              BinOp: {
                op: 'Add',
                a: {
                  register: 'FP',
                  offset: 2,
                },
                b: {
                  Immediate: '0x0',
                },
              },
            },
            rhs: {
              Immediate: '0x100000000',
            },
            dst: {
              register: 'AP',
              offset: 0,
            },
          },
        },
      ],
    ],
    [
      1074,
      [
        {
          LinearSplit: {
            value: {
              Deref: {
                register: 'AP',
                offset: -1,
              },
            },
            scalar: {
              Immediate: '0x8000000000000110000000000000000',
            },
            max_x: {
              Immediate: '0xfffffffffffffffffffffffffffffffe',
            },
            x: {
              register: 'AP',
              offset: 0,
            },
            y: {
              register: 'AP',
              offset: 1,
            },
          },
        },
      ],
    ],
    [
      1116,
      [
        {
          TestLessThan: {
            lhs: {
              Deref: {
                register: 'AP',
                offset: -1,
              },
            },
            rhs: {
              Immediate: '0x100000000000000000000000000000000',
            },
            dst: {
              register: 'AP',
              offset: 0,
            },
          },
        },
      ],
    ],
    [
      1118,
      [
        {
          DivMod: {
            lhs: {
              Deref: {
                register: 'AP',
                offset: -2,
              },
            },
            rhs: {
              Immediate: '0x100000000000000000000000000000000',
            },
            quotient: {
              register: 'AP',
              offset: 3,
            },
            remainder: {
              register: 'AP',
              offset: 4,
            },
          },
        },
      ],
    ],
    [
      1163,
      [
        {
          TestLessThan: {
            lhs: {
              Deref: {
                register: 'AP',
                offset: -1,
              },
            },
            rhs: {
              Immediate: '0x100000000000000000000000000000000',
            },
            dst: {
              register: 'AP',
              offset: 0,
            },
          },
        },
      ],
    ],
    [
      1165,
      [
        {
          DivMod: {
            lhs: {
              Deref: {
                register: 'AP',
                offset: -2,
              },
            },
            rhs: {
              Immediate: '0x100000000000000000000000000000000',
            },
            quotient: {
              register: 'AP',
              offset: 3,
            },
            remainder: {
              register: 'AP',
              offset: 4,
            },
          },
        },
      ],
    ],
    [
      1254,
      [
        {
          TestLessThan: {
            lhs: {
              BinOp: {
                op: 'Add',
                a: {
                  register: 'FP',
                  offset: 7,
                },
                b: {
                  Immediate: '0x0',
                },
              },
            },
            rhs: {
              Immediate: '0x100000000',
            },
            dst: {
              register: 'AP',
              offset: 0,
            },
          },
        },
      ],
    ],
    [
      1258,
      [
        {
          LinearSplit: {
            value: {
              Deref: {
                register: 'AP',
                offset: -1,
              },
            },
            scalar: {
              Immediate: '0x8000000000000110000000000000000',
            },
            max_x: {
              Immediate: '0xfffffffffffffffffffffffffffffffe',
            },
            x: {
              register: 'AP',
              offset: 0,
            },
            y: {
              register: 'AP',
              offset: 1,
            },
          },
        },
      ],
    ],
    [
      1300,
      [
        {
          TestLessThan: {
            lhs: {
              Deref: {
                register: 'AP',
                offset: -1,
              },
            },
            rhs: {
              Immediate: '0x100000000000000000000000000000000',
            },
            dst: {
              register: 'AP',
              offset: 0,
            },
          },
        },
      ],
    ],
    [
      1302,
      [
        {
          DivMod: {
            lhs: {
              Deref: {
                register: 'AP',
                offset: -2,
              },
            },
            rhs: {
              Immediate: '0x100000000000000000000000000000000',
            },
            quotient: {
              register: 'AP',
              offset: 3,
            },
            remainder: {
              register: 'AP',
              offset: 4,
            },
          },
        },
      ],
    ],
    [
      1347,
      [
        {
          TestLessThan: {
            lhs: {
              Deref: {
                register: 'AP',
                offset: -1,
              },
            },
            rhs: {
              Immediate: '0x100000000000000000000000000000000',
            },
            dst: {
              register: 'AP',
              offset: 0,
            },
          },
        },
      ],
    ],
    [
      1349,
      [
        {
          DivMod: {
            lhs: {
              Deref: {
                register: 'AP',
                offset: -2,
              },
            },
            rhs: {
              Immediate: '0x100000000000000000000000000000000',
            },
            quotient: {
              register: 'AP',
              offset: 3,
            },
            remainder: {
              register: 'AP',
              offset: 4,
            },
          },
        },
      ],
    ],
    [
      1718,
      [
        {
          TestLessThanOrEqual: {
            lhs: {
              Immediate: '0xab4',
            },
            rhs: {
              Deref: {
                register: 'FP',
                offset: -8,
              },
            },
            dst: {
              register: 'AP',
              offset: 0,
            },
          },
        },
      ],
    ],
    [
      1765,
      [
        {
          TestLessThan: {
            lhs: {
              Deref: {
                register: 'AP',
                offset: -1,
              },
            },
            rhs: {
              Immediate: '0x100000000000000000000000000000000',
            },
            dst: {
              register: 'AP',
              offset: 0,
            },
          },
        },
      ],
    ],
    [
      1767,
      [
        {
          DivMod: {
            lhs: {
              Deref: {
                register: 'AP',
                offset: -2,
              },
            },
            rhs: {
              Immediate: '0x100000000000000000000000000000000',
            },
            quotient: {
              register: 'AP',
              offset: 3,
            },
            remainder: {
              register: 'AP',
              offset: 4,
            },
          },
        },
      ],
    ],
    [
      1821,
      [
        {
          AllocSegment: {
            dst: {
              register: 'AP',
              offset: 0,
            },
          },
        },
      ],
    ],
  ],
  pythonic_hints: [
    [0, ['memory[ap + 0] = 0 <= memory[fp + -6]']],
    [17, ['memory[ap + 0] = segments.add()']],
    [36, ['memory[ap + 0] = 0 <= memory[ap + -7]']],
    [48, ['memory[ap + 0] = segments.add()']],
    [169, ['memory[ap + 0] = segments.add()']],
    [184, ['memory[ap + 0] = segments.add()']],
    [199, ['memory[ap + 0] = 250 <= memory[fp + -6]']],
    [225, ['memory[ap + 0] = segments.add()']],
    [244, ['memory[ap + 0] = 0 <= memory[ap + -13]']],
    [256, ['memory[ap + 0] = segments.add()']],
    [271, ['memory[ap + 0] = segments.add()']],
    [286, ['memory[ap + 0] = segments.add()']],
    [308, ['memory[ap + 0] = segments.add()']],
    [323, ['memory[ap + 0] = 30260 <= memory[fp + -6]']],
    [
      376,
      [
        'memory[ap + 0] = memory[ap + -1] < 340282366920938463463374607431768211456',
      ],
    ],
    [
      378,
      [
        '(memory[ap + 3], memory[ap + 4]) = divmod(memory[ap + -2], 340282366920938463463374607431768211456)',
      ],
    ],
    [
      423,
      [
        'memory[ap + 0] = memory[ap + -1] < 340282366920938463463374607431768211456',
      ],
    ],
    [
      425,
      [
        '(memory[ap + 3], memory[ap + 4]) = divmod(memory[ap + -2], 340282366920938463463374607431768211456)',
      ],
    ],
    [499, ['memory[ap + 0] = segments.add()']],
    [518, ['memory[ap + 0] = 0 <= memory[ap + -47]']],
    [530, ['memory[ap + 0] = segments.add()']],
    [541, ['memory[ap + 0] = segments.add()']],
    [556, ['memory[ap + 0] = segments.add()']],
    [570, ['memory[ap + 0] = segments.add()']],
    [592, ['memory[ap + 0] = segments.add()']],
    [614, ['memory[ap + 0] = segments.add()']],
    [629, ['memory[ap + 0] = 25880 <= memory[fp + -6]']],
    [665, ['memory[ap + 0] = segments.add()']],
    [684, ['memory[ap + 0] = 0 <= memory[ap + -21]']],
    [696, ['memory[ap + 0] = segments.add()']],
    [714, ['memory[ap + 0] = segments.add()']],
    [729, ['memory[ap + 0] = segments.add()']],
    [751, ['memory[ap + 0] = segments.add()']],
    [773, ['memory[ap + 0] = segments.add()']],
    [812, ['memory[ap + 0] = (memory[fp + 0] + 0) % PRIME < 4294967296']],
    [
      816,
      [
        '\n(value, scalar) = (memory[ap + -1], 10633823966279327296825105735305134080)\nx = min(value // scalar, 340282366920938463463374607431768211454)\ny = value - x * scalar\nmemory[ap + 0] = x\nmemory[ap + 1] = y\n',
      ],
    ],
    [857, ['memory[ap + 0] = segments.add()']],
    [978, ['memory[ap + 0] = (memory[fp + 4] + 0) % PRIME < 256']],
    [
      982,
      [
        '\n(value, scalar) = (memory[ap + -1], 10633823966279327296825105735305134080)\nx = min(value // scalar, 340282366920938463463374607431768211454)\ny = value - x * scalar\nmemory[ap + 0] = x\nmemory[ap + 1] = y\n',
      ],
    ],
    [1024, ['memory[ap + 0] = (memory[fp + 3] + 0) % PRIME < 4294967296']],
    [
      1028,
      [
        '\n(value, scalar) = (memory[ap + -1], 10633823966279327296825105735305134080)\nx = min(value // scalar, 340282366920938463463374607431768211454)\ny = value - x * scalar\nmemory[ap + 0] = x\nmemory[ap + 1] = y\n',
      ],
    ],
    [1070, ['memory[ap + 0] = (memory[fp + 2] + 0) % PRIME < 4294967296']],
    [
      1074,
      [
        '\n(value, scalar) = (memory[ap + -1], 10633823966279327296825105735305134080)\nx = min(value // scalar, 340282366920938463463374607431768211454)\ny = value - x * scalar\nmemory[ap + 0] = x\nmemory[ap + 1] = y\n',
      ],
    ],
    [
      1116,
      [
        'memory[ap + 0] = memory[ap + -1] < 340282366920938463463374607431768211456',
      ],
    ],
    [
      1118,
      [
        '(memory[ap + 3], memory[ap + 4]) = divmod(memory[ap + -2], 340282366920938463463374607431768211456)',
      ],
    ],
    [
      1163,
      [
        'memory[ap + 0] = memory[ap + -1] < 340282366920938463463374607431768211456',
      ],
    ],
    [
      1165,
      [
        '(memory[ap + 3], memory[ap + 4]) = divmod(memory[ap + -2], 340282366920938463463374607431768211456)',
      ],
    ],
    [1254, ['memory[ap + 0] = (memory[fp + 7] + 0) % PRIME < 4294967296']],
    [
      1258,
      [
        '\n(value, scalar) = (memory[ap + -1], 10633823966279327296825105735305134080)\nx = min(value // scalar, 340282366920938463463374607431768211454)\ny = value - x * scalar\nmemory[ap + 0] = x\nmemory[ap + 1] = y\n',
      ],
    ],
    [
      1300,
      [
        'memory[ap + 0] = memory[ap + -1] < 340282366920938463463374607431768211456',
      ],
    ],
    [
      1302,
      [
        '(memory[ap + 3], memory[ap + 4]) = divmod(memory[ap + -2], 340282366920938463463374607431768211456)',
      ],
    ],
    [
      1347,
      [
        'memory[ap + 0] = memory[ap + -1] < 340282366920938463463374607431768211456',
      ],
    ],
    [
      1349,
      [
        '(memory[ap + 3], memory[ap + 4]) = divmod(memory[ap + -2], 340282366920938463463374607431768211456)',
      ],
    ],
    [1718, ['memory[ap + 0] = 2740 <= memory[fp + -8]']],
    [
      1765,
      [
        'memory[ap + 0] = memory[ap + -1] < 340282366920938463463374607431768211456',
      ],
    ],
    [
      1767,
      [
        '(memory[ap + 3], memory[ap + 4]) = divmod(memory[ap + -2], 340282366920938463463374607431768211456)',
      ],
    ],
    [1821, ['memory[ap + 0] = segments.add()']],
  ],
  entry_points_by_type: {
    EXTERNAL: [
      {
        selector:
          '0x19f4427e3a877bb0dcb0cc4599a14d64a79d74c3a952b2bed3228b2bd1a6e2a',
        offset: 0,
        builtins: ['range_check'],
      },
      {
        selector:
          '0x2362d30370bc988403e5d552c180d4fd3457dfcd9343a2f01541ff4a34eba0e',
        offset: 199,
        builtins: ['range_check'],
      },
      {
        selector:
          '0x2fedc7c2dd415a359b9a4bde987af7ddb0cd5d0de420a9f12c89973659bf5cf',
        offset: 323,
        builtins: ['range_check'],
      },
      {
        selector:
          '0x31d8225e997b2b933b12d97dc4787c57c41e2339ea3ddc38d599f7cb82b4652',
        offset: 629,
        builtins: ['range_check'],
      },
    ],
    L1_HANDLER: [],
    CONSTRUCTOR: [],
  },
};
