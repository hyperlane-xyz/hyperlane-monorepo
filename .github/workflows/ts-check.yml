name: TypeScript Checks

on:
  push:
    branches: [andrey/github-actions-testing]
  pull_request:
    branches: [andrey/github-actions-testing]

jobs:
  typescript-checks:
    runs-on: ubuntu-latest
    env:
      YARN_ENABLE_GLOBAL_CACHE: false
      YARN_ENABLE_SCRIPTS: false
      YARN_NODE_LINKER: pnp
    steps:
      - name: Is this PR from a fork?
        id: is-fork
        if: github.event_name == 'pull_request'
        run: |
          echo "This repo is ${{ github.repository }}"
          echo "PR from ${{ github.event.pull_request.head.repo.full_name }}"
          if [ "${{ github.event.pull_request.head.repo.full_name }}" != "${{ github.repository }}" ]; then
            echo "YARN_ENABLE_HARDENED_MODE=true" >> $GITHUB_ENV
            echo "This is a fork, hardened mode enabled"
          else
            echo "YARN_ENABLE_HARDENED_MODE=false" >> $GITHUB_ENV
            echo "This is not a fork, hardened mode disabled"
          fi

      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha || github.sha }}
          fetch-depth: 128

      - name: Install node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Enable corepack
        run: |
          corepack enable

      - name: Cache Corepack Yarn installation
        uses: actions/cache@v4
        with:
          path: ~/.cache/node/corepack
          key: corepack-yarn-${{ runner.os }}-${{ hashFiles('**/.yarnrc.yml', '**/package.json') }}
          restore-keys: |
            corepack-yarn-${{ runner.os }}-

      - name: Cache yarn packages
        uses: actions/cache@v4
        with:
          path: |
            .yarn/cache
            .yarn/releases
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn

      - name: Install dependencies
        run: yarn install --immutable

      - name: Get changed files (PR)
        if: github.event_name == 'pull_request'
        run: |
          gh pr view "$PR_NUMBER" --json files -q '.files[] | select(.status != "removed") | .path' > changed_files.txt
          echo Will check the following files:
          cat changed_files.txt
        env:
          GITHUB_TOKEN: ${{ github.token }}
          PR_NUMBER: ${{ github.event.pull_request.number }}

      - name: Get changed files
        if: github.event_name == 'push'
        run: |
          git diff --name-only 'HEAD~10' ${{ github.sha }} > changed_files.txt
          echo Will check the following files:
          cat changed_files.txt

      - name: Run prettier
        run: >-
          cat changed_files.txt |
          xargs -r yarn exec prettier --check --ignore-unknown
        continue-on-error: true
      
      - name: Clean up
        if: always()
        run: |
          rm -f changed_files.txt
