name: Build and Push Agent Image to GCR
on:
  push:
    branches: [main]
    tags:
      - '**'
  pull_request:
    paths:
      - 'rust/**'
      - '.github/workflows/rust-docker.yml'
concurrency:
  group: build-push-agents-${{ github.ref }}
  cancel-in-progress: true
jobs:
  check-env:
    runs-on: ubuntu-latest
    # assign output from step to job output
    outputs:
      gcloud-service-key: ${{ steps.gcloud-service-key.outputs.defined }}
    steps:
      - id: gcloud-service-key
        # assign GCLOUD_SERVICE_KEY to env for access in conditional
        env:
          GCLOUD_SERVICE_KEY: ${{ secrets.GCLOUD_SERVICE_KEY }}
        if: "${{ env.GCLOUD_SERVICE_KEY != '' }}"
        # runs if GCLOUD_SERVICE_KEY is defined, so we set the output to true
        run: echo "defined=true" >> $GITHUB_OUTPUT

  build-and-push-to-gcr:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    # uses check-env to determine if secrets.GCLOUD_SERVICE_KEY is defined
    needs: [check-env]
    if: needs.check-env.outputs.gcloud-service-key == 'true'

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha || github.sha }}
      - name: Generate tag data
        id: taggen
        run: |
          echo "TAG_DATE=$(date +'%Y%m%d-%H%M%S')" >> $GITHUB_OUTPUT
          echo "TAG_SHA=$(echo '${{ github.event.pull_request.head.sha || github.sha }}' | cut -b 1-7)" >> $GITHUB_OUTPUT
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          # list of Docker images to use as base name for tags
          images: |
            gcr.io/abacus-labs-dev/hyperlane-agent
          # generate Docker tags based on the following events/attributes
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=raw,value=${{ steps.taggen.outputs.TAG_SHA }}-${{ steps.taggen.outputs.TAG_DATE }}
      - name: Set up Depot CLI
        uses: depot/setup-action@v1
      - name: Login to GCR
        uses: docker/login-action@v3
        with:
          registry: gcr.io
          username: _json_key
          password: ${{ secrets.GCLOUD_SERVICE_KEY }}
      - name: Build and push
        uses: depot/build-push-action@v1
        with:
          project: jmrf3hq6zz
          context: .
          file: ./rust/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
