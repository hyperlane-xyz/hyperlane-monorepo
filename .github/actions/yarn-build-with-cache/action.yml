name: 'Yarn Build with Cache'
description: 'Run yarn build using yarn cache'

inputs:
  ref:
    description: 'The Git ref to checkout'
    required: true
  cache-provider:
    description: 'Choose cache provider: buildjet or github'
    required: false
    default: 'github'

runs:
  using: 'composite'
  steps:
    # Depot transparently redirect anything bound for GitHub's Actions cache to their own for extra speed.
    # But this is not available to access for non-depot runners.
    # So we default to buildjet, and expect the workflow to set cache-provider=github if it's a depot runner.
    # https://depot.dev/docs/github-actions/overview#faster-caching
    - name: Determine Cache Provider
      id: determine-cache
      shell: bash
      run: echo "cache-provider=${{ inputs.cache-provider }}" >> $GITHUB_ENV

    - name: Enable corepack
      shell: bash
      run: |
        corepack enable

    - name: Cache Corepack Yarn installation
      if: env.cache-provider == 'buildjet'
      uses: buildjet/cache@v4
      with:
        path: ~/.cache/node/corepack
        key: corepack-yarn-${{ runner.os }}-${{ hashFiles('**/.yarnrc.yml', '**/package.json') }}
        restore-keys: |
          corepack-yarn-${{ runner.os }}-

    - name: Cache Corepack Yarn installation
      if: env.cache-provider == 'actions'
      uses: actions/cache@v4
      with:
        path: ~/.cache/node/corepack
        key: corepack-yarn-${{ runner.os }}-${{ hashFiles('**/.yarnrc.yml', '**/package.json') }}
        restore-keys: |
          corepack-yarn-${{ runner.os }}-

    - name: Cache yarn packages
      if: env.cache-provider == 'buildjet'
      uses: buildjet/cache@v4
      with:
        path: |
          .yarn/cache
          .yarn/releases
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn

    - name: Cache yarn packages
      if: env.cache-provider == 'github'
      uses: actions/cache@v4
      with:
        path: |
          .yarn/cache
          .yarn/releases
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn

    # Typically, the cache will be hit, but if there's a network error when
    # restoring the cache, let's run the install step ourselves.
    - name: Install dependencies
      if: steps.buildjet-cache.outputs.cache-hit != 'true' && steps.github-cache.outputs.cache-hit != 'true'
      shell: bash
      run: |
        yarn install --immutable

    - name: Build
      shell: bash
      run: yarn build
