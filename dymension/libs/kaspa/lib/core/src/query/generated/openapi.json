{
    "openapi": "3.0.*",
    "info": {
      "title": "Kaspa REST-API server",
      "description": "This server is to communicate with kaspa network via REST-API",
      "contact": {
        "name": "lAmeR1"
      },
      "license": {
        "name": "MIT LICENSE"
      },
      "version": "257c841"
    },
    "paths": {
      "/addresses/{kaspaAddress}/balance": {
        "get": {
          "tags": [
            "Kaspa addresses"
          ],
          "summary": "Get Balance From Kaspa Address",
          "description": "Get balance for a given kaspa address",
          "operationId": "get_balance_from_kaspa_address_addresses__kaspaAddress__balance_get",
          "parameters": [
            {
              "description": "Kaspa address as string e.g. kaspatest:qpqz2vxj23kvh0m73ta2jjn2u4cv4tlufqns2eap8mxyyt0rvrxy6ejkful67",
              "required": true,
              "schema": {
                "type": "string",
                "pattern": "^kaspatest:[a-z0-9]{61,63}$",
                "title": "Kaspaaddress",
                "description": "Kaspa address as string e.g. kaspatest:qpqz2vxj23kvh0m73ta2jjn2u4cv4tlufqns2eap8mxyyt0rvrxy6ejkful67"
              },
              "name": "kaspaAddress",
              "in": "path"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BalanceResponse"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/addresses/{kaspaAddress}/utxos": {
        "get": {
          "tags": [
            "Kaspa addresses"
          ],
          "summary": "Get Utxos For Address",
          "description": "Lists all open utxo for a given kaspa address",
          "operationId": "get_utxos_for_address_addresses__kaspaAddress__utxos_get",
          "parameters": [
            {
              "description": "Kaspa address as string e.g. kaspatest:qpqz2vxj23kvh0m73ta2jjn2u4cv4tlufqns2eap8mxyyt0rvrxy6ejkful67",
              "required": true,
              "schema": {
                "type": "string",
                "pattern": "^kaspatest:[a-z0-9]{61,63}$",
                "title": "Kaspaaddress",
                "description": "Kaspa address as string e.g. kaspatest:qpqz2vxj23kvh0m73ta2jjn2u4cv4tlufqns2eap8mxyyt0rvrxy6ejkful67"
              },
              "name": "kaspaAddress",
              "in": "path"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "items": {
                      "$ref": "#/components/schemas/UtxoResponse"
                    },
                    "type": "array",
                    "title": "Response Get Utxos For Address Addresses  Kaspaaddress  Utxos Get"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          },
          "strict_query_params": true
        }
      },
      "/addresses/utxos": {
        "post": {
          "tags": [
            "Kaspa addresses"
          ],
          "summary": "Get Utxos For Addresses",
          "description": "Lists all open utxo for a given kaspa address",
          "operationId": "get_utxos_for_addresses_addresses_utxos_post",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UtxoRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "items": {
                      "$ref": "#/components/schemas/UtxoResponse"
                    },
                    "type": "array",
                    "title": "Response Get Utxos For Addresses Addresses Utxos Post"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          },
          "strict_query_params": true
        }
      },
      "/info/virtual-chain-blue-score": {
        "get": {
          "tags": [
            "Kaspa network info"
          ],
          "summary": "Get Virtual Selected Parent Blue Score",
          "description": "Returns the blue score of the sink",
          "operationId": "get_virtual_selected_parent_blue_score_info_virtual_chain_blue_score_get",
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BlueScoreResponse"
                  }
                }
              }
            }
          }
        }
      },
      "/blocks/{blockId}": {
        "get": {
          "tags": [
            "Kaspa blocks"
          ],
          "summary": "Get Block",
          "description": "Get block information for a given block id",
          "operationId": "get_block_blocks__blockId__get",
          "parameters": [
            {
              "required": true,
              "schema": {
                "type": "string",
                "pattern": "[a-f0-9]{64}",
                "title": "Blockid"
              },
              "name": "blockId",
              "in": "path"
            },
            {
              "required": false,
              "schema": {
                "type": "boolean",
                "title": "Includetransactions",
                "default": true
              },
              "name": "includeTransactions",
              "in": "query"
            },
            {
              "required": false,
              "schema": {
                "type": "boolean",
                "title": "Includecolor",
                "default": false
              },
              "name": "includeColor",
              "in": "query"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BlockModel"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/blocks": {
        "get": {
          "tags": [
            "Kaspa blocks"
          ],
          "summary": "Get Blocks",
          "description": "Lists block beginning from a low hash (block id).",
          "operationId": "get_blocks_blocks_get",
          "parameters": [
            {
              "required": true,
              "schema": {
                "type": "string",
                "pattern": "[a-f0-9]{64}",
                "title": "Lowhash"
              },
              "name": "lowHash",
              "in": "query"
            },
            {
              "required": false,
              "schema": {
                "type": "boolean",
                "title": "Includeblocks",
                "default": false
              },
              "name": "includeBlocks",
              "in": "query"
            },
            {
              "required": false,
              "schema": {
                "type": "boolean",
                "title": "Includetransactions",
                "default": false
              },
              "name": "includeTransactions",
              "in": "query"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BlockResponse"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/blocks-from-bluescore": {
        "get": {
          "tags": [
            "Kaspa blocks"
          ],
          "summary": "Get Blocks From Bluescore",
          "description": "Lists blocks of a given blueScore",
          "operationId": "get_blocks_from_bluescore_blocks_from_bluescore_get",
          "parameters": [
            {
              "required": false,
              "schema": {
                "type": "integer",
                "title": "Bluescore",
                "default": 43679173
              },
              "name": "blueScore",
              "in": "query"
            },
            {
              "required": false,
              "schema": {
                "type": "boolean",
                "title": "Includetransactions",
                "default": false
              },
              "name": "includeTransactions",
              "in": "query"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "items": {
                      "$ref": "#/components/schemas/BlockModel"
                    },
                    "type": "array",
                    "title": "Response Get Blocks From Bluescore Blocks From Bluescore Get"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/info/network": {
        "get": {
          "tags": [
            "Kaspa network info"
          ],
          "summary": "Get Network",
          "description": "Alias for /info/blockdag",
          "operationId": "get_network_info_network_get",
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BlockdagResponse"
                  }
                }
              }
            }
          },
          "deprecated": true
        }
      },
      "/info/blockdag": {
        "get": {
          "tags": [
            "Kaspa network info"
          ],
          "summary": "Get Blockdag",
          "description": "Get Kaspa BlockDAG information",
          "operationId": "get_blockdag_info_blockdag_get",
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BlockdagResponse"
                  }
                }
              }
            }
          }
        }
      },
      "/info/coinsupply": {
        "get": {
          "tags": [
            "Kaspa network info"
          ],
          "summary": "Get Coinsupply",
          "description": "Get $KAS coin supply information",
          "operationId": "get_coinsupply_info_coinsupply_get",
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
  
                  }
                }
              }
            }
          }
        }
      },
      "/info/coinsupply/circulating": {
        "get": {
          "tags": [
            "Kaspa network info"
          ],
          "summary": "Get Circulating Coins",
          "description": "Get circulating amount of $KAS token as numerical value",
          "operationId": "get_circulating_coins_info_coinsupply_circulating_get",
          "parameters": [
            {
              "required": false,
              "schema": {
                "type": "boolean",
                "title": "In Billion",
                "default": false
              },
              "name": "in_billion",
              "in": "query"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/info/coinsupply/total": {
        "get": {
          "tags": [
            "Kaspa network info"
          ],
          "summary": "Get Total Coins",
          "description": "Get total amount of $KAS token as numerical value",
          "operationId": "get_total_coins_info_coinsupply_total_get",
          "parameters": [
            {
              "required": false,
              "schema": {
                "type": "boolean",
                "title": "In Billion",
                "default": false
              },
              "name": "in_billion",
              "in": "query"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/info/kaspad": {
        "get": {
          "tags": [
            "Kaspa network info"
          ],
          "summary": "Get Kaspad Info",
          "description": "Get some information for kaspad instance, which is currently connected.",
          "operationId": "get_kaspad_info_info_kaspad_get",
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/KaspadInfoResponse"
                  }
                }
              }
            }
          }
        }
      },
      "/info/fee-estimate": {
        "get": {
          "tags": [
            "Kaspa network info"
          ],
          "summary": "Get Fee Estimate",
          "description": "Get fee estimate from Kaspad.\n\nFor all buckets, feerate values represent fee/mass of a transaction in `sompi/gram` units.\u003Cbr\u003E\nGiven a feerate value recommendation, calculate the required fee by\ntaking the transaction mass and multiplying it by feerate: `fee = feerate * mass(tx)`",
          "operationId": "get_fee_estimate_info_fee_estimate_get",
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/FeeEstimateResponse"
                  }
                }
              }
            }
          }
        }
      },
      "/info/price": {
        "get": {
          "tags": [
            "Kaspa network info"
          ],
          "summary": "Get Price",
          "description": "Returns the current price for Kaspa in USD.",
          "operationId": "get_price_info_price_get",
          "parameters": [
            {
              "required": false,
              "schema": {
                "type": "boolean",
                "title": "Stringonly",
                "default": false
              },
              "name": "stringOnly",
              "in": "query"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/PriceResponse"
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "title": "Response Get Price Info Price Get"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/transactions/{transactionId}": {
        "get": {
          "tags": [
            "Kaspa transactions"
          ],
          "summary": "Get Transaction",
          "description": "Get details for a given transaction id",
          "operationId": "get_transaction_transactions__transactionId__get",
          "parameters": [
            {
              "required": true,
              "schema": {
                "type": "string",
                "pattern": "[a-f0-9]{64}",
                "title": "Transactionid"
              },
              "name": "transactionId",
              "in": "path"
            },
            {
              "description": "Specify a containing block (if known) for faster lookup",
              "required": false,
              "schema": {
                "type": "string",
                "title": "Blockhash",
                "description": "Specify a containing block (if known) for faster lookup"
              },
              "name": "blockHash",
              "in": "query"
            },
            {
              "required": false,
              "schema": {
                "type": "boolean",
                "title": "Inputs",
                "default": true
              },
              "name": "inputs",
              "in": "query"
            },
            {
              "required": false,
              "schema": {
                "type": "boolean",
                "title": "Outputs",
                "default": true
              },
              "name": "outputs",
              "in": "query"
            },
            {
              "description": "Use this parameter if you want to fetch the TransactionInput previous outpoint details. Light fetches only the address and amount. Full fetches the whole TransactionOutput and adds it into each TxInput.",
              "required": false,
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/PreviousOutpointLookupMode"
                  }
                ],
                "description": "Use this parameter if you want to fetch the TransactionInput previous outpoint details. Light fetches only the address and amount. Full fetches the whole TransactionOutput and adds it into each TxInput.",
                "default": "no"
              },
              "name": "resolve_previous_outpoints",
              "in": "query"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TxModel"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/transactions/search": {
        "post": {
          "tags": [
            "Kaspa transactions"
          ],
          "summary": "Search For Transactions",
          "description": "Search for transactions by transaction_ids or blue_score",
          "operationId": "search_for_transactions_transactions_search_post",
          "parameters": [
            {
              "required": false,
              "schema": {
                "type": "string",
                "title": "Fields",
                "default": ""
              },
              "name": "fields",
              "in": "query"
            },
            {
              "description": "Use this parameter if you want to fetch the TransactionInput previous outpoint details. Light fetches only the address and amount. Full fetches the whole TransactionOutput and adds it into each TxInput.",
              "required": false,
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/PreviousOutpointLookupMode"
                  }
                ],
                "description": "Use this parameter if you want to fetch the TransactionInput previous outpoint details. Light fetches only the address and amount. Full fetches the whole TransactionOutput and adds it into each TxInput.",
                "default": "no"
              },
              "name": "resolve_previous_outpoints",
              "in": "query"
            },
            {
              "description": "Only used when searching using transactionIds",
              "required": false,
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AcceptanceMode"
                  }
                ],
                "description": "Only used when searching using transactionIds"
              },
              "name": "acceptance",
              "in": "query"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TxSearch"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "items": {
                      "$ref": "#/components/schemas/TxModel"
                    },
                    "type": "array",
                    "title": "Response Search For Transactions Transactions Search Post"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/transactions/acceptance": {
        "post": {
          "tags": [
            "Kaspa transactions"
          ],
          "summary": "Get Transaction Acceptance",
          "description": "Given a list of transaction_ids, return whether each one is accepted",
          "operationId": "get_transaction_acceptance_transactions_acceptance_post",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TxAcceptanceRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "items": {
                      "$ref": "#/components/schemas/TxAcceptanceResponse"
                    },
                    "type": "array",
                    "title": "Response Get Transaction Acceptance Transactions Acceptance Post"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          },
          "strict_query_params": true
        }
      },
      "/addresses/{kaspaAddress}/full-transactions": {
        "get": {
          "tags": [
            "Kaspa addresses"
          ],
          "summary": "Get Full Transactions For Address",
          "description": "Get all transactions for a given address from database.\nAnd then get their related full transaction data",
          "operationId": "get_full_transactions_for_address_addresses__kaspaAddress__full_transactions_get",
          "parameters": [
            {
              "description": "Kaspa address as string e.g. kaspatest:qpqz2vxj23kvh0m73ta2jjn2u4cv4tlufqns2eap8mxyyt0rvrxy6ejkful67",
              "required": true,
              "schema": {
                "type": "string",
                "pattern": "^kaspatest:[a-z0-9]{61,63}$",
                "title": "Kaspaaddress",
                "description": "Kaspa address as string e.g. kaspatest:qpqz2vxj23kvh0m73ta2jjn2u4cv4tlufqns2eap8mxyyt0rvrxy6ejkful67"
              },
              "name": "kaspaAddress",
              "in": "path"
            },
            {
              "description": "The number of records to get",
              "required": false,
              "schema": {
                "type": "integer",
                "maximum": 500,
                "minimum": 1,
                "title": "Limit",
                "description": "The number of records to get",
                "default": 50
              },
              "name": "limit",
              "in": "query"
            },
            {
              "description": "The offset from which to get records",
              "required": false,
              "schema": {
                "type": "integer",
                "minimum": 0,
                "title": "Offset",
                "description": "The offset from which to get records",
                "default": 0
              },
              "name": "offset",
              "in": "query"
            },
            {
              "required": false,
              "schema": {
                "type": "string",
                "title": "Fields",
                "default": ""
              },
              "name": "fields",
              "in": "query"
            },
            {
              "description": "Use this parameter if you want to fetch the TransactionInput previous outpoint details. Light fetches only the adress and amount. Full fetches the whole TransactionOutput and adds it into each TxInput.",
              "required": false,
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/PreviousOutpointLookupMode"
                  }
                ],
                "description": "Use this parameter if you want to fetch the TransactionInput previous outpoint details. Light fetches only the adress and amount. Full fetches the whole TransactionOutput and adds it into each TxInput.",
                "default": "no"
              },
              "name": "resolve_previous_outpoints",
              "in": "query"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "items": {
                      "$ref": "#/components/schemas/TxModel"
                    },
                    "type": "array",
                    "title": "Response Get Full Transactions For Address Addresses  Kaspaaddress  Full Transactions Get"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          },
          "strict_query_params": true
        }
      },
      "/addresses/active": {
        "post": {
          "tags": [
            "Kaspa addresses"
          ],
          "summary": "Get Addresses Active",
          "description": "This endpoint checks if addresses have had any transaction activity in the past.\nIt is specifically designed for HD Wallets to verify historical address activity.",
          "operationId": "get_addresses_active_addresses_active_post",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddressesActiveRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "items": {
                      "$ref": "#/components/schemas/TxIdResponse"
                    },
                    "type": "array",
                    "title": "Response Get Addresses Active Addresses Active Post"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          },
          "strict_query_params": true
        }
      },
      "/addresses/{kaspaAddress}/full-transactions-page": {
        "get": {
          "tags": [
            "Kaspa addresses"
          ],
          "summary": "Get Full Transactions For Address Page",
          "description": "Get all transactions for a given address from database.\nAnd then get their related full transaction data",
          "operationId": "get_full_transactions_for_address_page_addresses__kaspaAddress__full_transactions_page_get",
          "parameters": [
            {
              "description": "Kaspa address as string e.g. kaspatest:qpqz2vxj23kvh0m73ta2jjn2u4cv4tlufqns2eap8mxyyt0rvrxy6ejkful67",
              "required": true,
              "schema": {
                "type": "string",
                "pattern": "^kaspatest:[a-z0-9]{61,63}$",
                "title": "Kaspaaddress",
                "description": "Kaspa address as string e.g. kaspatest:qpqz2vxj23kvh0m73ta2jjn2u4cv4tlufqns2eap8mxyyt0rvrxy6ejkful67"
              },
              "name": "kaspaAddress",
              "in": "path"
            },
            {
              "description": "The max number of records to get. For paging combine with using 'before/after' from oldest previous result. Use value of X-Next-Page-Before/-After as long as header is present to continue paging. The actual number of transactions returned for each page can be \u003E limit.",
              "required": false,
              "schema": {
                "type": "integer",
                "maximum": 500,
                "minimum": 1,
                "title": "Limit",
                "description": "The max number of records to get. For paging combine with using 'before/after' from oldest previous result. Use value of X-Next-Page-Before/-After as long as header is present to continue paging. The actual number of transactions returned for each page can be \u003E limit.",
                "default": 50
              },
              "name": "limit",
              "in": "query"
            },
            {
              "description": "Only include transactions with block time before this (epoch-millis)",
              "required": false,
              "schema": {
                "type": "integer",
                "minimum": 0,
                "title": "Before",
                "description": "Only include transactions with block time before this (epoch-millis)",
                "default": 0
              },
              "name": "before",
              "in": "query"
            },
            {
              "description": "Only include transactions with block time after this (epoch-millis)",
              "required": false,
              "schema": {
                "type": "integer",
                "minimum": 0,
                "title": "After",
                "description": "Only include transactions with block time after this (epoch-millis)",
                "default": 0
              },
              "name": "after",
              "in": "query"
            },
            {
              "required": false,
              "schema": {
                "type": "string",
                "title": "Fields",
                "default": ""
              },
              "name": "fields",
              "in": "query"
            },
            {
              "description": "Use this parameter if you want to fetch the TransactionInput previous outpoint details. Light fetches only the adress and amount. Full fetches the whole TransactionOutput and adds it into each TxInput.",
              "required": false,
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/PreviousOutpointLookupMode"
                  }
                ],
                "description": "Use this parameter if you want to fetch the TransactionInput previous outpoint details. Light fetches only the adress and amount. Full fetches the whole TransactionOutput and adds it into each TxInput.",
                "default": "no"
              },
              "name": "resolve_previous_outpoints",
              "in": "query"
            },
            {
              "required": false,
              "schema": {
                "$ref": "#/components/schemas/AcceptanceMode"
              },
              "name": "acceptance",
              "in": "query"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "items": {
                      "$ref": "#/components/schemas/TxModel"
                    },
                    "type": "array",
                    "title": "Response Get Full Transactions For Address Page Addresses  Kaspaaddress  Full Transactions Page Get"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          },
          "strict_query_params": true
        }
      },
      "/addresses/{kaspaAddress}/transactions-count": {
        "get": {
          "tags": [
            "Kaspa addresses"
          ],
          "summary": "Get Transaction Count For Address",
          "description": "Count the number of transactions associated with this address",
          "operationId": "get_transaction_count_for_address_addresses__kaspaAddress__transactions_count_get",
          "parameters": [
            {
              "description": "Kaspa address as string e.g. kaspatest:qpqz2vxj23kvh0m73ta2jjn2u4cv4tlufqns2eap8mxyyt0rvrxy6ejkful67",
              "required": true,
              "schema": {
                "type": "string",
                "pattern": "^kaspatest:[a-z0-9]{61,63}$",
                "title": "Kaspaaddress",
                "description": "Kaspa address as string e.g. kaspatest:qpqz2vxj23kvh0m73ta2jjn2u4cv4tlufqns2eap8mxyyt0rvrxy6ejkful67"
              },
              "name": "kaspaAddress",
              "in": "path"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TransactionCount"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          },
          "strict_query_params": true
        }
      },
      "/addresses/names": {
        "get": {
          "tags": [
            "Kaspa addresses"
          ],
          "summary": "Get Addresses Names",
          "description": "Get the name for an address",
          "operationId": "get_addresses_names_addresses_names_get",
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "items": {
                      "$ref": "#/components/schemas/AddressName"
                    },
                    "type": "array",
                    "title": "Response Get Addresses Names Addresses Names Get"
                  }
                }
              }
            }
          },
          "strict_query_params": true
        }
      },
      "/addresses/{kaspaAddress}/name": {
        "get": {
          "tags": [
            "Kaspa addresses"
          ],
          "summary": "Get Name For Address",
          "description": "Get the name for an address",
          "operationId": "get_name_for_address_addresses__kaspaAddress__name_get",
          "parameters": [
            {
              "description": "Kaspa address as string e.g. kaspa:qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqkx9awp4e",
              "required": true,
              "schema": {
                "type": "string",
                "pattern": "^kaspatest:[a-z0-9]{61,63}$",
                "title": "Kaspaaddress",
                "description": "Kaspa address as string e.g. kaspa:qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqkx9awp4e"
              },
              "name": "kaspaAddress",
              "in": "path"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/AddressName"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          },
          "strict_query_params": true
        }
      },
      "/addresses/balances": {
        "post": {
          "tags": [
            "Kaspa addresses"
          ],
          "summary": "Get Balances From Kaspa Addresses",
          "description": "Get balances for multiple kaspa addresses",
          "operationId": "get_balances_from_kaspa_addresses_addresses_balances_post",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "items": {
                      "$ref": "#/components/schemas/BalancesByAddressEntry"
                    },
                    "type": "array",
                    "title": "Response Get Balances From Kaspa Addresses Addresses Balances Post"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/info/blockreward": {
        "get": {
          "tags": [
            "Kaspa network info"
          ],
          "summary": "Get Blockreward",
          "description": "Returns the current blockreward in KAS/block",
          "operationId": "get_blockreward_info_blockreward_get",
          "parameters": [
            {
              "required": false,
              "schema": {
                "type": "boolean",
                "title": "Stringonly",
                "default": false
              },
              "name": "stringOnly",
              "in": "query"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/BlockRewardResponse"
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "title": "Response Get Blockreward Info Blockreward Get"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/info/halving": {
        "get": {
          "tags": [
            "Kaspa network info"
          ],
          "summary": "Get Halving",
          "description": "Returns information about chromatic halving",
          "operationId": "get_halving_info_halving_get",
          "parameters": [
            {
              "required": false,
              "schema": {
                "type": "string",
                "title": "Field"
              },
              "name": "field",
              "in": "query"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/HalvingResponse"
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "title": "Response Get Halving Info Halving Get"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/info/hashrate": {
        "get": {
          "tags": [
            "Kaspa network info"
          ],
          "summary": "Get Hashrate",
          "description": "Returns the current hashrate for Kaspa network in TH/s.",
          "operationId": "get_hashrate_info_hashrate_get",
          "parameters": [
            {
              "required": false,
              "schema": {
                "type": "boolean",
                "title": "Stringonly",
                "default": false
              },
              "name": "stringOnly",
              "in": "query"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/HashrateResponse"
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "title": "Response Get Hashrate Info Hashrate Get"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/info/hashrate/max": {
        "get": {
          "tags": [
            "Kaspa network info"
          ],
          "summary": "Get Max Hashrate",
          "description": "Returns the current hashrate for Kaspa network in TH/s.",
          "operationId": "get_max_hashrate_info_hashrate_max_get",
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/MaxHashrateResponse"
                  }
                }
              }
            }
          }
        }
      },
      "/info/hashrate/history": {
        "get": {
          "tags": [
            "Kaspa network info"
          ],
          "summary": "Get Hashrate History",
          "description": "BETA, EXPECT API CHANGES: Returns historical hashrate in kH/s.",
          "operationId": "get_hashrate_history_info_hashrate_history_get",
          "parameters": [
            {
              "required": false,
              "schema": {
                "type": "string",
                "enum": [
                  "3h",
                  "1d",
                  "7d"
                ],
                "title": "Resolution"
              },
              "name": "resolution",
              "in": "query"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "items": {
                      "$ref": "#/components/schemas/HashrateHistoryResponse"
                    },
                    "type": "array",
                    "title": "Response Get Hashrate History Info Hashrate History Get"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/info/health": {
        "get": {
          "tags": [
            "Kaspa network info"
          ],
          "summary": "Health State",
          "description": "Checks node and database health by comparing blue score and sync status.\nReturns health details or 503 if the database lags by ~10min or no nodes are synced.",
          "operationId": "health_state_info_health_get",
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HealthResponse"
                  }
                }
              }
            }
          }
        }
      },
      "/info/marketcap": {
        "get": {
          "tags": [
            "Kaspa network info"
          ],
          "summary": "Get Marketcap",
          "description": "Get $KAS price and market cap. Price info is from coingecko.com",
          "operationId": "get_marketcap_info_marketcap_get",
          "parameters": [
            {
              "required": false,
              "schema": {
                "type": "boolean",
                "title": "Stringonly",
                "default": false
              },
              "name": "stringOnly",
              "in": "query"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/MarketCapResponse"
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "title": "Response Get Marketcap Info Marketcap Get"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/transactions": {
        "post": {
          "tags": [
            "Kaspa transactions"
          ],
          "summary": "Submit A New Transaction",
          "operationId": "submit_a_new_transaction_transactions_post",
          "parameters": [
            {
              "description": "Replace an existing transaction in the mempool",
              "required": false,
              "schema": {
                "type": "boolean",
                "title": "Replacebyfee",
                "description": "Replace an existing transaction in the mempool",
                "default": false
              },
              "name": "replaceByFee",
              "in": "query"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmitTransactionRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SubmitTransactionResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SubmitTransactionResponse"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/transactions/mass": {
        "post": {
          "tags": [
            "Kaspa transactions"
          ],
          "summary": "Calculate Transaction Mass",
          "description": "This function calculates and returns the mass of a transaction, which is essential for determining the minimum fee. The mass calculation takes into account the storage mass as defined in KIP-0009.\n\nNote: Be aware that if the transaction has a very low output amount or a high number of outputs, the mass can become significantly large.",
          "operationId": "calculate_transaction_mass_transactions_mass_post",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmitTxModel"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TxMass"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/virtual-chain": {
        "get": {
          "tags": [
            "EXPERIMENTAL: Kaspa virtual chain"
          ],
          "summary": "Get Virtual Chain Transactions",
          "description": "EXPERIMENTAL - EXPECT BREAKING CHANGES: Get virtual chain transactions by blue score.",
          "operationId": "get_virtual_chain_transactions_virtual_chain_get",
          "parameters": [
            {
              "description": "Divisible by limit",
              "required": true,
              "schema": {
                "type": "integer",
                "minimum": 0,
                "title": "Bluescoregte",
                "description": "Divisible by limit"
              },
              "example": 106329050,
              "name": "blueScoreGte",
              "in": "query"
            },
            {
              "required": false,
              "schema": {
                "type": "integer",
                "enum": [10, 100],
                "title": "Limit",
                "default": 10
              },
              "name": "limit",
              "in": "query"
            },
            {
              "required": false,
              "schema": {
                "type": "boolean",
                "title": "Resolveinputs",
                "default": false
              },
              "name": "resolveInputs",
              "in": "query"
            },
            {
              "required": false,
              "schema": {
                "type": "boolean",
                "title": "Includecoinbase",
                "default": true
              },
              "name": "includeCoinbase",
              "in": "query"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "items": {
                      "$ref": "#/components/schemas/VcBlockModel"
                    },
                    "type": "array",
                    "title": "Response Get Virtual Chain Transactions Virtual Chain Get"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      }
    },
    "components": {
      "schemas": {
        "AcceptanceMode": {
          "type": "string",
          "enum": [
            "accepted",
            "rejected"
          ],
          "title": "AcceptanceMode",
          "description": "An enumeration."
        },
        "AddressName": {
          "properties": {
            "address": {
              "type": "string",
              "title": "Address"
            },
            "name": {
              "type": "string",
              "title": "Name"
            }
          },
          "type": "object",
          "required": [
            "address",
            "name"
          ],
          "title": "AddressName"
        },
        "AddressesActiveRequest": {
          "properties": {
            "addresses": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "title": "Addresses",
              "default": [
                "kaspatest:qpqz2vxj23kvh0m73ta2jjn2u4cv4tlufqns2eap8mxyyt0rvrxy6ejkful67"
              ]
            }
          },
          "type": "object",
          "title": "AddressesActiveRequest"
        },
        "BalanceRequest": {
          "properties": {
            "addresses": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "title": "Addresses",
              "default": [
                "kaspatest:qpqz2vxj23kvh0m73ta2jjn2u4cv4tlufqns2eap8mxyyt0rvrxy6ejkful67"
              ]
            }
          },
          "type": "object",
          "title": "BalanceRequest"
        },
        "BalanceResponse": {
          "properties": {
            "address": {
              "type": "string",
              "title": "Address",
              "default": "kaspatest:qpqz2vxj23kvh0m73ta2jjn2u4cv4tlufqns2eap8mxyyt0rvrxy6ejkful67"
            },
            "balance": {
              "type": "integer",
              "title": "Balance",
              "default": 38240000000
            }
          },
          "type": "object",
          "title": "BalanceResponse"
        },
        "BalancesByAddressEntry": {
          "properties": {
            "address": {
              "type": "string",
              "title": "Address",
              "default": "kaspatest:qpqz2vxj23kvh0m73ta2jjn2u4cv4tlufqns2eap8mxyyt0rvrxy6ejkful67"
            },
            "balance": {
              "type": "integer",
              "title": "Balance",
              "default": 12451591699
            }
          },
          "type": "object",
          "title": "BalancesByAddressEntry"
        },
        "BlockModel": {
          "properties": {
            "header": {
              "$ref": "#/components/schemas/endpoints__get_blocks__BlockHeader"
            },
            "transactions": {
              "items": {
                "$ref": "#/components/schemas/BlockTxModel"
              },
              "type": "array",
              "title": "Transactions"
            },
            "verboseData": {
              "$ref": "#/components/schemas/VerboseDataModel"
            },
            "extra": {
              "$ref": "#/components/schemas/ExtraModel"
            }
          },
          "type": "object",
          "required": [
            "header",
            "verboseData"
          ],
          "title": "BlockModel"
        },
        "BlockResponse": {
          "properties": {
            "blockHashes": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "title": "Blockhashes",
              "default": [
                "44edf9bfd32aa154bfad64485882f184372b64bd60565ba121b42fc3cb1238f3",
                "18c7afdf8f447ca06adb8b4946dc45f5feb1188c7d177da6094dfbc760eca699",
                "9a822351cd293a653f6721afec1646bd1690da7124b5fbe87001711406010604",
                "2fda0dad4ec879b4ad02ebb68c757955cab305558998129a7de111ab852e7dcb"
              ]
            },
            "blocks": {
              "items": {
                "$ref": "#/components/schemas/BlockModel"
              },
              "type": "array",
              "title": "Blocks"
            }
          },
          "type": "object",
          "title": "BlockResponse"
        },
        "BlockRewardResponse": {
          "properties": {
            "blockreward": {
              "type": "number",
              "title": "Blockreward",
              "default": 12000132
            }
          },
          "type": "object",
          "title": "BlockRewardResponse"
        },
        "BlockTxInputModel": {
          "properties": {
            "previousOutpoint": {
              "$ref": "#/components/schemas/BlockTxInputPreviousOutpointModel"
            },
            "signatureScript": {
              "type": "string",
              "title": "Signaturescript"
            },
            "sigOpCount": {
              "type": "integer",
              "title": "Sigopcount"
            },
            "sequence": {
              "type": "integer",
              "title": "Sequence"
            }
          },
          "type": "object",
          "title": "BlockTxInputModel"
        },
        "BlockTxInputPreviousOutpointModel": {
          "properties": {
            "transactionId": {
              "type": "string",
              "title": "Transactionid"
            },
            "index": {
              "type": "integer",
              "title": "Index"
            }
          },
          "type": "object",
          "required": [
            "transactionId",
            "index"
          ],
          "title": "BlockTxInputPreviousOutpointModel"
        },
        "BlockTxModel": {
          "properties": {
            "inputs": {
              "items": {
                "$ref": "#/components/schemas/BlockTxInputModel"
              },
              "type": "array",
              "title": "Inputs"
            },
            "outputs": {
              "items": {
                "$ref": "#/components/schemas/BlockTxOutputModel"
              },
              "type": "array",
              "title": "Outputs"
            },
            "subnetworkId": {
              "type": "string",
              "title": "Subnetworkid"
            },
            "payload": {
              "type": "string",
              "title": "Payload"
            },
            "verboseData": {
              "$ref": "#/components/schemas/BlockTxVerboseDataModel"
            },
            "lockTime": {
              "type": "integer",
              "title": "Locktime"
            },
            "gas": {
              "type": "integer",
              "title": "Gas"
            },
            "mass": {
              "type": "integer",
              "title": "Mass"
            },
            "version": {
              "type": "integer",
              "title": "Version"
            }
          },
          "type": "object",
          "required": [
            "verboseData"
          ],
          "title": "BlockTxModel"
        },
        "BlockTxOutputModel": {
          "properties": {
            "amount": {
              "type": "integer",
              "title": "Amount"
            },
            "scriptPublicKey": {
              "$ref": "#/components/schemas/BlockTxOutputScriptPublicKeyModel"
            },
            "verboseData": {
              "$ref": "#/components/schemas/BlockTxOutputVerboseDataModel"
            }
          },
          "type": "object",
          "title": "BlockTxOutputModel"
        },
        "BlockTxOutputScriptPublicKeyModel": {
          "properties": {
            "scriptPublicKey": {
              "type": "string",
              "title": "Scriptpublickey"
            },
            "version": {
              "type": "integer",
              "title": "Version"
            }
          },
          "type": "object",
          "title": "BlockTxOutputScriptPublicKeyModel"
        },
        "BlockTxOutputVerboseDataModel": {
          "properties": {
            "scriptPublicKeyType": {
              "type": "string",
              "title": "Scriptpublickeytype"
            },
            "scriptPublicKeyAddress": {
              "type": "string",
              "title": "Scriptpublickeyaddress"
            }
          },
          "type": "object",
          "title": "BlockTxOutputVerboseDataModel"
        },
        "BlockTxVerboseDataModel": {
          "properties": {
            "transactionId": {
              "type": "string",
              "title": "Transactionid"
            },
            "hash": {
              "type": "string",
              "title": "Hash"
            },
            "computeMass": {
              "type": "integer",
              "title": "Computemass"
            },
            "blockHash": {
              "type": "string",
              "title": "Blockhash"
            },
            "blockTime": {
              "type": "integer",
              "title": "Blocktime"
            }
          },
          "type": "object",
          "required": [
            "transactionId"
          ],
          "title": "BlockTxVerboseDataModel"
        },
        "BlockdagResponse": {
          "properties": {
            "networkName": {
              "type": "string",
              "title": "Networkname",
              "example": "kaspa-mainnet"
            },
            "blockCount": {
              "type": "string",
              "title": "Blockcount",
              "example": "260890"
            },
            "headerCount": {
              "type": "string",
              "title": "Headercount",
              "example": "2131312"
            },
            "tipHashes": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "title": "Tiphashes",
              "example": [
                "78273854a739e3e379dfd34a262bbe922400d8e360e30e3f31228519a334350a"
              ]
            },
            "difficulty": {
              "type": "number",
              "title": "Difficulty",
              "example": 3870677677777.2
            },
            "pastMedianTime": {
              "type": "string",
              "title": "Pastmediantime",
              "example": "1656455670700"
            },
            "virtualParentHashes": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "title": "Virtualparenthashes",
              "example": [
                "78273854a739e3e379dfd34a262bbe922400d8e360e30e3f31228519a334350a"
              ]
            },
            "pruningPointHash": {
              "type": "string",
              "title": "Pruningpointhash",
              "example": "5d32a9403273a34b6551b84340a1459ddde2ae6ba59a47987a6374340ba41d5d"
            },
            "virtualDaaScore": {
              "type": "string",
              "title": "Virtualdaascore",
              "example": "19989141"
            },
            "sink": {
              "type": "string",
              "title": "Sink",
              "example": "366b1cf51146cc002672b79948634751a2914a2cc9e273afe358bdc1ae19dce9"
            }
          },
          "type": "object",
          "required": [
            "networkName",
            "blockCount",
            "headerCount",
            "tipHashes",
            "difficulty",
            "pastMedianTime",
            "virtualParentHashes",
            "pruningPointHash",
            "virtualDaaScore",
            "sink"
          ],
          "title": "BlockdagResponse"
        },
        "BlueScoreResponse": {
          "properties": {
            "blueScore": {
              "type": "integer",
              "title": "Bluescore",
              "default": 260890
            }
          },
          "type": "object",
          "title": "BlueScoreResponse"
        },
        "DBCheckStatus": {
          "properties": {
            "isSynced": {
              "type": "boolean",
              "title": "Issynced",
              "default": true
            },
            "blueScore": {
              "type": "integer",
              "title": "Bluescore"
            },
            "blueScoreDiff": {
              "type": "integer",
              "title": "Bluescorediff"
            },
            "acceptedTxBlockTime": {
              "type": "integer",
              "title": "Acceptedtxblocktime"
            },
            "acceptedTxBlockTimeDiff": {
              "type": "integer",
              "title": "Acceptedtxblocktimediff"
            }
          },
          "type": "object",
          "title": "DBCheckStatus"
        },
        "ExtraModel": {
          "properties": {
            "color": {
              "type": "string",
              "title": "Color"
            },
            "minerAddress": {
              "type": "string",
              "title": "Mineraddress"
            },
            "minerInfo": {
              "type": "string",
              "title": "Minerinfo"
            }
          },
          "type": "object",
          "title": "ExtraModel"
        },
        "FeeEstimateBucket": {
          "properties": {
            "feerate": {
              "type": "integer",
              "title": "Feerate",
              "default": 1
            },
            "estimatedSeconds": {
              "type": "number",
              "title": "Estimatedseconds",
              "default": 0.004
            }
          },
          "type": "object",
          "title": "FeeEstimateBucket"
        },
        "FeeEstimateResponse": {
          "properties": {
            "priorityBucket": {
              "$ref": "#/components/schemas/FeeEstimateBucket"
            },
            "normalBuckets": {
              "items": {
                "$ref": "#/components/schemas/FeeEstimateBucket"
              },
              "type": "array",
              "title": "Normalbuckets"
            },
            "lowBuckets": {
              "items": {
                "$ref": "#/components/schemas/FeeEstimateBucket"
              },
              "type": "array",
              "title": "Lowbuckets"
            }
          },
          "type": "object",
          "required": [
            "priorityBucket",
            "normalBuckets",
            "lowBuckets"
          ],
          "title": "FeeEstimateResponse"
        },
        "HTTPValidationError": {
          "properties": {
            "detail": {
              "items": {
                "$ref": "#/components/schemas/ValidationError"
              },
              "type": "array",
              "title": "Detail"
            }
          },
          "type": "object",
          "title": "HTTPValidationError"
        },
        "HalvingResponse": {
          "properties": {
            "nextHalvingTimestamp": {
              "type": "integer",
              "title": "Nexthalvingtimestamp",
              "default": 1662837270000
            },
            "nextHalvingDate": {
              "type": "string",
              "title": "Nexthalvingdate",
              "default": "2022-09-10 19:38:52 UTC"
            },
            "nextHalvingAmount": {
              "type": "number",
              "title": "Nexthalvingamount",
              "default": 155.123123
            }
          },
          "type": "object",
          "title": "HalvingResponse"
        },
        "HashrateHistoryResponse": {
          "properties": {
            "daaScore": {
              "type": "integer",
              "title": "Daascore"
            },
            "blueScore": {
              "type": "integer",
              "title": "Bluescore"
            },
            "timestamp": {
              "type": "integer",
              "title": "Timestamp"
            },
            "date_time": {
              "type": "string",
              "title": "Date Time"
            },
            "bits": {
              "type": "integer",
              "title": "Bits"
            },
            "difficulty": {
              "type": "integer",
              "title": "Difficulty"
            },
            "hashrate_kh": {
              "type": "integer",
              "title": "Hashrate Kh"
            }
          },
          "type": "object",
          "required": [
            "daaScore",
            "blueScore",
            "timestamp",
            "date_time",
            "difficulty",
            "hashrate_kh"
          ],
          "title": "HashrateHistoryResponse"
        },
        "HashrateResponse": {
          "properties": {
            "hashrate": {
              "type": "number",
              "title": "Hashrate",
              "default": 12000132
            }
          },
          "type": "object",
          "title": "HashrateResponse"
        },
        "HealthResponse": {
          "properties": {
            "kaspadServers": {
              "items": {
                "$ref": "#/components/schemas/KaspadResponse"
              },
              "type": "array",
              "title": "Kaspadservers"
            },
            "database": {
              "$ref": "#/components/schemas/DBCheckStatus"
            }
          },
          "type": "object",
          "required": [
            "kaspadServers",
            "database"
          ],
          "title": "HealthResponse"
        },
        "KaspadInfoResponse": {
          "properties": {
            "mempoolSize": {
              "type": "string",
              "title": "Mempoolsize",
              "default": "1"
            },
            "serverVersion": {
              "type": "string",
              "title": "Serverversion",
              "default": "0.12.2"
            },
            "isUtxoIndexed": {
              "type": "boolean",
              "title": "Isutxoindexed",
              "default": true
            },
            "isSynced": {
              "type": "boolean",
              "title": "Issynced",
              "default": true
            },
            "p2pIdHashed": {
              "type": "string",
              "title": "P2Pidhashed",
              "default": "36a17cd8644eef34fc7fe4719655e06dbdf117008900c46975e66c35acd09b01"
            }
          },
          "type": "object",
          "title": "KaspadInfoResponse"
        },
        "KaspadResponse": {
          "properties": {
            "kaspadHost": {
              "type": "string",
              "title": "Kaspadhost"
            },
            "serverVersion": {
              "type": "string",
              "title": "Serverversion",
              "default": "0.12.6"
            },
            "isUtxoIndexed": {
              "type": "boolean",
              "title": "Isutxoindexed",
              "default": true
            },
            "isSynced": {
              "type": "boolean",
              "title": "Issynced",
              "default": true
            },
            "p2pId": {
              "type": "string",
              "title": "P2Pid",
              "default": "1231312"
            },
            "blueScore": {
              "type": "integer",
              "title": "Bluescore",
              "default": 0
            }
          },
          "type": "object",
          "title": "KaspadResponse"
        },
        "MarketCapResponse": {
          "properties": {
            "marketcap": {
              "type": "integer",
              "title": "Marketcap",
              "default": 12000132
            }
          },
          "type": "object",
          "title": "MarketCapResponse"
        },
        "MaxHashrateResponse": {
          "properties": {
            "hashrate": {
              "type": "number",
              "title": "Hashrate",
              "default": 12000132
            },
            "blockheader": {
              "$ref": "#/components/schemas/endpoints__get_hashrate__BlockHeader"
            }
          },
          "type": "object",
          "required": [
            "blockheader"
          ],
          "title": "MaxHashrateResponse"
        },
        "OutpointModel": {
          "properties": {
            "transactionId": {
              "type": "string",
              "title": "Transactionid",
              "default": "ef62efbc2825d3ef9ec1cf9b80506876ac077b64b11a39c8ef5e028415444dc9"
            },
            "index": {
              "type": "integer",
              "title": "Index",
              "default": 0
            }
          },
          "type": "object",
          "title": "OutpointModel"
        },
        "ParentHashModel": {
          "properties": {
            "parentHashes": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "title": "Parenthashes",
              "default": [
                "580f65c8da9d436480817f6bd7c13eecd9223b37f0d34ae42fb17e1e9fda397e"
              ]
            }
          },
          "type": "object",
          "title": "ParentHashModel"
        },
        "PreviousOutpointLookupMode": {
          "type": "string",
          "enum": [
            "no",
            "light",
            "full"
          ],
          "title": "PreviousOutpointLookupMode",
          "description": "An enumeration."
        },
        "PriceResponse": {
          "properties": {
            "price": {
              "type": "number",
              "title": "Price",
              "default": 0.025235
            }
          },
          "type": "object",
          "title": "PriceResponse"
        },
        "ScriptPublicKeyModel": {
          "properties": {
            "scriptPublicKey": {
              "type": "string",
              "title": "Scriptpublickey",
              "default": "20c5629ce85f6618cd3ed1ac1c99dc6d3064ed244013555c51385d9efab0d0072fac"
            }
          },
          "type": "object",
          "title": "ScriptPublicKeyModel"
        },
        "SubmitTransactionRequest": {
          "properties": {
            "transaction": {
              "$ref": "#/components/schemas/SubmitTxModel"
            },
            "allowOrphan": {
              "type": "boolean",
              "title": "Alloworphan",
              "default": false
            }
          },
          "type": "object",
          "required": [
            "transaction"
          ],
          "title": "SubmitTransactionRequest"
        },
        "SubmitTransactionResponse": {
          "properties": {
            "transactionId": {
              "type": "string",
              "title": "Transactionid"
            },
            "error": {
              "type": "string",
              "title": "Error"
            }
          },
          "type": "object",
          "title": "SubmitTransactionResponse"
        },
        "SubmitTxInput": {
          "properties": {
            "previousOutpoint": {
              "$ref": "#/components/schemas/SubmitTxOutpoint"
            },
            "signatureScript": {
              "type": "string",
              "title": "Signaturescript"
            },
            "sequence": {
              "type": "integer",
              "title": "Sequence"
            },
            "sigOpCount": {
              "type": "integer",
              "title": "Sigopcount"
            }
          },
          "type": "object",
          "required": [
            "previousOutpoint",
            "signatureScript",
            "sequence",
            "sigOpCount"
          ],
          "title": "SubmitTxInput"
        },
        "SubmitTxModel": {
          "properties": {
            "version": {
              "type": "integer",
              "title": "Version"
            },
            "inputs": {
              "items": {
                "$ref": "#/components/schemas/SubmitTxInput"
              },
              "type": "array",
              "title": "Inputs"
            },
            "outputs": {
              "items": {
                "$ref": "#/components/schemas/SubmitTxOutput"
              },
              "type": "array",
              "title": "Outputs"
            },
            "lockTime": {
              "type": "integer",
              "title": "Locktime",
              "default": 0
            },
            "subnetworkId": {
              "type": "string",
              "title": "Subnetworkid"
            }
          },
          "type": "object",
          "required": [
            "version",
            "inputs",
            "outputs"
          ],
          "title": "SubmitTxModel"
        },
        "SubmitTxOutpoint": {
          "properties": {
            "transactionId": {
              "type": "string",
              "title": "Transactionid"
            },
            "index": {
              "type": "integer",
              "title": "Index"
            }
          },
          "type": "object",
          "required": [
            "transactionId",
            "index"
          ],
          "title": "SubmitTxOutpoint"
        },
        "SubmitTxOutput": {
          "properties": {
            "amount": {
              "type": "integer",
              "title": "Amount"
            },
            "scriptPublicKey": {
              "$ref": "#/components/schemas/SubmitTxScriptPublicKey"
            }
          },
          "type": "object",
          "required": [
            "amount",
            "scriptPublicKey"
          ],
          "title": "SubmitTxOutput"
        },
        "SubmitTxScriptPublicKey": {
          "properties": {
            "version": {
              "type": "integer",
              "title": "Version"
            },
            "scriptPublicKey": {
              "type": "string",
              "title": "Scriptpublickey"
            }
          },
          "type": "object",
          "required": [
            "version",
            "scriptPublicKey"
          ],
          "title": "SubmitTxScriptPublicKey"
        },
        "TransactionCount": {
          "properties": {
            "total": {
              "type": "integer",
              "title": "Total"
            },
            "limit_exceeded": {
              "type": "boolean",
              "title": "Limit Exceeded"
            }
          },
          "type": "object",
          "required": [
            "total",
            "limit_exceeded"
          ],
          "title": "TransactionCount"
        },
        "TxAcceptanceRequest": {
          "properties": {
            "transactionIds": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "title": "Transactionids",
              "default": [
                "b9382bdee4aa364acf73eda93914eaae61d0e78334d1b8a637ab89ef5e224e41",
                "1e098b3830c994beb28768f7924a38286cec16e85e9757e0dc3574b85f624c34",
                "6dd5ee1add449c60d2c2b9545a8dfca7cfbc9a29ce2d3f3ec8bbde14dd97610d"
              ]
            }
          },
          "type": "object",
          "title": "TxAcceptanceRequest"
        },
        "TxAcceptanceResponse": {
          "properties": {
            "transactionId": {
              "type": "string",
              "title": "Transactionid",
              "default": "b9382bdee4aa364acf73eda93914eaae61d0e78334d1b8a637ab89ef5e224e41"
            },
            "accepted": {
              "type": "boolean",
              "title": "Accepted"
            }
          },
          "type": "object",
          "required": [
            "accepted"
          ],
          "title": "TxAcceptanceResponse"
        },
        "TxIdResponse": {
          "properties": {
            "address": {
              "type": "string",
              "title": "Address"
            },
            "active": {
              "type": "boolean",
              "title": "Active"
            }
          },
          "type": "object",
          "required": [
            "address",
            "active"
          ],
          "title": "TxIdResponse"
        },
        "TxInput": {
          "properties": {
            "transaction_id": {
              "type": "string",
              "title": "Transaction Id"
            },
            "index": {
              "type": "integer",
              "title": "Index"
            },
            "previous_outpoint_hash": {
              "type": "string",
              "title": "Previous Outpoint Hash"
            },
            "previous_outpoint_index": {
              "type": "string",
              "title": "Previous Outpoint Index"
            },
            "previous_outpoint_resolved": {
              "$ref": "#/components/schemas/TxOutput"
            },
            "previous_outpoint_address": {
              "type": "string",
              "title": "Previous Outpoint Address"
            },
            "previous_outpoint_amount": {
              "type": "integer",
              "title": "Previous Outpoint Amount"
            },
            "signature_script": {
              "type": "string",
              "title": "Signature Script"
            },
            "sig_op_count": {
              "type": "string",
              "title": "Sig Op Count"
            }
          },
          "type": "object",
          "required": [
            "transaction_id",
            "index",
            "previous_outpoint_hash",
            "previous_outpoint_index"
          ],
          "title": "TxInput"
        },
        "TxMass": {
          "properties": {
            "mass": {
              "type": "integer",
              "title": "Mass"
            },
            "storage_mass": {
              "type": "integer",
              "title": "Storage Mass"
            },
            "compute_mass": {
              "type": "integer",
              "title": "Compute Mass"
            }
          },
          "type": "object",
          "required": [
            "mass",
            "storage_mass",
            "compute_mass"
          ],
          "title": "TxMass"
        },
        "TxModel": {
          "properties": {
            "subnetwork_id": {
              "type": "string",
              "title": "Subnetwork Id"
            },
            "transaction_id": {
              "type": "string",
              "title": "Transaction Id"
            },
            "hash": {
              "type": "string",
              "title": "Hash"
            },
            "mass": {
              "type": "string",
              "title": "Mass"
            },
            "payload": {
              "type": "string",
              "title": "Payload"
            },
            "block_hash": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "title": "Block Hash"
            },
            "block_time": {
              "type": "integer",
              "title": "Block Time"
            },
            "is_accepted": {
              "type": "boolean",
              "title": "Is Accepted"
            },
            "accepting_block_hash": {
              "type": "string",
              "title": "Accepting Block Hash"
            },
            "accepting_block_blue_score": {
              "type": "integer",
              "title": "Accepting Block Blue Score"
            },
            "accepting_block_time": {
              "type": "integer",
              "title": "Accepting Block Time"
            },
            "inputs": {
              "items": {
                "$ref": "#/components/schemas/TxInput"
              },
              "type": "array",
              "title": "Inputs"
            },
            "outputs": {
              "items": {
                "$ref": "#/components/schemas/TxOutput"
              },
              "type": "array",
              "title": "Outputs"
            }
          },
          "type": "object",
          "title": "TxModel"
        },
        "TxOutput": {
          "properties": {
            "transaction_id": {
              "type": "string",
              "title": "Transaction Id"
            },
            "index": {
              "type": "integer",
              "title": "Index"
            },
            "amount": {
              "type": "integer",
              "title": "Amount"
            },
            "script_public_key": {
              "type": "string",
              "title": "Script Public Key"
            },
            "script_public_key_address": {
              "type": "string",
              "title": "Script Public Key Address"
            },
            "script_public_key_type": {
              "type": "string",
              "title": "Script Public Key Type"
            },
            "accepting_block_hash": {
              "type": "string",
              "title": "Accepting Block Hash"
            }
          },
          "type": "object",
          "required": [
            "transaction_id",
            "index",
            "amount"
          ],
          "title": "TxOutput"
        },
        "TxSearch": {
          "properties": {
            "transactionIds": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "title": "Transactionids"
            },
            "acceptingBlueScores": {
              "$ref": "#/components/schemas/TxSearchAcceptingBlueScores"
            }
          },
          "type": "object",
          "title": "TxSearch"
        },
        "TxSearchAcceptingBlueScores": {
          "properties": {
            "gte": {
              "type": "integer",
              "title": "Gte"
            },
            "lt": {
              "type": "integer",
              "title": "Lt"
            }
          },
          "type": "object",
          "required": [
            "gte",
            "lt"
          ],
          "title": "TxSearchAcceptingBlueScores"
        },
        "UtxoModel": {
          "properties": {
            "amount": {
              "type": "string",
              "title": "Amount",
              "default": [
                "11501593788"
              ]
            },
            "scriptPublicKey": {
              "$ref": "#/components/schemas/ScriptPublicKeyModel"
            },
            "blockDaaScore": {
              "type": "string",
              "title": "Blockdaascore",
              "default": "18867232"
            },
            "isCoinbase": {
              "type": "boolean",
              "title": "Iscoinbase",
              "default": false
            }
          },
          "type": "object",
          "required": [
            "scriptPublicKey"
          ],
          "title": "UtxoModel"
        },
        "UtxoRequest": {
          "properties": {
            "addresses": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "title": "Addresses",
              "default": [
                "kaspatest:qpqz2vxj23kvh0m73ta2jjn2u4cv4tlufqns2eap8mxyyt0rvrxy6ejkful67"
              ]
            }
          },
          "type": "object",
          "title": "UtxoRequest"
        },
        "UtxoResponse": {
          "properties": {
            "address": {
              "type": "string",
              "title": "Address",
              "default": "kaspatest:qpqz2vxj23kvh0m73ta2jjn2u4cv4tlufqns2eap8mxyyt0rvrxy6ejkful67"
            },
            "outpoint": {
              "$ref": "#/components/schemas/OutpointModel"
            },
            "utxoEntry": {
              "$ref": "#/components/schemas/UtxoModel"
            }
          },
          "type": "object",
          "required": [
            "outpoint",
            "utxoEntry"
          ],
          "title": "UtxoResponse"
        },
        "ValidationError": {
          "properties": {
            "loc": {
              "items": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "integer"
                  }
                ]
              },
              "type": "array",
              "title": "Location"
            },
            "msg": {
              "type": "string",
              "title": "Message"
            },
            "type": {
              "type": "string",
              "title": "Error Type"
            }
          },
          "type": "object",
          "required": [
            "loc",
            "msg",
            "type"
          ],
          "title": "ValidationError"
        },
        "VcBlockModel": {
          "properties": {
            "hash": {
              "type": "string",
              "title": "Hash"
            },
            "blue_score": {
              "type": "integer",
              "title": "Blue Score"
            },
            "daa_score": {
              "type": "integer",
              "title": "Daa Score"
            },
            "timestamp": {
              "type": "integer",
              "title": "Timestamp"
            },
            "transactions": {
              "items": {
                "$ref": "#/components/schemas/VcTxModel"
              },
              "type": "array",
              "title": "Transactions"
            }
          },
          "type": "object",
          "required": [
            "hash",
            "blue_score"
          ],
          "title": "VcBlockModel"
        },
        "VcTxInput": {
          "properties": {
            "previous_outpoint_hash": {
              "type": "string",
              "title": "Previous Outpoint Hash"
            },
            "previous_outpoint_index": {
              "type": "integer",
              "title": "Previous Outpoint Index"
            },
            "previous_outpoint_script": {
              "type": "string",
              "title": "Previous Outpoint Script"
            },
            "previous_outpoint_address": {
              "type": "string",
              "title": "Previous Outpoint Address"
            },
            "previous_outpoint_amount": {
              "type": "integer",
              "title": "Previous Outpoint Amount"
            }
          },
          "type": "object",
          "required": [
            "previous_outpoint_hash",
            "previous_outpoint_index"
          ],
          "title": "VcTxInput"
        },
        "VcTxModel": {
          "properties": {
            "transaction_id": {
              "type": "string",
              "title": "Transaction Id"
            },
            "is_accepted": {
              "type": "boolean",
              "title": "Is Accepted",
              "default": true
            },
            "inputs": {
              "items": {
                "$ref": "#/components/schemas/VcTxInput"
              },
              "type": "array",
              "title": "Inputs"
            },
            "outputs": {
              "items": {
                "$ref": "#/components/schemas/VcTxOutput"
              },
              "type": "array",
              "title": "Outputs"
            }
          },
          "type": "object",
          "required": [
            "transaction_id"
          ],
          "title": "VcTxModel"
        },
        "VcTxOutput": {
          "properties": {
            "script_public_key": {
              "type": "string",
              "title": "Script Public Key"
            },
            "script_public_key_address": {
              "type": "string",
              "title": "Script Public Key Address"
            },
            "amount": {
              "type": "integer",
              "title": "Amount"
            }
          },
          "type": "object",
          "required": [
            "script_public_key",
            "script_public_key_address",
            "amount"
          ],
          "title": "VcTxOutput"
        },
        "VerboseDataModel": {
          "properties": {
            "hash": {
              "type": "string",
              "title": "Hash",
              "default": "18c7afdf8f447ca06adb8b4946dc45f5feb1188c7d177da6094dfbc760eca699"
            },
            "difficulty": {
              "type": "number",
              "title": "Difficulty",
              "default": [4102204523252.94]
            },
            "selectedParentHash": {
              "type": "string",
              "title": "Selectedparenthash",
              "default": "580f65c8da9d436480817f6bd7c13eecd9223b37f0d34ae42fb17e1e9fda397e"
            },
            "transactionIds": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "title": "Transactionids",
              "default": [
                "533f8314bf772259fe517f53507a79ebe61c8c6a11748d93a0835551233b3311"
              ]
            },
            "blueScore": {
              "type": "string",
              "title": "Bluescore",
              "default": "18483232"
            },
            "childrenHashes": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "title": "Childrenhashes"
            },
            "mergeSetBluesHashes": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "title": "Mergesetblueshashes",
              "default": []
            },
            "mergeSetRedsHashes": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "title": "Mergesetredshashes",
              "default": []
            },
            "isChainBlock": {
              "type": "boolean",
              "title": "Ischainblock",
              "default": false
            }
          },
          "type": "object",
          "title": "VerboseDataModel"
        },
        "endpoints__get_blocks__BlockHeader": {
          "properties": {
            "version": {
              "type": "integer",
              "title": "Version",
              "default": 1
            },
            "hashMerkleRoot": {
              "type": "string",
              "title": "Hashmerkleroot",
              "default": "e6641454e16cff4f232b899564eeaa6e480b66069d87bee6a2b2476e63fcd887"
            },
            "acceptedIdMerkleRoot": {
              "type": "string",
              "title": "Acceptedidmerkleroot",
              "default": "9bab45b027a0b2b47135b6f6f866e5e4040fc1fdf2fe56eb0c90a603ce86092b"
            },
            "utxoCommitment": {
              "type": "string",
              "title": "Utxocommitment",
              "default": "236d5f9ffd19b317a97693322c3e2ae11a44b5df803d71f1ccf6c2393bc6143c"
            },
            "timestamp": {
              "type": "string",
              "title": "Timestamp",
              "default": "1656450648874"
            },
            "bits": {
              "type": "integer",
              "title": "Bits",
              "default": 455233226
            },
            "nonce": {
              "type": "string",
              "title": "Nonce",
              "default": "14797571275553019490"
            },
            "daaScore": {
              "type": "string",
              "title": "Daascore",
              "default": "19984482"
            },
            "blueWork": {
              "type": "string",
              "title": "Bluework",
              "default": "2d1b3f04f8a0dcd31"
            },
            "parents": {
              "items": {
                "$ref": "#/components/schemas/ParentHashModel"
              },
              "type": "array",
              "title": "Parents"
            },
            "blueScore": {
              "type": "string",
              "title": "Bluescore",
              "default": "18483232"
            },
            "pruningPoint": {
              "type": "string",
              "title": "Pruningpoint",
              "default": "5d32a9403273a34b6551b84340a1459ddde2ae6ba59a47987a6374340ba41d5d"
            }
          },
          "type": "object",
          "title": "BlockHeader"
        },
        "endpoints__get_hashrate__BlockHeader": {
          "properties": {
            "hash": {
              "type": "string",
              "title": "Hash",
              "default": "e6641454e16cff4f232b899564eeaa6e480b66069d87bee6a2b2476e63fcd887"
            },
            "timestamp": {
              "type": "string",
              "title": "Timestamp",
              "default": "1656450648874"
            },
            "difficulty": {
              "type": "integer",
              "title": "Difficulty",
              "default": 1212312312
            },
            "daaScore": {
              "type": "string",
              "title": "Daascore",
              "default": "19984482"
            },
            "blueScore": {
              "type": "string",
              "title": "Bluescore",
              "default": "18483232"
            }
          },
          "type": "object",
          "title": "BlockHeader"
        }
      }
    }
  }