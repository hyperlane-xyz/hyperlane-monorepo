/*
 * Kaspa REST-API server
 *
 * This server is to communicate with kaspa network via REST-API
 *
 * The version of the OpenAPI document: a6a9569
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct VerboseDataModel {
    #[serde(rename = "hash", skip_serializing_if = "Option::is_none")]
    pub hash: Option<String>,
    #[serde(rename = "difficulty", skip_serializing_if = "Option::is_none")]
    pub difficulty: Option<f64>,
    #[serde(rename = "selectedParentHash", skip_serializing_if = "Option::is_none")]
    pub selected_parent_hash: Option<String>,
    #[serde(rename = "transactionIds", skip_serializing_if = "Option::is_none")]
    pub transaction_ids: Option<Vec<String>>,
    #[serde(rename = "blueScore", skip_serializing_if = "Option::is_none")]
    pub blue_score: Option<String>,
    #[serde(rename = "childrenHashes", skip_serializing_if = "Option::is_none")]
    pub children_hashes: Option<Vec<String>>,
    #[serde(
        rename = "mergeSetBluesHashes",
        skip_serializing_if = "Option::is_none"
    )]
    pub merge_set_blues_hashes: Option<Vec<String>>,
    #[serde(rename = "mergeSetRedsHashes", skip_serializing_if = "Option::is_none")]
    pub merge_set_reds_hashes: Option<Vec<String>>,
    #[serde(rename = "isChainBlock", skip_serializing_if = "Option::is_none")]
    pub is_chain_block: Option<bool>,
}

impl VerboseDataModel {
    pub fn new() -> VerboseDataModel {
        VerboseDataModel {
            hash: None,
            difficulty: None,
            selected_parent_hash: None,
            transaction_ids: None,
            blue_score: None,
            children_hashes: None,
            merge_set_blues_hashes: None,
            merge_set_reds_hashes: None,
            is_chain_block: None,
        }
    }
}
