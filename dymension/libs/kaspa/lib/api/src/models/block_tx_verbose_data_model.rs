/*
 * Kaspa REST-API server
 *
 * This server is to communicate with kaspa network via REST-API
 *
 * The version of the OpenAPI document: a6a9569
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct BlockTxVerboseDataModel {
    #[serde(rename = "transactionId")]
    pub transaction_id: String,
    #[serde(rename = "hash", skip_serializing_if = "Option::is_none")]
    pub hash: Option<String>,
    #[serde(rename = "computeMass", skip_serializing_if = "Option::is_none")]
    pub compute_mass: Option<i32>,
    #[serde(rename = "blockHash", skip_serializing_if = "Option::is_none")]
    pub block_hash: Option<String>,
    #[serde(rename = "blockTime", skip_serializing_if = "Option::is_none")]
    pub block_time: Option<i32>,
}

impl BlockTxVerboseDataModel {
    pub fn new(transaction_id: String) -> BlockTxVerboseDataModel {
        BlockTxVerboseDataModel {
            transaction_id,
            hash: None,
            compute_mass: None,
            block_hash: None,
            block_time: None,
        }
    }
}

