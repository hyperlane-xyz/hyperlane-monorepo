/*
 * Kaspa REST-API server
 *
 * This server is to communicate with kaspa network via REST-API
 *
 * The version of the OpenAPI document: a6a9569
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct DbCheckStatus {
    #[serde(rename = "isSynced", skip_serializing_if = "Option::is_none")]
    pub is_synced: Option<bool>,
    #[serde(rename = "blueScore", skip_serializing_if = "Option::is_none")]
    pub blue_score: Option<i32>,
    #[serde(rename = "blueScoreDiff", skip_serializing_if = "Option::is_none")]
    pub blue_score_diff: Option<i32>,
    #[serde(rename = "acceptedTxBlockTime", skip_serializing_if = "Option::is_none")]
    pub accepted_tx_block_time: Option<i32>,
    #[serde(rename = "acceptedTxBlockTimeDiff", skip_serializing_if = "Option::is_none")]
    pub accepted_tx_block_time_diff: Option<i32>,
}

impl DbCheckStatus {
    pub fn new() -> DbCheckStatus {
        DbCheckStatus {
            is_synced: None,
            blue_score: None,
            blue_score_diff: None,
            accepted_tx_block_time: None,
            accepted_tx_block_time_diff: None,
        }
    }
}

