/*
 * Kaspa REST-API server
 *
 * This server is to communicate with kaspa network via REST-API
 *
 * The version of the OpenAPI document: a6a9569
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TxOutput {
    #[serde(rename = "transaction_id")]
    pub transaction_id: String,
    #[serde(rename = "index")]
    pub index: i32,
    #[serde(rename = "amount")]
    pub amount: i32,
    #[serde(rename = "script_public_key", skip_serializing_if = "Option::is_none")]
    pub script_public_key: Option<String>,
    #[serde(rename = "script_public_key_address", skip_serializing_if = "Option::is_none")]
    pub script_public_key_address: Option<String>,
    #[serde(rename = "script_public_key_type", skip_serializing_if = "Option::is_none")]
    pub script_public_key_type: Option<String>,
    #[serde(rename = "accepting_block_hash", skip_serializing_if = "Option::is_none")]
    pub accepting_block_hash: Option<String>,
}

impl TxOutput {
    pub fn new(transaction_id: String, index: i32, amount: i32) -> TxOutput {
        TxOutput {
            transaction_id,
            index,
            amount,
            script_public_key: None,
            script_public_key_address: None,
            script_public_key_type: None,
            accepting_block_hash: None,
        }
    }
}

