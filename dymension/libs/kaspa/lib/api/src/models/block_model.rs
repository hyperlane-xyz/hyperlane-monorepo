/*
 * Kaspa REST-API server
 *
 * This server is to communicate with kaspa network via REST-API
 *
 * The version of the OpenAPI document: a6a9569
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct BlockModel {
    #[serde(rename = "header")]
    pub header: Box<models::EndpointsGetBlocksBlockHeader>,
    #[serde(rename = "transactions", skip_serializing_if = "Option::is_none")]
    pub transactions: Option<Vec<models::BlockTxModel>>,
    #[serde(rename = "verboseData")]
    pub verbose_data: Box<models::VerboseDataModel>,
    #[serde(rename = "extra", skip_serializing_if = "Option::is_none")]
    pub extra: Option<Box<models::ExtraModel>>,
}

impl BlockModel {
    pub fn new(header: models::EndpointsGetBlocksBlockHeader, verbose_data: models::VerboseDataModel) -> BlockModel {
        BlockModel {
            header: Box::new(header),
            transactions: None,
            verbose_data: Box::new(verbose_data),
            extra: None,
        }
    }
}

